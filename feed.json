{
    "version": "https://jsonfeed.org/version/1",
    "title": "Celotehan seorang Software Quality Development Engineer in Test - Agile Testing, Selenium, Appium, Ruby",
    "description": "",
    "home_page_url": "https://fachrul.id",
    "feed_url": "https://fachrul.id/feed.json",
    "user_comment": "",
    "icon": "https://fachrul.id/media/website/profile_fachrul_paperprint_300.jpg",
    "author": {
        "name": "Fachrul Choliluddin"
    },
    "items": [
        {
            "id": "https://fachrul.id/belajar-pytest-framework-1/",
            "url": "https://fachrul.id/belajar-pytest-framework-1/",
            "title": "Pytest: Memahami Cara Kerja Testing Framework (bagian 1)",
            "summary": "Apa itu pytest?icon PytestAdalah kerangka kerja dari pengujian pada kode python, bisa dibilang semua test framework (junit, testng, rspec, dkk) adalah jantung nya dari segala test automation framework, pytest bisa digunakan pada berbagai tipe dan level dari software testing, sebenarnya ada berbagai alternatif testing tools&hellip;",
            "content_html": "<h2 id=\"mcetoc_1e8ifufs10\">Apa itu pytest?</h2>\n<figure class=\"post__image post__image--left\" ><img src=\"https://fachrul.id/media/posts/34/pytest1.png\" alt=\"\" width=\"150\" height=\"143\">\n<figcaption >icon Pytest</figcaption>\n</figure>\n<p>Adalah kerangka kerja dari pengujian pada kode python, bisa dibilang semua test framework (<em><strong>junit, testng, rspec</strong></em>, dkk) adalah jantung nya dari segala test automation framework, pytest bisa digunakan pada berbagai tipe dan level dari software testing, sebenarnya ada berbagai alternatif testing tools pada python yang lainya seperti uniitest ataupun nose, tapi banyak open source project yang mulai \"hijrah\" mengadopsi pytest karena fitur yang ada pada <a href=\"https://docs.pytest.org/en/latest/\">pytest</a> yang menarik diantara yang lainya yaitu:</p>\n<ul>\n<li>Mudah membuat kode test dari pengujian sederhana hingga pengujian kompeks tetap mudah menuliskan kode pengujiannya dengan pytest</li>\n<li>Mudah dibaca</li>\n<li>Mudah dipelajari</li>\n<li>Kode yang Pythonic banget</li>\n<li>Bahkan pytest bisa menjalankan kode pengujian yang ditulis dengan format unittest ataupun nose</li>\n<li>Komunitas yang sangat aktif dan pengembangan yang terjaga</li>\n</ul>\n<p> </p>\n<hr>\n<p>Post ini merupakan rangkaian post mengenai membuat automationt test dengan python</p>\n<h4 id=\"mcetoc_1e8mtsf4p6\">Daftar isinya:</h4>\n<ol>\n<li><a href=\"https://fachrul.id/mau-belajar-automation-test-dengan-python-mulai-dari-mana/\" target=\"_blank\" rel=\"noopener noreferrer\">Belajar Python dari dasar</a></li>\n<li><a href=\"https://fachrul.id/belajar-pytest-framework-1/\" target=\"_blank\" rel=\"noopener noreferrer\">Memahami cara kerja Pytest (bagian 1)</a> &lt;== Sekarang disini</li>\n<li><a href=\"https://fachrul.id/memulai-automation-test-selenium-python-bagian-1/\" target=\"_blank\" rel=\"noopener noreferrer\">Mulai membuat automation test dengan Selenium</a></li>\n<li><a href=\"https://fachrul.id/selector-locator-strategy-yang-baik/\" target=\"_blank\" rel=\"noopener noreferrer\">Menemukan Element dengan locator strategi yang baik</a></li>\n</ol>\n<hr>\n<p> </p>\n<p>Berikutnya akan kita belajar tentang penggunaan pytest dalam mengembangkan kerangka kerja (framework) pengujian otomatis (automated test) dalam bahasa pemrograman python, dengan menguasai kerangka kerja pengujian di python maka kamu akan dengan mudah mengkombinasikan automated test pada REST API, browser dengan selenium nya ataupun mobile apps dengan appium karena sesungguhnya mereka itu adalah library yang menjadi pelengkap pytest ini 😅 </p>\n<h2 id=\"mcetoc_1e8igll785\">Persiapan Pytest</h2>\n<p>Saya asumsikan python sudah terinstal di komputer kamu, dan tak diperlukan untuk tahu banyak tentang python itu sendiri, karena contoh yang akan saya tunjukan cuma kode sederhana bahkan bisa dibilang terlalu sederhana :D</p>\n<p>Cara installnya cukup menjalankan command berikut pada terminal ataupun command line kamu</p>\n<p><code>pip install pytest</code></p>\n<p>lalu setelah installasi berhasil coba jalankan perintah:</p>\n<p><code>pytest --help</code></p>\n<p>jika installasi benar maka akan memunculkan informasi lengkap tentang cara penggunaan pytest pada command line</p>\n<p>dokumentasi lebih lanjut bisa dilihat di <a href=\"https://docs.pytest.org/en/latest/\">https://docs.pytest.org/en/latest/</a> </p>\n<h2 id=\"mcetoc_1e8ifuj801\">Menjalankan Pytest</h2>\n<p id=\"mcetoc_1e8mm5g730\">Secara aturan (convention) di berbagai macam project pengujian, kode test harus ditaruh didalam directory (folder) /tests/, dan secara otomatis pytest akan menemukan dan mengeksekusi test yang ditemukan dalam proses test discovery seperti berikut:</p>\n<ul>\n<li>Nama file mengandung nama \"<em><strong>test_&lt;sesuatu&gt;.py</strong></em>\" ataupun \"<em><strong>&lt;sesuatu&gt;_test.py</strong></em>\"</li>\n<li>Test class yang dinamai \"<strong><em>Test&lt;Sesuatu&gt;</em></strong>\"</li>\n<li>Test method/function yang diawali \"<strong><em>test_&lt;sesuatu&gt;</em></strong>\", dan menariknya, pytest tidak memerlukan sebuah file <strong><em>__init__.py</em></strong> disemua test directory seperti pada aplikasi python pada umumnya</li>\n</ul>\n<p>cara menjalankan kode test:</p>\n<table>\n<tbody>\n<tr>\n<td><code>$ ​​pytest​​ tests/</code></td>\n<td>menjalankan seluruh test pada directory /tests/</td>\n</tr>\n<tr>\n<td><code>$ ​​pytest​​ tests/nama_file.py</code></td>\n<td>menjalankan test hanya pada module \"nama_file.py\"</td>\n</tr>\n<tr>\n<td><code>$ ​​pytest​​ tests/nama_file.py::TestClass</code></td>\n<td>menjalankan test hanya pada class TestClass di module \"nama_file.py\"</td>\n</tr>\n<tr>\n<td>\n<p><code>$ ​​pytest​​ tests/nama_file::TestClass::test_method</code></p>\n<p>atau jika bentuk test bukan dalam Class</p>\n<p><code>$ ​​pytest​​ tests/nama_file::test_method</code></p>\n</td>\n<td>menjalankan test hanya di method tertentu saja, tidak menjalankan method lainnya</td>\n</tr>\n</tbody>\n</table>\n<p> </p>\n<h2 id=\"mcetoc_1e8mst3vq1\">Marker</h2>\n<p>Penggunaan decorator <em><strong>@pytest.mark.&lt;sesuatu&gt;</strong></em> sangat memudahkan kita dalam mengelompokan test, ibarat tagging dari test, satu test bisa memiliki lebih dari satu mark, dan kitapun bisa mengeksekusi test berdasarkan mark tertentu, seperti berikut</p>\n<p><code>$ ​​pytest​​ -m smoke</code></p>\n<p>maka pytest akan mencari test mana saja yang memiliki tag @pytest.mark.smoke untuk dijalankan</p>\n<p>Informasi lebih lanjut, kamu bisa akses dokumentasinya langsung di terminal dengan perintah</p>\n<p><code>$ ​​pytest​​ --help</code></p>\n<h2 id=\"mcetoc_1e8ifum052\">Menulis Test</h2>\n<p>Kurang lebih contoh kerangka kerja test pada pytest sebagai berikut:</p>\n<figure class=\"post__image post__image--center\" ><img src=\"https://fachrul.id/media/posts/34/Screen-Shot-2020-05-19-at-22.56.59.png\" alt=\"\" width=\"450\" height=\"450\">\n<figcaption >struktur kode pytest pada umumnya</figcaption>\n</figure>\n<p> </p>\n<p>File test berada dibawah directory tests, dan pytest.ini adalah file optional, biasanya terkait dengan configurasi default cara menjalankan pytest, lalu pytest.py ini juga optional, bisa dianggap file ini berisikan dari \"local plugin\" karena semua kode yang ada disini bisa diakses oleh seluruh file test yang dijalankan, sehingga sangat cocok untuk menaruh kode yang bisa di reuse antar test</p>\n<p>Pada kesempatan kali ini sebagai contoh sederhana dalam mencoba pytest, buatlah sebuah file /tests/test_math.py yang di dalamnya isinya sebagai berikut:</p>\n<pre><code class=\"language-python\">def test_pertambahan():\n    assert 1 + 11 == 12\n    \n    \nclass TestHimpunan:\n    def test_persamaan(self):\n        assert (1,2,3) == (1,2,3)\n</code></pre>\n<p id=\"mcetoc_1e8mn0coi1\">lalu cara menjalankan nya pada terminal dengan perintah sebagai berikut:</p>\n<p><code>pytest tests/test_math.py</code></p>\n<p>Output yang dihasilkan kurang lebih seperti berikut:</p>\n<figure class=\"post__image post__image--center\" ><img src=\"https://fachrul.id/media/posts/34/Screen-Shot-2020-05-19-at-22.21.54.png\" alt=\"\" width=\"1024\" height=\"538\">\n<figcaption >output test berhasil</figcaption>\n</figure>\n<p>Ok kita bahas ya, pada contoh diatas saya menjalankan 2 test pada file <em><strong>test_math.py</strong></em> yaitu <em><strong>def test_pertambahan</strong></em> dan <strong><em>def test_persamaan</em></strong>, disini saya menunjukan bahwa pytest support bentuk kode pengujian yang dituliskan sebagai function mandiri atau method pada class, tidak ada perbedaan signifikan, hanya pengelompokan test saja menurut saya.</p>\n<p>Dan jika ditilik lagi, jika test berjalan baik dan passed akan ditandai dengan simbol titik warna hijau (di windows gada warnanya) pada output console dan jika failed ditandai dengan huruf F warna merah, disertai dengan informasi pelengkapnya.</p>\n<p>agar lebih jelas lagi mari kita coba membuat test gagal dengan mengubah nilai pada assertnya, dan agar tampilan output console lebih informatif, jalankan perintah <code>pytest -v tests/test_math.py</code> lalu perhatikan error message yang ditampilkan sebagai berikut</p>\n<figure class=\"post__image post__image--center\" ><img src=\"https://fachrul.id/media/posts/34/Screen-Shot-2020-05-19-at-22.26.15.png\" alt=\"\" width=\"1024\" height=\"1352\">\n<figcaption >hasil menjalankan kode test yang ternyata failed :P</figcaption>\n</figure>\n<p>Ada berbagai macam jenis outcome dari sebuah test yang akan dihasilkan oleh pytest sebagai berikut:</p>\n<ul>\n<li><strong>PASSED</strong> (.) adalah test yang berjalan sebagaimana mestinya</li>\n<li><strong>FAILED</strong> (F) adalah test yang tidak berjalan seperti yang diharapkan</li>\n<li><strong>SKIPPED</strong> (s) adalah test yang tidak dijalankan (dilompati), kita bisa mengkonfigurasi test yang harus di lompati dengan menggunakan decorator <em><strong>@pytest.mark.skip()</strong> </em>atau secara programatically</li>\n<li><strong>xfail</strong> (x): adalah test yang tidak seharusnya untuk pass, jadi secara eksplisit kita mengharapkan suatu test untuk failed, ditandai dengan decorator <em><strong>@pytest.mark.xfail()</strong></em></li>\n<li><strong>XPASS</strong> (X): kurang lebih mirip xfail</li>\n<li><strong>ERROR</strong> (E) adalah exception yang terjadi diluar test function tersebut, bisa gara-gara fixture, di hook atau dari mis-configurasi</li>\n</ul>\n<h2 id=\"mcetoc_1e8ifuoob3\">Ekspektasi</h2>\n<p>Pytest akan menggak exception yang tidak dihandle sebagai sebuah failure, pada saat statement assert dihadapkan kepada nilai False maka ia akan melempar exception dan langsung memberhentikan eksekusi program, jadi tidak akan dilanjutkan ke statement setelah assert yang failed tersebut</p>\n<pre><code class=\"language-python\">class TestHimpunan:\n    def test_persamaan(self):\n        assert (1,3,5) == (1,4,5)\n        print('Bagian ini tidak akan dijalankan')</code></pre>\n<p id=\"mcetoc_1e8mp1cg62\">Tapi jika memang justru exception yang diharpkan maka bisa menggunakan <span class=\"pln\">pytest</span><span class=\"pun\">.</span><span class=\"pln\">raises</span></p>\n<p> </p>\n<h2 id=\"mcetoc_1e8mr42ou1\">Contoh studi kasus JSON api kode post Indonesia</h2>\n<p>Contoh API test sederhana menggunakan pytest untuk menguji json api dari repo ini <a href=\"https://github.com/bachors/Kode-Pos-API\">https://github.com/bachors/Kode-Pos-API</a> yang memiliki aplikasi live di firebaseio</p>\n<p>Kita buat file di tests/feature_kodepost/test_kodepos_indonesia.py, isinya</p>\n<pre><code class=\"language-python\">iimport requests \n\ndef test_provinsi():\n    list_provinsi = requests.get('https://kodepos-2d475.firebaseio.com/list_propinsi.json?print=pretty')\n    data_prov = list_provinsi.json()\n    assert len(data_prov) == 34\n    assert data_prov.get('p9') == 'Jawa Barat'\n    \ndef test_kotakab_jabar():\n    list_kotakab = requests.get('https://kodepos-2d475.firebaseio.com/list_kotakab/p9.json?print=pretty')\n    data_kotakab = list_kotakab.json()\n    assert list_kotakab.status_code == 200\n    assert data_kotakab.get('k60') == 'Tasikmalaya_typo'\n    assert len(data_kotakab) == 21\n    \ndef test_kodepos_tasik():\n    list_keckel = requests.get('https://kodepos-2d475.firebaseio.com/kota_kab/k60.json?print=pretty')\n    data_kodepos = list_keckel.json()\n    assert list_keckel.status_code == 200\n    assert len(data_kodepos) == 420\n </code></pre>\n<p>lalu cara menjalankannya dengan  command</p>\n<p><code>➜ pytest -v tests/feature_kodepos</code></p>\n<p>maka akan muncul output sebagai berikut</p>\n<figure class=\"post__image post__image--center\" ><img src=\"https://fachrul.id/media/posts/34/Screen-Shot-2020-05-19-at-23.21.32.png\" alt=\"\" width=\"1024\" height=\"1020\">\n<figcaption >output menjalankan test kdoepos</figcaption>\n</figure>\n<p>Test nya sengaja saya buat failed, karena untuk melihat betapa cantiknya error log dari pytest jika terjadi masalah, apa yang menarik disini:</p>\n<ul>\n<li>Informasi kesalahan yang jelas, contoh diatas ada typo pada string yang dibandingkan (assert) maka ditunjukan kelebihan character dengan tanda plus</li>\n<li>test dijalankan sesuai dengan urutan penulisan test pada file, jadi dieksekusi dari atas kebawah</li>\n<li>walaupun test ke-2 failed, tetap melanjutkan ekseskusi test ke-3, (stop ekseskusi karena throw exception hanya pada scope test function, jadi dari failed tersebut tidak akan melanjutkan ekseskusi baris statement berikutnya tapi langsung pindah ke test berikutnya)</li>\n</ul>\n<p>Yuk kita bermain dengan kode test diatas, berikutnya kita ubah kode test sebagai berikut</p>\n<p>Kita tambahkan decorator xfail di method yg gagal menjadi seperti ini</p>\n<div>\n<pre><code class=\"language-python\">@pytest.mark.xfail\ndef test_kotakab_jabar():<br>   ...</code></pre>\n<p>Lalu jalankan kembali testnya dan outputnya sekarang berbeda</p>\n<figure class=\"post__image post__image--center\" ><img src=\"https://fachrul.id/media/posts/34/Screen-Shot-2020-05-19-at-23.34.05.png\" alt=\"\" width=\"1024\" height=\"580\">\n<figcaption >semua hasil passed dengan catatan 1 xfail</figcaption>\n</figure>\n<p>Nah terlihat bahwa sekarang semua test hijau (passed) dengan catatan ada 1 test yang memang expected failed (xfailed)</p>\n<h2 id=\"mcetoc_1e8msnr5s0\">Pytest Fixtures</h2>\n<p>Nah bagian ini sebenarnya yang menurut saya paling keren dari pytest, tapi berhubung postingan kali ini sudah cukup panjang, maka informasi lebih lanjut terkait fixture akan disambung di post selanjutnya ya, dengan contoh framework pada web ui testing</p>\n<p>Bersambung ...</p>\n</div>",
            "image": "https://fachrul.id/media/posts/34/Screen-Shot-2020-05-20-at-00.05.17.png",
            "author": {
                "name": "Fachrul Choliluddin"
            },
            "tags": [
            ],
            "date_published": "2020-05-19T23:59:58+07:00",
            "date_modified": "2020-05-20T00:06:39+07:00"
        },
        {
            "id": "https://fachrul.id/selector-locator-strategy-yang-baik/",
            "url": "https://fachrul.id/selector-locator-strategy-yang-baik/",
            "title": "Selector (Locator) Strategy adalah koentji dari Test Automation",
            "summary": "Hi kawan, Jika kamu berkecimpung di pemrograman automation test menggunakan selenium / appium tentunya kamu sudah paham banget kalau sampe salah selector (locator) maka kamu telah membuang banyak waktu karena selector yang kamu telah tuliskan tidak ditemukan dan harus re-run lagi 😭 Menemukan element pada tampilan aplikasi&hellip;",
            "content_html": "<p>Hi kawan,</p>\n<p>Jika kamu berkecimpung di pemrograman automation test menggunakan selenium / appium tentunya kamu sudah paham banget kalau sampe salah selector (locator) maka kamu telah membuang banyak waktu karena selector yang kamu telah tuliskan tidak ditemukan dan harus re-run lagi 😭</p>\n<p>Menemukan element pada tampilan aplikasi seperti buttons, inputs, divs, checkboxes ataupun anchor tag terkadang cukup \"menantang\", terutama ketika tidak adanya ke-unikan ataupun identitas yang jelas pada element tersebut, bahakan pernah saya menguji aplikasi yang ID nya selalu berubah karena digenerate otomatis oleh library front end nya. Alamakjang 😵</p>\n<hr>\n<p>Post ini merupakan rangkaian post mengenai membuat automationt test dengan python</p>\n<h4 id=\"mcetoc_1e8mtsf4p6\">Daftar isinya:</h4>\n<ol>\n<li><a href=\"https://fachrul.id/mau-belajar-automation-test-dengan-python-mulai-dari-mana/\" target=\"_blank\" rel=\"noopener noreferrer\">Belajar Python dari dasar</a></li>\n<li><a href=\"https://fachrul.id/belajar-pytest-framework-1/\" target=\"_blank\" rel=\"noopener noreferrer\">Memahami cara kerja Pytest (bagian 1)</a> </li>\n<li><a href=\"https://fachrul.id/memulai-automation-test-selenium-python-bagian-1/\" target=\"_blank\" rel=\"noopener noreferrer\">Mulai membuat automation test dengan Selenium</a></li>\n<li><a href=\"https://fachrul.id/selector-locator-strategy-yang-baik/\" target=\"_blank\" rel=\"noopener noreferrer\">Menemukan Element dengan locator strategi yang baik</a> &lt;== Sekarang disini</li>\n</ol>\n<hr>\n<p> </p>\n<h2 id=\"mcetoc_1e88anigp0\">Apa sih web/mobile elements itu?</h2>\n<p>Terjemahan ala saya sih ia adalah sebuah element adalah entitas pada aplikasi yang di render menjadi halaman web ataupun user interface pada mobile app. Jadi apapun yang dilihat oleh pengguna (termasuk yang ga keliatan sih) adalah element, seperti buttons submit, foto profile, navigasi halaman.</p>\n<p>Biasanya bentuknya berupa HTML pada web ataupun XML pada mobile apps, jadi bisa dikatakan memiliki struktur seperti tag name, attributes dan contents, termasuk kedalam hierarki posisinya.</p>\n<p>Untuk pembahasan ini saya cenderung membahas element pada web, untuk mobile apps akan dibahas lebih rinci di lain kesempatan karena perbedaan struktur source code tampilan lintas platformnya, tapi masih sangat relevan dengan mobile apps terutama mobile browser ya gaes.</p>\n<h2 id=\"mcetoc_1e88anmi41\">Nah itu kan baru element, trus selector itu apa?</h2>\n<p>Jadi selector ataupun locator adalah sebuah bentuk query untuk mengakses element tertentu yang ada di halaman aplikasi, nah untuk website biasanya object hasil query locator ini disebut node yang terletak di Document Object Model (DOM)</p>\n<p>Perlunya selector element pada aplikasi adalah sebagai awal mula interaksi automation. Setelah selenium/appium menemukan element sesuai selector maka kamu bisa mengakses method di element itu seperti meng-click button, menginput text, ataupun mengambil text pada element tersebut.</p>\n<h2 id=\"mcetoc_1e88anq9m2\">Kenapa kok perlu banget selector?</h2>\n<p>Jadi gini, sebagai manusia yang menggunakan aplikasi tentu kita tidak perlu selector untuk berinteraksi dengan aplikasi, kita bisa menggunakan indera penglihatan untuk menjalankan aksi seperti submit form, scrolling halaman, click sana sini di halaman web, tapi tidak begitu bagi test automation yang harus menerjemahkan interaksi manusia tadi ke istilah yang komputer bisa mengerti secara programatis. Jadi selenium/appium ga akan melihat aplikasi sebagaimana kita kita melihat tampilannya, tapi ia akan melihatnya secara source code struktural seperti html/xml (catatan: tapi jaman now, sedang gandrung library/tools yang mendukung visual testing juga loh seperti <a href=\"https://applitools.com\" target=\"_blank\" rel=\"noopener noreferrer\">applitools</a>, <a href=\"https://www.mabl.com\" target=\"_blank\" rel=\"noopener noreferrer\">mabl</a>, <a href=\"http://test.ai/\" target=\"_blank\" rel=\"noopener noreferrer\">test.ai</a> dkk)</p>\n<h2 id=\"mcetoc_1e88anu3m3\">Hmm gitu ya.. Bentuk element itu seperti apa sih?</h2>\n<p>Sebagai contoh kita akan bedah element di google.co.id ya, coba pada browser chrome kamu (sama juga pada firefox ataupun safari) klik kanan pada kotak pencarian trus pilih opsi menu \"Inspect\" maka akan muncul jendela Developer tool, pada Tab aktif \"Elements\", seperti ini gambarannya: (kamu coba juga donk ah)</p>\n<figure class=\"post__image post__image--center\" ><img src=\"https://fachrul.id/media/posts/33/gugel.png\" alt=\"\" width=\"1764\" height=\"901\">\n<figcaption >tampilan inspect element pada google chrome</figcaption>\n</figure>\n<p>Pada gambar diatas saya memberikan keterangan nomer,  yang akan saya jelaskan sebagai berikut:</p>\n<ol>\n<li>Pada gambar no.1 diatas, kotak pencarian adalah target element yang kita lihat, nampak ada highlight warna biru di element tersebut</li>\n<li>Ini adalah kode sumber HTML dari halaman google.co.id yang aktif pada bagian kotak pencarian yaitu tag &lt;input/&gt; beserta atribut yang melekat pada nya</li>\n<li>Apa yang disarankan oleh browser chrome jika kamu mencari element kotak pencarian ini, ada tag dengan classnya, accessibility yang ada pada element tersebut</li>\n</ol>\n<p>Nah jika kita terjemahkan pada kode automation dengan python (yang kurang lebih akan sama juga dengan selenium bindder di bahasa pemrograman lainya) nampak seperti berikut:</p>\n<div>\n<pre><code class=\"language-python line-numbers\">search_box = driver.find_element_by_name('q')\n# driver.find_element(By.NAME, 'q')  &lt;= atau alternatif bisa juga seperti ini\nsearch_box.send_keys('Belajar automation testing' + Keys.ENTER)</code></pre>\n</div>\n<p>di baris pertama saya akan membuat variable search_box yang isinya adalah element yang mengandung nama \"q\" seperti pada keterangan element search box yang saya tunjukan sebelumnya si kotak pencarian ini memiliki element &lt;input ... <span class=\"webkit-html-attribute-name\">name</span>=\"<span class=\"webkit-html-attribute-value\">q</span>\" ... /&gt; nah disini selector yang kita ambil adalah attribut name sama dengan \"q\", di baris kedua adalah alternatif cara penulisan kode saja</p>\n<p>di baris berikutnya, adalah proses automation test code saya untuk berinteraksi dengan element tersebut yaitu mengirimkan perintah send keys alias ketikan kata Belajar automation testing pada kotak pencarian dilanjutkan dengan menekan tombol Enter</p>\n<figure class=\"post__image post__image--center\" ><img src=\"https://fachrul.id/media/posts/33/hasil-pencarian-google-belajar-automation.png\" alt=\"\" width=\"1749\" height=\"890\">\n<figcaption >hasil pencarian kata kunci 'belajar automation' pada google search</figcaption>\n</figure>\n<p>Selector pun adakalanya bersifat tidak unik, seperti pada halaman pencarian google diatas, search result pada umumnya berupa list yang identik secara rupa dan bentuk, karena memiliki stylesheet (CSS) yang sama, hanya isi yang beda, lantas bagaimana cara kita memilih element yang kita mau agar lebih akurat akan kita diskusikan nanti ya.</p>\n<p>Bisa jadi kebutuhan test kita pun perlu mendapatkan element yang lebih dari satu juga, katakan lah contoh diatas mau kita jadikan test code seperti ini jadinya (masih di bahasa python):</p>\n<div>\n<pre><code class=\"language-python line-numbers\">results_title = driver.find_elements_by_css_selector('h3')\nassert len(results_title) &gt; 0\n</code></pre>\n<p> Dimana kebutuhannya memang menghitung jumlah dari hasil pencarian yang didapatkan dengan asusi kata kunci tersebut akan menemukan data pada halaman hasil pencarian, makanya kita memerlukan selector pada element judul pencarian yaitu &lt;h3&gt;</p>\n<p>Pada test framework yang besar umumnya mengadopsi design pattern \"<a href=\"https://www.guru99.com/page-object-model-pom-page-factory-in-selenium-ultimate-guide.html\" target=\"_blank\" rel=\"noopener noreferrer\">Page Object Model</a>\" untuk mengelola selector / locator dan interaksi di halaman tertentu, ada juga sih yang mengadopsi <a href=\"https://www.infoq.com/articles/Beyond-Page-Objects-Test-Automation-Serenity-Screenplay\" target=\"_blank\" rel=\"noopener noreferrer\">Screenplay Pattern</a> dimana sedikit ada perbedaan lokasi dimana selector disimpan pada kode automation testnya</p>\n<h2 id=\"mcetoc_1e88aomug4\">Hmm.. trus gimana cara saya menemukan selector?</h2>\n<p>Sebenernya, cara untuk menentukan selector itu ada banyak, bisa dari element tag, id, class, attributes, isi text, bahkan relatif terhadap element parent/child/sibling juga bisa, bahkan yang saya sebutkan tadi bisa dikombinasikan juga loh. Wadidaw, banyak banget sih selector strategi yang bisa diterapkan. Dalam waktu dekat saya pun akan membuat video tutorial terkait berbagai penggunaan selector strategi, karena medium video lebih enak untuk langsung terjun praktek penggunaan, jadi jangan lupa <a href=\"https://www.youtube.com/channel/UCZVY3VNPkFs_iINTXEBWWgw\" target=\"_blank\" rel=\"noopener noreferrer\">subscibe disini</a> ya gaes ahaha</p>\n<p>Kita harus hati-hati juga, penulisan selector yang salah mengharuskan kita re-run automation test dan ini mubazir waktu loh. Kalau selectornya terlalu luas bisa salah dalam menentukan element yang harusnya kita dapat, kalau terlalu spesifik malah rawan breaking ketika ada yang berubah di struktur DOM nya, kalau terlalu panjang jadi sulit untuk di baca oleh yang lain. Jadi gimana donk?</p>\n<p>Prinsip yang bisa dipegang dalam membuat selector / locator strategy yang saya pegang adalah <strong>Buatlah selector yang paling sederhana dalam menemukan keunikan element yang menjadi target kita</strong></p>\n<p> Nah biasanya urutannya seperti ini:</p>\n<ol>\n<li>Element nya punya ID (yang unik) kah? =&gt; pake ID aja</li>\n<li>CSS class nya spesifik dan cuma ada di element itu (untuk format) =&gt; pake CSS klo selector kalo gitu</li>\n<li>Masih nyampur nih klo pake strategi 1 atau 2 =&gt; yaudah kombinasikan aja kedua nya, jadi \"#id .class\" atau \".class #id\"</li>\n<li>Waduh masih ga bisa nih, saya maunya element yang ke-4 dari filter 1-3 tadi =&gt; Oke tambahin posisi \"#id li:nth-of-type(4)\"</li>\n<li>Tapi saya maunya element yang mengandung text tertentu =&gt; pake xpath klo gitu //button[text()[contains(.,'Sebut Saja Mawar')]]</li>\n</ol>\n<p>Di urutan 5 itu udah paling rawan banget deh, selector text emang bisa, tapi klo webnya support ganti bahasa bisa jadi ambyar itu loh. Lebih baik diobrolin lagi deh sama developer untuk mulai menuliskan identitas element yang kita mau jadi lebih unik lagi agar lebih testable.</p>\n<p>Sebagai perbandingan, kita coba lihat web tokopedia, mereka memiliki element khusus yang memudahkan QA membuat locator yang stabil</p>\n<figure class=\"post__image post__image--center\" ><img src=\"https://fachrul.id/media/posts/33/contoh-tokopedia-element-data.jpg\" alt=\"\" width=\"1734\" height=\"893\">\n<figcaption >Kode sumber Tokopedia menunjukan penggunaan data-testid sebagai penunjang selector strategy nya</figcaption>\n</figure>\n<p> </p>\n<p>Data-* adalah attribute baru di HTML5 dan termasuk atribut yang valid, enaknya punya atribut khusus macam ini tuh klo ada perubahan desain di UI yang biasanya akan pakai ID atau CLASS, test nya akan tetap sama dan stabil karena tidak terganggu</p>\n<p>Atau di bukalapak juga ada, bedanya disana pakai css class</p>\n<figure class=\"post__image post__image--center\" ><img src=\"https://fachrul.id/media/posts/33/contoh-element-qa-class-bukalapak.jpg\" alt=\"\" width=\"1281\" height=\"888\">\n<figcaption >Kode sumber Bukalapak menunjukan penggunaan qa-* class sebagai penunjang selector strategy nya</figcaption>\n</figure>\n<h2 id=\"mcetoc_1e88bdnur5\">Jadi gimana sebenarnya selector / locator yang baik?</h2>\n<p>Kalau menurut saya, automation test menjadi stabil, locator yang baik itu harus memenuhi kriteria seperti:</p>\n<h4 id=\"mcetoc_1e88bdseo6\">Sederhana</h4>\n</div>\n<div>Semakin pendek penulisan query selector semakin baik dan stabil, contoh nya \"#first_name\".  Jangan gunakan attribut atau class yang merujuk ke css formating seperti class=\"col-sm\" atau id=\"83924csdj\" yang tampak seperti di generate otomatis oleh JS lib</div>\n<div> </div>\n<h4 id=\"mcetoc_1e88be01g7\">Mudah dibaca</h4>\n<div>Jangan menulis query selector yang panjang ataupun sulit dibaca seperti:</div>\n<ul>\n<li>html/body/div[1]/section/div[1]/div/div/div/div[1]/div/div/div/div/div[3]/div[1]/div/h4[1]/b</li>\n<li>//*[@id=\"wakwaw\"]//child::label//following-sibling::input[1]</li>\n</ul>\n<div> </div>\n<h4 id=\"mcetoc_1e88beg9k8\">Semantic</h4>\n<div>Artinya query yang dipilih harus sesuai kan dengan maksud element tersebut artinya lebih baik menuliskan selector seperti ini \"input#kampus\" daripada hanya \"#kampus\" agar lebih jelas lagi saat membaca kode yang di maksud id=\"kampus\" adalah sebuah element input bukan div ataupun button</div>\n<div> </div>\n<h2 id=\"mcetoc_1e88bep6h9\">Jadi Kesimpulannya</h2>\n<div>Selector strategy yang baik berperan besar terhadap stabilitas automation code kamu, jika aplikasi yang akan di test tidak memungkinkan membuat selector yang baik, artinya sudah waktunya mengangkat issue testablility aplikasi dengan developer ataupun stakeholder agar test menjadi lebih stabil maka diperlukan sedikit tunning lagi pada kode sumber aplikasinya<br>\n<h2 id=\"mcetoc_1e88bf1rna\"> Rujukan lebih lanjut</h2>\n<ul>\n<li><a href=\"https://blog.mozilla.org/fxtesteng/2013/09/26/writing-reliable-locators-for-selenium-and-webdriver-tests/\">https://blog.mozilla.org/fxtesteng/2013/09/26/writing-reliable-locators-for-selenium-and-webdriver-tests/</a> </li>\n<li><a href=\"https://www.guru99.com/locators-in-selenium-ide.html\">https://www.guru99.com/locators-in-selenium-ide.html</a> </li>\n<li><a href=\"https://www.guru99.com/xpath-selenium.html\">https://www.guru99.com/xpath-selenium.html</a></li>\n<li><a href=\"https://selenium-python.readthedocs.io/locating-elements.html\">https://selenium-python.readthedocs.io/locating-elements.html</a></li>\n<li><a href=\"https://gs.statcounter.com/browser-market-share\">https://gs.statcounter.com/browser-market-share</a> Ternyata browser chrome masih paling banyak dipakai oleh orang seluruh dunia</li>\n</ul>\n<p> </p>\n</div>",
            "image": "https://fachrul.id/media/posts/33/gugel-selector.png",
            "author": {
                "name": "Fachrul Choliluddin"
            },
            "tags": [
            ],
            "date_published": "2020-05-14T08:25:31+07:00",
            "date_modified": "2020-05-19T23:58:24+07:00"
        },
        {
            "id": "https://fachrul.id/memulai-automation-test-selenium-python-bagian-1/",
            "url": "https://fachrul.id/memulai-automation-test-selenium-python-bagian-1/",
            "title": "Memulai Automation Test Selenium + Python (bagian 1)",
            "summary": "Hi Kawan, Sesuai dengan post sebelumnya, pada kesempatan kali ini saya akan berbagi resep tentang membuat automation test framework dengan menggunakan bahasa pemrograman python + selenium, jadi di akhir sesi kamu pasti bisa membuat otomatisasi pengujian pada browser Google Chrome ya (kalau setup nya benar)&hellip;",
            "content_html": "<p>Hi Kawan,</p>\n<p>Sesuai dengan post sebelumnya, pada kesempatan kali ini saya akan berbagi resep tentang membuat automation test framework dengan menggunakan bahasa pemrograman python + selenium, jadi di akhir sesi kamu pasti bisa membuat otomatisasi pengujian pada browser Google Chrome ya (kalau setup nya benar) 😅</p>\n<h3 id=\"mcetoc_1e7uke56u0\">Kenapa membuat tutorial automation test dengan python?</h3>\n<p>Tujuannya saya buat tutorial kali ini adalah untuk memperkaya khasanah tutorial bahasa Indonesia pada automation test menggunakan bahasa pemrograman python, dimana mayoritas hasil penelusuran yang ada di gugle menggunakan bahasa pemrograman java ataupun javascript.</p>\n<hr>\n<p>Post ini merupakan rangkaian post mengenai membuat automationt test dengan python</p>\n<h4 id=\"mcetoc_1e8mtsf4p6\">Daftar isinya:</h4>\n<ol>\n<li><a href=\"https://fachrul.id/mau-belajar-automation-test-dengan-python-mulai-dari-mana/\" target=\"_blank\" rel=\"noopener noreferrer\">Belajar Python dari dasar</a></li>\n<li><a href=\"https://fachrul.id/belajar-pytest-framework-1/\" target=\"_blank\" rel=\"noopener noreferrer\">Memahami cara kerja Pytest (bagian 1)</a> </li>\n<li><a href=\"https://fachrul.id/memulai-automation-test-selenium-python-bagian-1/\" target=\"_blank\" rel=\"noopener noreferrer\">Mulai membuat automation test dengan Selenium</a>  &lt;== Sekarang disini</li>\n<li><a href=\"https://fachrul.id/selector-locator-strategy-yang-baik/\" target=\"_blank\" rel=\"noopener noreferrer\">Menemukan Element dengan locator strategi yang baik</a> </li>\n</ol>\n<hr>\n<p> </p>\n<h2 id=\"mcetoc_1e7ukf4el1\">Yuk kita mulai!!!</h2>\n<p>Sebentar.. sebentar.. bentuk tutorial yang akan saya share adalah perpaduan dari video tutorial dan blog post, jadi kedua medium pembelajaran ini akan saling melengkapi, untuk video bisa diakses disini:</p>\n<p><iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/dApgg02293I\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"allowfullscreen\"></iframe></p>\n<p>Lalu catatan pada video akan merujuk pada postingan disini</p>\n<h2 id=\"mcetoc_1e7uki6ad2\">Tools yang digunakan</h2>\n<p>Hal pertama yang kita perlukan adalah interpreter kode python sudah terinstall di laptop/komputer kamu, terlepas dari sistem operasi apapun (windows/macOS/linux) saya asumsikan command `python atau python3` bisa dijalankan di terminal/command line kamu ya, jika belum, silahkan merujuk ke post <a href=\"https://fachrul.id/mau-belajar-automation-test-dengan-python-mulai-dari-mana/\" target=\"_blank\" rel=\"noopener noreferrer\">pendahuluan python saya sebelumnya disini</a></p>\n<h3 id=\"mcetoc_1e7ukpuf33\">Kode Editor</h3>\n<p>Editor python ada banyak, dimulai dari yang ada di terminal seperti vim, kode editor ringan dan lengkap seperti:</p>\n<ol>\n<li><a href=\"https://www.sublimetext.com\" target=\"_blank\" rel=\"noopener noreferrer\">sublime</a></li>\n<li><a href=\"https://code.visualstudio.com\" target=\"_blank\" rel=\"noopener noreferrer\">visual code</a></li>\n<li><a href=\"https://atom.io\" target=\"_blank\" rel=\"noopener noreferrer\">atom</a></li>\n<li>ataupun IDE yang kumplit seperti <a href=\"https://www.jetbrains.com/education/download/\" target=\"_blank\" rel=\"noopener noreferrer\">PyCharm Edu</a>.</li>\n</ol>\n<p>Sebagai pendamping dalam menulis kode python saya biasanya akan menginstal pula <a href=\"http://kite.com\" target=\"_blank\" rel=\"noopener noreferrer\">Kite</a> sebagai tambahan autocomplete dan documentation di local tapi ini opsional sih, ga di install juga gapapa (ukuran file nya gede sih ahaha)</p>\n<h3 id=\"mcetoc_1e7ul4jfl4\">Chromedriver</h3>\n<p>Bisa diunduh di : <a href=\"https://chromedriver.chromium.org/downloads\">https://chromedriver.chromium.org/downloads</a> </p>\n<p>Lalu tambahkan directory binary chromedriver ke sistem path kamu, (windows bisa taruh chromedriver.exe di folder c:\\windows\\System32 klo linux bisa tambahkan di path via ~/.bash_profile atau ~/.zshrc kamu. Atau klo macOS bisa lebih mudah tinggal jalankan perintah berikut di terminal <code class=\"language-shell\">brew cask install chromedriver</code></p>\n<h3 id=\"mcetoc_1e7ule8i35\"> Python Packaging Tools</h3>\n<p>Salah satu best practice pemrograman python adalah memiliki packaging tools yang menjadi depedency management library python agar tidak saling bertabrakan, jadi diperlukan virtual environment, kita akan menggunakan `pipenv` untuk itu, jalankan perintah berikut di terminal</p>\n<pre><code class=\"language-shell-session\"><span class=\"gp\">$ pip install pipenv<br></span></code></pre>\n<p>atau klo gagal karena km menggunakan python3 bisa menggunakan command `pip3 install pipenv` </p>\n<p>Nah yuk kita mulai kodingnya.. Silahkan liat videonya ya</p>\n<p>Skenario test yang dijalankan</p>\n<pre><code class=\"language-gherkin\">Scenario: Search Profile in Google</code><br><code class=\"language-gherkin\">Given I am in google home page</code><br><code class=\"language-gherkin\">When I search for \"Fachrul Choliluddin\"</code><br><code class=\"language-gherkin\">Then I should see search result of \"Fachrul Choliluddin\"</code></pre>\n<h2 id=\"mcetoc_1e84lvea30\">Apa itu Selector?</h2>\n<p><em>Selector</em> adalah sebuah format yang digunakan oleh library seperti <em>Selenium</em> dan <em>Capybara</em> untuk menemukan elemen pada web seperti gambar, tulisan, tombol, dan sebagainya. Untuk bisa menggunakan <em>Selector</em> akan lebih baik jika anda mengenal HTML terlebih dahulu. Kamu bisa lihat materinya <a href=\"https://www.w3schools.com/html/\" rel=\"nofollow\">disini</a>.</p>\n<h2 id=\"mcetoc_1e84lvv7e1\">Apa itu CSS Selector?</h2>\n<p><em>CSS</em> adalah sebuah notasi (<em>selector</em>) yang digunakan untuk menemukan elemen tertentu pada halaman web. CSS sendiri digunakan oleh web developer untuk memberikan <em>style</em> pada halaman web seperti warna, besar dan lebar gambar, bentuk tombol, dan berbagai fungsi lainnya. Properti-properti pada CSS ini bisa kita manfaatkan untuk mendeteksi sebuah elemen pada web.</p>\n<h2 id=\"mcetoc_1e84lvv7e2\">Cara Menggunakan CSS selector</h2>\n<p>Sebenarnya kita sudah menggunakan syntax CSS pada lesson sebelumnya. Yaitu <code>#login_link</code>. Dimana kita memanfaatkan elemen <code>id</code> pada tombol login untuk mendeteksi keberadaan tombol login.</p>\n<p>Materi mengenai CSS sendiri sangat luas, sehingga kamu bisa baca mengenai CSS lebih lanjut <a href=\"https://www.w3schools.com/css/\" rel=\"nofollow\">disini</a>.</p>\n<h2 id=\"mcetoc_1e84m19cn7\">Apa itu XPath?</h2>\n<p><em>XPath</em> adalah sebuah notasi (<em>selector</em>) yang digunakan untuk menemukan elemen tertentu pada halaman web. <em>Xpath</em> memiliki bentuk syntax yang lebih fleksibel jika dibandingkan dengan CSS. Sehingga lebih umum digunakan untuk mencari elemen web yang tidak bisa dicari oleh <em>selector</em> CSS.</p>\n<h2 id=\"mcetoc_1e84m1dkp8\">Mengapa Memakai XPath?</h2>\n<p>Misalkan saya punya halaman web dengan format HTML seperti ini ...</p>\n<div class=\"highlight highlight-text-html-basic\">\n<pre>&lt;<span class=\"pl-ent\">div</span> <span class=\"pl-e\">class</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>parent<span class=\"pl-pds\">\"</span></span>&gt;\n    &lt;<span class=\"pl-ent\">h2</span>&gt;Ayam&lt;/<span class=\"pl-ent\">h2</span>&gt;\n    &lt;<span class=\"pl-ent\">p</span>&gt;Ayam adalah salah satu unggas yang bisa dimakan&lt;/<span class=\"pl-ent\">p</span>&gt;\n    &lt;<span class=\"pl-ent\">div</span> <span class=\"pl-e\">class</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>child<span class=\"pl-pds\">\"</span></span>&gt;\n        &lt;<span class=\"pl-ent\">h3</span>&gt;Gambar Ayam&lt;/<span class=\"pl-ent\">h3</span>&gt;\n        &lt;<span class=\"pl-ent\">img</span> <span class=\"pl-e\">id</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>ayam_image<span class=\"pl-pds\">\"</span></span> <span class=\"pl-e\">src</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>ayam.jpg<span class=\"pl-pds\">\"</span></span> <span class=\"pl-e\">alt</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Smiley face<span class=\"pl-pds\">\"</span></span> <span class=\"pl-e\">height</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>42<span class=\"pl-pds\">\"</span></span> <span class=\"pl-e\">width</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>42<span class=\"pl-pds\">\"</span></span>&gt;\n        &lt;<span class=\"pl-ent\">p</span>&gt;Ini adalah gambar ayam&lt;/<span class=\"pl-ent\">p</span>&gt;\n    &lt;/<span class=\"pl-ent\">div</span>&gt;\n&lt;/<span class=\"pl-ent\">div</span>&gt;</pre>\n</div>\n<p>Anda bisa menggunakan <em>selector</em> CSS untuk mengambil elemen image dengan cara seperti ini.</p>\n<div class=\"highlight highlight-source-ruby\">\n<pre>driver.find_element_by_css_selector(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>#ayam_image<span class=\"pl-pds\">'</span></span>)</pre>\n</div>\n<p>Atau menggunakan XPath dengan cara berikut</p>\n<div class=\"highlight highlight-source-ruby\">\n<pre>driver.find_element_xpath(<span class=\"pl-pds\">'</span>//img<span class=\"pl-pds\">'</span>)</pre>\n</div>\n<p>Atau</p>\n<div class=\"highlight highlight-source-ruby\">\n<pre>driver.find_element(by=By.XPATH, value=<span class=\"pl-pds\">'</span>//*[@id=\"ayam_image\"]<span class=\"pl-pds\">'</span>)</pre>\n</div>\n<p> </p>\n<div class=\"highlight highlight-source-ruby\"> </div>\n<p>Dan sebagainya ...</p>\n<p>Intinya, <em>XPath</em> menawarkan banyak metode alternatif untuk mencari suatu elemen pada halaman web.</p>\n<p>Materi mengenai <em>XPath</em> sendiri sangat luas, sehingga kamu bisa baca mengenai CSS lebih lanjut <a href=\"https://www.w3schools.com/xml/xpath_intro.asp\" rel=\"nofollow\">disini</a>.</p>\n<h2 id=\"mcetoc_1e84lvv7e5\">Perbandingan CSS vs xPath</h2>\n<table>\n<thead>\n<tr>\n<th>XPath</th>\n<th>Css</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>//div/a</td>\n<td>div &gt; a</td>\n</tr>\n<tr>\n<td>//div//a</td>\n<td>div a</td>\n</tr>\n<tr>\n<td>//div[@id='example']</td>\n<td>#example</td>\n</tr>\n<tr>\n<td>//div[@class='example']</td>\n<td>.example</td>\n</tr>\n<tr>\n<td>//input[@id='username']/following-sibling::input[1]</td>\n<td>#username + input</td>\n</tr>\n<tr>\n<td>//input[@name='username']</td>\n<td>input[name='username']</td>\n</tr>\n<tr>\n<td>//input[@name='login'and @type='submit']</td>\n<td>input[name='login'][type='submit']</td>\n</tr>\n<tr>\n<td>a[contains(text(), 'Log out')]</td>\n<td>a:contains('Log Out')</td>\n</tr>\n<tr>\n<td> </td>\n<td>#recordlist li:nth-of-type(4)</td>\n</tr>\n<tr>\n<td> </td>\n<td> a[id^='id_prefix_']</td>\n</tr>\n<tr>\n<td> </td>\n<td> a[id$='_id_sufix']</td>\n</tr>\n<tr>\n<td> </td>\n<td> a[id*='id_pattern']</td>\n</tr>\n<tr>\n<td> </td>\n<td> </td>\n</tr>\n</tbody>\n</table>\n<p> </p>\n<p>Command yang dijalankan:<br><br></p>\n<table style=\"width: 681px;\">\n<tbody>\n<tr>\n<td style=\"width: 280.984px;\">➜ pipenv --three</td>\n<td style=\"width: 399.016px;\">Inisiasi directory sebagai virtual environment yang baru dengan python3</td>\n</tr>\n<tr>\n<td style=\"width: 280.984px;\">➜ pipenv shell</td>\n<td style=\"width: 399.016px;\">mengaktivasi virtual environment</td>\n</tr>\n<tr>\n<td style=\"width: 280.984px;\">➜ pip freeze</td>\n<td style=\"width: 399.016px;\">melihat daftar isi library yang sudah di terpasang di virtual environment </td>\n</tr>\n<tr>\n<td style=\"width: 280.984px;\">➜ pipenv install selenium</td>\n<td style=\"width: 399.016px;\">memasang library selenium</td>\n</tr>\n<tr>\n<td style=\"width: 280.984px;\">➜ pipenv install pytest</td>\n<td style=\"width: 399.016px;\">memasang library pytest</td>\n</tr>\n<tr>\n<td style=\"width: 280.984px;\">➜ chromedriver -v</td>\n<td style=\"width: 399.016px;\">cek versi chromedriver</td>\n</tr>\n<tr>\n<td style=\"width: 280.984px;\">➜ python test_googling.py</td>\n<td style=\"width: 399.016px;\">menjalankan kode python</td>\n</tr>\n<tr>\n<td style=\"width: 280.984px;\">➜ pytest</td>\n<td style=\"width: 399.016px;\">menjalankan module pytest di directory aktif</td>\n</tr>\n<tr>\n<td style=\"width: 280.984px;\">➜ pytest -s</td>\n<td style=\"width: 399.016px;\">menjalankan pytest disertai stdout untuk print console</td>\n</tr>\n</tbody>\n</table>\n<p> Link terkait:</p>\n<table style=\"width: 681px;\">\n<tbody>\n<tr>\n<td style=\"width: 339.984px;\"><a href=\"https://selenium-python.readthedocs.io\">https://selenium-python.readthedocs.io</a> </td>\n<td style=\"width: 340.016px;\">Dokumentasi library selenium pada python</td>\n</tr>\n<tr>\n<td style=\"width: 339.984px;\"><a href=\"https://docs.pytest.org/en/latest/\">https://docs.pytest.org/en/latest/</a> </td>\n<td style=\"width: 340.016px;\">Dokumentasi pytest </td>\n</tr>\n<tr>\n<td style=\"width: 339.984px;\"> </td>\n<td style=\"width: 340.016px;\"> </td>\n</tr>\n</tbody>\n</table>\n<p> </p>\n<br>\n<p> </p>\n<p> </p>\n<p> </p>",
            "author": {
                "name": "Fachrul Choliluddin"
            },
            "tags": [
            ],
            "date_published": "2020-05-12T22:03:25+07:00",
            "date_modified": "2020-05-19T23:59:00+07:00"
        },
        {
            "id": "https://fachrul.id/mau-belajar-automation-test-dengan-python-mulai-dari-mana/",
            "url": "https://fachrul.id/mau-belajar-automation-test-dengan-python-mulai-dari-mana/",
            "title": "Mau Belajar Automation Test dengan Python, Mulai Dari Mana?",
            "summary": "Halo Kawan! Dikesempatan kali ini saya akan bahas hal teknis yang berhubungan dengan pekerjaan sebagai Software Quality Assurance / Test Engineer yaitu membuat sebuah Test Automation Suite, saya akan membagikan pengetahuan dan pengalaman saya dalam merancang Automation test framework dengan python. Saya akan buat tulisan berseri&hellip;",
            "content_html": "<p>Halo Kawan!</p>\n<p>Dikesempatan kali ini saya akan bahas hal teknis yang berhubungan dengan pekerjaan sebagai <em>Software Quality Assurance</em> / <em>Test Engineer</em> yaitu membuat sebuah <em>Test Automation Suite</em>, saya akan membagikan pengetahuan dan pengalaman saya dalam merancang Automation test framework dengan python.</p>\n<p>Saya akan buat tulisan berseri terkait pemrograman <em>automation test</em> dengan python, nah sebagai permulaan, pada tulisan ini saya akan share sumber belajar python dari dasar yang dulu saya pelajari, semoga bisa berguna buat yang baru berkenalan dengan bahasa python ya.</p>\n<p>Nanti setelah dasar pemrograman python dikuasai, barulah kita akan langsung koding automation nya ya</p>\n<h2 id=\"mcetoc_1e7nsdtta3\">Kenapa Python?</h2>\n<p>Karena menulis automation code dengan python menurut saya sangat mudah sekali, dan secara bahasa pemrograman, python itu termasuk mudah untuk dipelajari dan code yang dihasilkan sangat enak untuk dibaca, jadi sebagai entry barrier nya rendah bagi seorang QA manual untuk mulai terjun di koding automation (walaupun tools lain yang ga perlu koding juga ada sih 🤣)</p>\n<h2 id=\"mcetoc_1e7nsonlk4\">Yuk kita Mulai Belajar Pemrograman Python</h2>\n<p>Walaupun ingin, sepertinya saya kurang mahir dalam menjelaskan pemrograman python dengan baik, karena saya sendiri pun tidak terlalu mahir, hehe tapi santai saja, keahlian koding yang dibutuhkan untuk menulis automation test itu tidak terlalu kompleks kok, jadi bisa langsung sambil di praktekan ya.</p>\n<p>Ok, berikut ini adalah sumber pembelajaran python yang sudah saya coba dan menjadi rekomendasi utama, terutama karena gratis dan mudah dipahami, saya bagi kedalam beberapa kategori ya sesuai dengan gaya belajar kita yang berbeda, ada yang sukanya audio visual, ada yang lebih suka belajar dengan membaca, atau ada yang paling seneng kalo langsung praktek.</p>\n<h2 id=\"mcetoc_1e7ns8n9b0\">Belajar Python Melalui Video</h2>\n<p>Hari gini banyak video tutorial gratis di youtube, saking banyaknya mungkin kalian akan menemukan video tutorial yang jumlahnya sangat banyak, berikut ini adalah beberapa video yang sudah saya tonton dan isinya sangat bermutu, jadi akan menghemat waktu kalian memilih video mana yang akan ditonton ya</p>\n<p><iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/zpeWE1utrWM\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"allowfullscreen\"></iframe></p>\n<p>dengan playlist lengkap dari sekolah koding di:</p>\n<ul>\n<li><a href=\"https://www.youtube.com/playlist?list=PLCZlgfAG0GXDc9Wcsi2fUn0pAr41GDL6m\" target=\"_blank\" rel=\"noopener noreferrer\">Tutorial Python Bahasa Indonesia</a></li>\n<li><a href=\"https://www.youtube.com/playlist?list=PLCZlgfAG0GXC-N-MlNJoG3Jh8nhXHTT6s\" target=\"_blank\" rel=\"noopener noreferrer\">Belajar OOP (object oriented programming) dengan Python</a></li>\n</ul>\n<p>Disini juga lumayan lengkap dari pengenalan pemrograman bahkan</p>\n<p><iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/fBkeaYZ99iY\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"allowfullscreen\"></iframe> </p>\n<p>Dan aplikasi pembelajaran koding ini juga bagus loh</p>\n<figure class=\"post__image post__image\" ><img src=\"https://fachrul.id/media/posts/31/belajar-koding-python-di-kode-id.png\" alt=\"\" width=\"800\" height=\"863\">\n<figcaption >Kelas pemrograman gratis dari Kode.id</figcaption>\n</figure>\n<p>Dengan link nya sebagai berikut <a href=\"https://kode.id/kelas/pengenalan-bahasa-pemrograman-python/\" target=\"_blank\" rel=\"noopener noreferrer\">https://kode.id/kelas/pengenalan-bahasa-pemrograman-python/</a> , bisa diakses melalui browser komputer ataupun aplikasi mobile nya juga loh </p>\n<h2 id=\"mcetoc_1e7ns9skn1\">Belajar Python Melalui Buku</h2>\n<p>Berikut ini adalah sumber belajar bacaan (buku ataupun web, ya kan dibaca juga 😅)</p>\n<h3 id=\"mcetoc_1e7nv1kr75\">BelajarPython.com</h3>\n<p>Kamu bisa akses di halaman <a href=\"https://belajarpython.com/tutorial/apa-itu-python\" target=\"_blank\" rel=\"noopener noreferrer\">https://belajarpython.com</a> disana kamu bisa menemukan tutorial python dengan pembahasan yang mudah dimengerti</p>\n<p><img class=\"post__image--center\" src=\"https://fachrul.id/media/posts/31/Screen-Shot-2020-05-07-at-23.20.31.png\" alt=\"\" width=\"750\" height=\"974\"></p>\n<h3 id=\"mcetoc_1e7nv646u7\">Workshop Python 101</h3>\n<p>Modul untuk workshop python, bisa kamu akses di <a href=\"https://sakti.github.io/python101/index.html\">https://sakti.github.io/python101/index.html</a> kamu ikutin sendiri kok, tapi bahasannya menggunakan python versi 2.7 dimana sekarang ini sudah ketinggalan (walau masih bisa) dan direkomendasikan untuk menggunakan python versi 3 </p>\n<h3 id=\"mcetoc_1e7nv4kpe6\">GoalKicker</h3>\n<p>Buku ini salah satu rekomendasi saya untuk belajar python dengan cepat, karena disana ga terlalu banyak basa-basi dan langsung ditunjukan contoh kode nya, bisa diunduh di link <a href=\"https://goalkicker.com/PythonBook/\" target=\"_blank\" rel=\"noopener noreferrer\">https://goalkicker.com/PythonBook/</a></p>\n<p><a href=\"https://goalkicker.com/PythonBook/\"><img class=\"post__image--center\" src=\"https://fachrul.id/media/posts/31/Screen-Shot-2020-05-07-at-23.14.57.png\" width=\"340\" height=\"490\"></a></p>\n<p>Buku python lainnya bisa diakses di: <a href=\"https://pythonbooks.revolunet.com/\">https://pythonbooks.revolunet.com/</a></p>\n<h2 id=\"mcetoc_1e7nvl66aa\"> </h2>\n<h2 id=\"mcetoc_1e7ns9uql2\">Belajar Python Dengan Praktek</h2>\n<p>Nah bagi kalian yang pengennya langsung praktek ngerjain kode bisa dicoba cara berikut ini</p>\n<h3 id=\"mcetoc_1e7nvdpod8\">Python Koans</h3>\n<p>Nah Koans adalah metode pembelajaran interaktif dengan langsung menjalankan kodenya, jadi kamu tinggal clone repository  <a href=\"https://github.com/gregmalcolm/python_koans\">https://github.com/gregmalcolm/python_koans</a> lalu jalankan kodenya, dan perbaiki yang salah, bisa di baca juga struktur kodenya langsung</p>\n<h3 id=\"mcetoc_1e7nviakg9\">SoloLearn</h3>\n<p>Enaknya belajar di soloLearn adalah bisa dimana aja, web bisa mobile phone juga bisa, bentuknya seperti kuis interaktif <a href=\"https://www.sololearn.com/Course/Python/\">https://www.sololearn.com/Course/Python/</a></p>\n<h4 id=\"mcetoc_1e7o0jj190\"> PyCharm Edu</h4>\n<p>Ini favorit saya, karena embeded di IDE nya python yaitu PyCharm, kita tinggal mengaktifkannya dari <a href=\"https://www.jetbrains.com/education/download/\" target=\"_blank\" rel=\"noopener noreferrer\">Pycharm Edu</a> (ini IDE python gratis loh, dan sangat mumpuni) silahkan unduh Pycharm Edu gratis disini <a href=\"https://www.jetbrains.com/education/download/\" target=\"_blank\" rel=\"noopener noreferrer\">https://www.jetbrains.com/education/download/</a> lalu install \"EduTools Plugin\" nya juga ya untuk mengaktifkan menu Academy seperti berikut</p>\n<p><img class=\"post__image--center\" src=\"https://fachrul.id/media/posts/31/Screen-Shot-2020-05-07-at-23.47.10.png\" width=\"600\" height=\"996\"></p>\n<p>Info lebih lanjut bisa cekidot ini ya <a href=\"https://hyperskill.org/onboarding?track=python\" target=\"_blank\" rel=\"noopener noreferrer\">https://hyperskill.org/onboarding?track=python</a></p>\n<p> </p>\n<h2 id=\"mcetoc_1e7o0rrqg1\">Penutup</h2>\n<p>Ternyata lumayan banyak juga ya sumber belajar python nya, semoga kalian bisa mengikuti salah satunya dengan tuntas ya 🤣</p>\n<p>Oke di kesempatan berikutnya kita akan langsung mulai belajar automation test dengan python nya ya, untuk sementara ini mulailah dengan memahami bahasa pemrograman Python.. Sekian</p>\n<hr>\n<p>Post ini merupakan rangkaian post mengenai membuat automationt test dengan python</p>\n<h4 id=\"mcetoc_1e8mtsf4p6\">Daftar isinya:</h4>\n<ol>\n<li><a href=\"https://fachrul.id/mau-belajar-automation-test-dengan-python-mulai-dari-mana/\" target=\"_blank\" rel=\"noopener noreferrer\">Belajar Python dari dasar</a> &lt;== Sekarang disini</li>\n<li><a href=\"https://fachrul.id/belajar-pytest-framework-1/\" target=\"_blank\" rel=\"noopener noreferrer\">Memahami cara kerja Pytest (bagian 1)</a> </li>\n<li><a href=\"https://fachrul.id/memulai-automation-test-selenium-python-bagian-1/\" target=\"_blank\" rel=\"noopener noreferrer\">Mulai membuat automation test dengan Selenium</a>  </li>\n<li><a href=\"https://fachrul.id/selector-locator-strategy-yang-baik/\" target=\"_blank\" rel=\"noopener noreferrer\">Menemukan Element dengan locator strategi yang baik</a> </li>\n</ol>\n<hr>\n<p> </p>",
            "image": "https://fachrul.id/media/posts/31/belajar-python.jpg",
            "author": {
                "name": "Fachrul Choliluddin"
            },
            "tags": [
            ],
            "date_published": "2020-05-08T00:07:20+07:00",
            "date_modified": "2020-05-19T23:59:51+07:00"
        },
        {
            "id": "https://fachrul.id/catat-ini-berbagai-command-adb-yang-berguna-untuk-automation-tester/",
            "url": "https://fachrul.id/catat-ini-berbagai-command-adb-yang-berguna-untuk-automation-tester/",
            "title": "Catat ini! berbagai command ADB yang berguna untuk automation tester",
            "summary": "Hallo Para Penguji Aplikasi Digital! Pada saat saya mengembangkan kode automation untuk android, seringkali saya menemukan command penting dan berguna dalam membantu automation code saya dan saya simpan di snippet microsoft oneNote, dan setelah dipikir-pikir sangat mubazir kalo catatan itu saya simpan sendiri, jadi pada&hellip;",
            "content_html": "<p>Hallo Para Penguji Aplikasi Digital!</p>\n<p>Pada saat saya mengembangkan kode automation untuk android, seringkali saya menemukan command penting dan berguna dalam membantu automation code saya dan saya simpan di snippet microsoft oneNote, dan setelah dipikir-pikir sangat mubazir kalo catatan itu saya simpan sendiri, jadi pada kesempatan kali ini akan saya tuliskan disini command Android Debug Bridge (ADB) apa saja yang bisa membantu pengujian kita</p>\n<h2 id=\"mcetoc_1e6qomc7p0\">Buka kunci Ponsel</h2>\n<pre><code class=\"language-bash\">adb shell input keyevent  # idupin HP<br>adb shell input text yourpasscode  # Masukin PIN <br>adb shell input keyevent KEYCODE_ENTER   # tekan enter</code></pre>\n<h2 id=\"mcetoc_1e6qomfjh1\">Toggle status bar</h2>\n<pre><code class=\"language-bash\">#pull status bar\nadb shell service call statusbar 1\n#collapse status bar\nadb shell service call statusbar 2</code></pre>\n<h2 id=\"mcetoc_1e6qomirn2\">Buka/tutup app</h2>\n<pre><code class=\"language-bash\">#open app : <br>adb shell monkey -p id.fachrul.packagename 1\n<br># Open gmail <br>adb shell monkey -p com.google.android.gm 1\n#close app :<br>adb shell am force-stop packagename\n# Close gmail \nadb shell am force-stop com.google.android.gm</code></pre>\n<h2 id=\"mcetoc_1e6qommh03\"> Tap di aplikasi</h2>\n<pre><code class=\"language-shell\">adb shell input tap x y</code></pre>\n<p>nah `x y` itu koordinat sumbu X dan Y, gimana cara dapetinnya?</p>\n<pre><code class=\"language-shell language-shell-session\"># dump the current screen ui</code><br><code class=\"language-shell language-shell-session\">adb shell uiautomator dump</code><br><code class=\"language-shell language-shell-session\"># copy the xml file to computer </code><br><code class=\"language-shell language-shell-session\">adb pull sdcard/window_dump.xml ~/Desktop/</code><br><code class=\"language-shell language-shell-session\"># atau gini juga bisa</code><br><code class=\"language-shell language-shell-session\">adb pull $(adb shell uiautomator dump | grep -oP '[^ ]+.xml') /sdcard/window_dump.xml</code></pre>\n<p>trus cek attribut \"bounds\" di element yang kita mau buat dapetin koordinatnya, hint: bisa juga sih dapetin koordinat dari uiautomatorviewer :D</p>\n<h2 id=\"mcetoc_1e6qomqn04\">Install aplikasi langsung</h2>\n<pre><code class=\"language-shell\">adb install -r namafile.apk</code></pre>\n<p>bisa ditambahin argument</p>\n<pre><code class=\"language-shell\">adb -d = untuk device, <br>adb -e = utk emulator, <br>adb -s = untuk ke serial number tertentu<br></code></pre>\n<p>atau klo mau sekaligus install apk di banyak devices </p>\n<pre><code class=\"language-shell\">alias apkinstall=\"adb devices | tail -n +2 | cut -sf 1 | xargs -I X adb -s X install -r $1\"</code><br><br><code class=\"language-shell\"># Penggunaannya Install an apk on all devices</code><br><code class=\"language-shell\">apkinstall ~/Downloads/MyAppRelease.apk  </code></pre>\n<h2 id=\"mcetoc_1e6qon7gl5\">Hapus aplikasi</h2>\n<pre><code class=\"language-shell-session\">adb shell pm uninstall com.example.MyApp     <br>adb shell pm clear id.fachrul.package // Deletes all data associated with a package.</code></pre>\n<p> </p>\n<h2 id=\"mcetoc_1e6qonajm6\">Buka aktivity langsung</h2>\n<pre><code class=\"language-shell-session\">adb shell am start -W -n com.gojek.life/com.gojek.golife.presentation.feature.LifeSplashActivity -S -a android.intent.action.MAIN -c android.intent.category.LAUNCHER -f 0x10200000</code></pre>\n<p>Apa nama activity sekarang ini (lagi dibuka/focus)</p>\n<pre><code class=\"language-shell-session\">adb shell dumpsys window windows | grep -E 'mCurrentFocus|mFocusedApp'</code> </pre>\n<h2 id=\"mcetoc_1e6qonf7v7\">Monkey test</h2>\n<pre><code class=\"language-shell\">adb shell monkey -p &lt;nama package&gt; -v --pct-syskeys 0 3000</code><br><br><code class=\"language-shell\">adb shell monkey -p com.myAppPackage -v 10000 -s 100 // monkey tool is generating 10.000 random events on the real device</code></pre>\n<h2 id=\"mcetoc_1e6qonlc38\">Filter adb log dengan lebih indah</h2>\n<pre><code class=\"language-shell\">pidcat &lt;nama package&gt;</code></pre>\n<p>nah pidcat ini adalah aplikasi tambahan based on python script, bisa di install mengikuti petunjuk <a href=\"https://github.com/JakeWharton/pidcat/blob/master/README.md\" target=\"_blank\" rel=\"noopener noreferrer\">disini</a> </p>\n<h2 id=\"mcetoc_1e6qonotm9\">Hapus log device</h2>\n<pre><code class=\"language-shell\">adb logcat -c</code></pre>\n<h2 id=\"mcetoc_1e6qonu54a\">Ambil bug report berupa informasi dari device, dumpstate, dumpsys dan logcat output</h2>\n<pre><code class=\"language-css language-javascript language-shell\">adb bugreport &gt; path_file_nya</code></pre>\n<h2 id=\"mcetoc_1e6qoo9omc\">Open deeplink</h2>\n<p><code class=\"language-shell\">adb shell am start -a android.intent.action.VIEW -d \"schema://link\"</code></p>\n<h2 id=\"mcetoc_1e6qood6ad\">Reset permissions</h2>\n<pre><code class=\"language-shell\">adb shell pm reset-permissions -p your.app.package</code></pre>\n<h2 id=\"mcetoc_1e6qoog3me\">Kasih permission</h2>\n<pre><code class=\"language-shell-session\">adb shell pm grant your.app.package</code></pre>\n<h2 id=\"mcetoc_1e6qoomaof\">Key event</h2>\n<pre><code class=\"language-shell-session\">adb shell input keyevent 3 // Home btn<br>adb shell input keyevent 4 // Back btn<br><br>adb shell input keyevent 5 // Call<br><br>adb shell input keyevent 6 // End call<br><br>adb shell input keyevent 26  // Turn Android device ON and OFF. It will toggle device to on/off status.<br><br>adb shell input keyevent 27 // Camera<br><br>adb shell input keyevent 64 // Open browser<br><br>adb shell input keyevent 66 // Enter<br><br>adb shell input keyevent 67 // Delete (backspace)<br><br>adb shell input keyevent 207 // Contacts<br><br>adb shell input keyevent 220 / 221 // Brightness down/up<br><br>adb shell input keyevent 277 / 278 /279 // Cut/Copy/Paste<br><br>// https://developer.android.com/reference/android/view/KeyEvent.html<br><br><br></code></pre>\n<p><code></code>Ambil serial dari connected device</p>\n<pre><code class=\"language-shell-session\">adb devices | tail -n +2</code> </pre>\n<p> </p>",
            "image": "https://fachrul.id/media/posts/30/ADB.png",
            "author": {
                "name": "Fachrul Choliluddin"
            },
            "tags": [
            ],
            "date_published": "2020-04-27T15:24:00+07:00",
            "date_modified": "2020-05-06T16:05:37+07:00"
        },
        {
            "id": "https://fachrul.id/perintah-git-yang-berguna-tapi-jarang-yang-tahu/",
            "url": "https://fachrul.id/perintah-git-yang-berguna-tapi-jarang-yang-tahu/",
            "title": "Perintah Git yang berguna tapi jarang yang tahu",
            "summary": "GIT? tools andalan dalam kolaborasi pengembangan perangkat lunak yang banyak dari kita sudah familiar dan bahkan menggunakan nya sehari-hari. Tapi buat saya pribadi seringkali cuma pake git commit, git push, git merge doank ahaha, ada beberapa command yg penting dan berguna sebenernya yang bisa sangat&hellip;",
            "content_html": "<p>GIT? tools andalan dalam kolaborasi pengembangan perangkat lunak yang banyak dari kita sudah familiar dan bahkan menggunakan nya sehari-hari. Tapi buat saya pribadi seringkali cuma pake git commit, git push, git merge doank ahaha, ada beberapa command yg penting dan berguna sebenernya yang bisa sangat memudahkan kita dan ternyata banyak orang yang tahu juga</p>\n<h2 id=\"mcetoc_1e6qmq1h30\">Mengurutkan Branch berdasarkan tanggal</h2>\n<pre class=\"  language-bash\"><code class=\"  language-bash\"><span class=\"token function\">git</span> branch --sort<span class=\"token operator\">=</span>-committerdate</code> </pre>\n<h2 id=\"mcetoc_1e6qmqu5j1\">Pindah ke Branch sebelumnya</h2>\n<pre class=\"  language-bash\"><code class=\"  language-bash\"><span class=\"token function\">git</span> checkout -</code></pre>\n<h2 id=\"mcetoc_1e6qmr2ge2\">Menampilkan informasi komit terakhir dari semua branch</h2>\n<pre class=\"  language-bash\"><code class=\"  language-bash language-shell-session\"><span class=\"token function\">git branch -v<br>git</span> branch -vv  # kalo mau sama informasi upstream remote branch nya sekalian</code></pre>\n<h2 id=\"mcetoc_1e6qmr6vg3\">Ambil perubahan suatu file di branch lain</h2>\n<pre class=\"  language-bash\"><code class=\"  language-bash\"><span class=\"token function\">git</span> checkout feature/branch-lain -- fileyangkitamau.txt</code></pre>\n<h2 id=\"mcetoc_1e6qmrb614\">Melihat status Git dengan lebih ringkas</h2>\n<p>kadang kita cuma menjalankan command `git status` untuk melihat file apa aja yang mengalami perubahan atau penambahan files. sebagai alternatif untuk informasi perubahan files dengan lebih ringkas kita bisa menjalankan:</p>\n<pre class=\"  language-bash\"><code class=\"  language-bash\"><span class=\"token function\">git</span> status -sb</code></pre>\n<h2 id=\"mcetoc_1e6qmrjff5\">Menelusuri file yang hilang</h2>\n<pre class=\"  language-bash\"><code class=\"  language-bash\"><span class=\"token function\">git</span> log -- missing_file.txt</code></pre>\n<h2 id=\"mcetoc_1e6qmrnc76\">Siapa Commiter paling <span style=\"text-decoration: line-through;\">rajin</span> banyak</h2>\n<p>Buat lucu-lucuan aja di urutin siapa commiter paling banyak</p>\n<pre class=\"highlight\"><code class=\"language-bash\">git shortlog -sn --all --no-merges</code></pre>\n<p>atau klo mau lebih spesifik lagi bisa ditambahin tempo nya</p>\n<pre class=\"highlight\"><code class=\"language-bash\">git shortlog -sn --since='10 weeks' --until='2 weeks'</code></pre>\n<h2 id=\"mcetoc_1e6qmsm137\">Siapa nih yg ubah file dan line tertentu</h2>\n<pre class=\"highlight\"><code class=\"language-bash\">git blame -L5,10 .gitlab-ci.yml</code></pre>\n<h2 id=\"mcetoc_1e6qmsr888\">Daripada nunjukin line yang berubah mending minta tunjukin kata yang berubah</h2>\n<pre class=\"highlight\"><code class=\"language-bash\">git diff --word-diff</code></pre>\n<h2 id=\"mcetoc_1e6qmsvj59\">Melihat branch mana saja yang akhir-akhir ini kita kerjakan</h2>\n<p>Kadang terlalu banyak lompat branch jadi suka tersesat sendiri dan bingung mau mulai darimana</p>\n<pre class=\"highlight\"><code class=\"language-bash\">git for-each-ref --count=10 --sort=-committerdate refs/heads/ --format=\"%(refname:short)\"</code></pre>\n<p>kalo terlalu ribet hapal nya tinggal bikin alias jadi `git recent` sih</p>\n<h2 id=\"mcetoc_1e6qmt3oia\">Lagi pada ngerjain apaan sih?</h2>\n<p>buat tim leader biasanya penting untuk ngecek sesekali dari apa yang dikerjain tim kita di repo, sebenernya bisa aja liat di git commit di gitlab/github nya sih, tapi klo lagi di terminal bisa langsung di eksekusi aja command ini</p>\n<pre class=\"highlight\"><code class=\"language-bash\">git log --all --oneline --no-merges</code></pre>\n<p>atau klo mau ada pembatas waktu bisa ditambahin argument since: days/weeks</p>\n<pre class=\"highlight\"><code class=\"language-bash\">git log --all --since='3 days' --oneline --no-merges</code></pre>\n<p>Trus klo mau cek orang tertentu bisa pake gini</p>\n<pre class=\"highlight\"><code class=\"language-bash\">git log --all --oneline --no-merges --author=&lt;email address&gt;<br></code></pre>\n<pre class=\"highlight\"><code class=\"language-bash\">git log --since=00:00:00 --all --no-merges --oneline --author=&lt;email address&gt;</code></pre>\n<h2 id=\"mcetoc_1e6qmtcp3b\">Melihat logs yang kompleks dengan grafis </h2>\n<pre class=\"highlight\"><code class=\"language-bash\">git log --graph --all --decorate --stat --date=iso</code></pre>",
            "image": "https://fachrul.id/media/posts/29/coding-computer-data-depth-of-field-577585.jpg",
            "author": {
                "name": "Fachrul Choliluddin"
            },
            "tags": [
            ],
            "date_published": "2020-04-26T14:44:10+07:00",
            "date_modified": "2020-05-06T15:44:32+07:00"
        },
        {
            "id": "https://fachrul.id/ulasan-pekan-ini-18-oktober-2019/",
            "url": "https://fachrul.id/ulasan-pekan-ini-18-oktober-2019/",
            "title": "Ulasan Pekan Ini - 18 Oktober 2019",
            "summary": "Hi, lama tak berjumpa! Mohon maaf baru menulis lagi, karena habis migrasi ke laptop baru 😅 #ciee Dengan dipersenjatai macbook pro yang lebih mumpuni harusnya makin semangat bikin konten nih!!! tapi kenyataannya akhir-akhir ini malah sibuk ngurusin kerjaan, hufft Oke dikesempatan kali ini tagar post #retrospective&hellip;",
            "content_html": "<p>Hi, lama tak berjumpa!</p>\n<p>Mohon maaf baru menulis lagi, karena habis migrasi ke laptop baru 😅 #ciee</p>\n<p>Dengan dipersenjatai macbook pro yang lebih mumpuni harusnya makin semangat bikin konten nih!!! tapi kenyataannya akhir-akhir ini malah sibuk ngurusin kerjaan, hufft</p>\n<p>Oke dikesempatan kali ini tagar post #retrospective saya ubah menjadi judul \"Ulasan Pekan ini\" karena simple judulnya, klo ada kata retrospective keknya terlalu keren ahaha 🤣, tapi isinya sama kok, kalem aja!</p>\n<p>Oke kita mulai ulasan hal-hal menarik pekan ini:</p>\n<h2 id=\"mcetoc_1dniasf450\">Perkakas</h2>\n<p>ada sumber alat bantu kerja yang baru nih, di <a href=\"https://file-examples.com/\">https://file-examples.com/</a> kita bisa unduh file sampling berupa video, audio, document, gambar ataupun file jenis lainya untuk kebutuhan testing, khususnya upload file, jadi bisa nyari file yg ukurannya, resolusinya ataupun ekstensi nya sesuai dengan skenario test yang kita mau.</p>\n<h2 id=\"mcetoc_1dnib17731\">Bacaan</h2>\n<p>Rekomendasi bacaan pekan ini:</p>\n<ul>\n<li>Bahasan penulisan automation test code yang baik ga perlu sesuai prinsip clean code banget. <strong>Good production code is well-factored; good test code is <em>obvious</em>.</strong> <a href=\"https://mtlynch.io/good-developers-bad-tests/\">https://mtlynch.io/good-developers-bad-tests/</a></li>\n<li>Pandangan mengenai value testing yang baik pada tim <a href=\"https://www.techwell.com/techwell-insights/2018/11/cost-software-testing\">https://www.techwell.com/techwell-insights/2018/11/cost-software-testing</a></li>\n<li>Perihal penulisan pytest code yg baik <a href=\"https://raphael.codes/blog/customizing-your-pytest-test-suite-part-1/\">https://raphael.codes/blog/customizing-your-pytest-test-suite-part-1/</a> dan <a href=\"https://raphael.codes/blog/customizing-your-pytest-test-suite-part-2/\">https://raphael.codes/blog/customizing-your-pytest-test-suite-part-2/</a></li>\n</ul>\n<h2 id=\"mcetoc_1dnib8ffc2\">Tontonan</h2>\n<p>Mengulang lagi video bagus dari Angie Jones untuk menentukan skenario test mana yang layak untuk di automate</p>\n<h2 id=\"mcetoc_1dnibbbqh3\"><iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/VL-_pnICmGY\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"allowfullscreen\"></iframe></h2>\n<h2 id=\"mcetoc_1dnibbbqh4\">Siniar (podcast)</h2>\n<p>Imre bahas soal sudut pandang venture capital melihat profile founder startup dalam proses pendanaan</p>\n<iframe width=\"100%\" height=\"232\" src=\"https://open.spotify.com/embed-podcast/episode/2OrRTC0IVADVz3UpBaD6wM\" frameborder=\"0\" allowtransparency=\"true\" allow=\"encrypted-media\"></iframe>\n<p> </p>",
            "author": {
                "name": "Fachrul Choliluddin"
            },
            "tags": [
            ],
            "date_published": "2019-10-19T22:58:53+07:00",
            "date_modified": "2019-10-19T22:58:53+07:00"
        },
        {
            "id": "https://fachrul.id/berkarya-bukan-bekerja/",
            "url": "https://fachrul.id/berkarya-bukan-bekerja/",
            "title": "Bukan hanya bekerja, waktunya berkarya!",
            "summary": "Tanggal 5 September 2019 adalah hari terakhir saya bekerja di Mekari sebagai Lead Software Quality (SDET &amp; QA) pengalaman dan ilmu selama 2 tahun di Mekari ini sangat luar biasa sekali, saya belajar dan berkembang lebih pesat daripada 5 tahun pengalaman kerja sebelum gabung di&hellip;",
            "content_html": "<p>Tanggal 5 September 2019 adalah hari terakhir saya bekerja di <a href=\"https://mekari.com/\">Mekari </a>sebagai Lead Software Quality (SDET &amp; QA) pengalaman dan ilmu selama 2 tahun di <a href=\"https://id.linkedin.com/company/mekari\">Mekari </a>ini sangat luar biasa sekali, saya belajar dan berkembang lebih pesat daripada 5 tahun pengalaman kerja sebelum gabung di Mekari !!!</p>\n<p>Saya bergabung sebagai SDET <em>(software development engineer in test)</em> di <a href=\"https://sleekr.co/hr/\">Sleekr HR </a>pada 16 Oktober 2017, tim yang hanya terdiri dari 2 orang, lalu <a href=\"https://sleekr.co\">Sleekr</a> tumbuh pesat bahkan berevolusi menjadi Mekari dengan mengakuisisi startup lain yaitu <a href=\"https://www.talenta.co/\">Talenta.co</a> dan <a href=\"https://www.jurnal.id/id/\">Jurnal.id</a>, terakhir tim SDET &amp; QA <em>(Quality Assurance)</em> berjumlah 15 orang dan saya ditunjuk sebagai tim Leadernya.</p>\n<h3 id=\"mcetoc_1dk4pqhtj1\">Lantas apa hubungannya judul ini dengan karir saya di Mekari?</h3>\n<p>Berawal dari \"pidato kelulusan\" yang saya sampaikan kepada rekan-rekan kerja lain di Mekari, dimana saya melontarkan sebuah kalimat dengan spontan tanpa rencana <strong>\"Sudah waktunya berkarya, bukan lagi bekerja. kita harus memiliki mindset entrepreneur dalam bekerja\"</strong> dan setelah berkata itu, saya merenung panjang dalam perjalanan pulang, apa bedanya bekerja dan berkarya dengan konteks karyawan? nah pada tulisan kali ini akan saya sampaikan hasil pemikiran saya ini.</p>\n<h2 id=\"mcetoc_1dk4pq4hf0\">Bekerja vs Berkarya</h2>\n<p>Mana yang lebih sering ada di pikiran kita setiap pagi dan bersiap berangkat kerja:</p>\n<ol>\n<li><em>I have something to do</em> (saya memiliki sesuatu untuk dilakukan)</li>\n<li><em>I have to do something</em> (saya harus melakukan sesuatu)</li>\n</ol>\n<p>Mungkin sedikit berlebihan dalam penyederhanaan ini, namun saya yakini hal ini, jika kamu lebih sering merasakan opsi 1 masih dominan maka kamu berada pada posisi \"<strong>bekerja</strong>\", jika opsi 2 yang lebih sering, maka kamu memiliki jiwa \"<strong>berkarya</strong>\".</p>\n<p>Faktanya ketika kita bekerja disebuah perusahaan kita disebut <em>karyawan</em>, artinya manusia yang berkarya, nah berkarya <span style=\"text-decoration: underline;\">tidak harus berkesenian</span>, <span style=\"text-decoration: underline;\">tidak harus membuat kriya</span>, bahkan <span style=\"text-decoration: underline;\">tidak mesti menjadi seorang pengusaha</span> untuk disebut berkarya. Tetapi berkarya berbeda dengan bekerja.</p>\n<p>Orang yang <strong>bekerja</strong> akan melaksanakan pekerjaan dan tugasnya dengan baik agar sesuai dengan harapan bos, karena dia ingin mempertahankan pekerjaannya itu, mendapatkan upah/gaji sebagai imbalan jasa. Sedangkan orang yang <strong>berkarya</strong>, akan rela mencurahkan tenaga, waktu, dan sumber daya lainnya supaya hasilnya bisa memuaskan dirinya sendiri, ada ketebalan rasa cinta yang dituangkan pada apa yang dikerjaannya, orang berkarya <strong>berani memulai</strong> dari nol ketmbang mengikuti formula, orang yang <strong>berani mencari</strong> jawaban ketimbang menghafal jawaban, ia yang <strong>bisa menciptakan</strong> visi sendiri.</p>\n<p>Kita bisa saja menjadi karyawan sebuah perusahaan tetapi setiap hari masuk kantor adalah <span style=\"text-decoration: underline;\">untuk berkarya</span>, karena kita sudah mencintai pekerjaan ini, kita benar-benar tulus, ingin hasilnya baik, bukan karena diiming-imingi bonus atau takut kena sanksi.</p>\n<h2 id=\"mcetoc_1dk4rc0r12\">Bagaimana berkarya dengan kode</h2>\n<p>Jika ditarik pada konsep karya pada dunia software engineering, karya kita adalah aplikasi digital, ada sebuah istilah yang populer di engineering yaitu <em>\"software craftmanship\"</em> adalah sebuah metafora dari penulisan kode yang elegan, berkuallitas, mendetail dan menghasilkan sebuah kebanggan, kode yang ditulis bukan hanya bekerja secara fungsional tapi harus juga mudah di rawat kedepannya dan tidak rewel rework karena adanya masalah <em>(defect)</em>.</p>\n<p>Adanya budaya <em>code review</em> di Mekari, saya rasakan menjadi medium untuk menularkan ilmu yang baik, kita belajar memahami maksud dari si penulis kode tersebut, lalu membaca kritik dan saran rekan sejawat yang ternyata bisa melahirkan rasa kepemilikan kode dan tanggung jawab yang tinggi. ada kebanggan ketika kode yang kita tuliskan mendapatkan approval dari banyak orang dan bisa dirasakan manfaatnya oleh customer.</p>\n<p>Rangkaian aktifitas SDLC membuat kita sering berdiskusi masalah customer/pelanggan dengan beragam tim, membuat kita mengenali apa kebutuhan pelanggan aplikasi kita, sehingga kita ingin fitur baru tersebut menjadi <span style=\"text-decoration: underline;\">karya bersama</span> yang bisa <strong>melebihi harapan pelanggan</strong>, menyelesaikan persoalannya dan membantu aktifitas mereka lebih baik, bukankah ini sebuah <strong>kebanggan</strong> tersendiri bagi insan yang berkarya ketika mengetahui orang lain bisa terbantu dengan hasil karyanya.</p>\n<p>Di Mekari, saya sangat merasakan adanya dorongan untuk berkarya, kebebasan untuk mengungkapkan pendapat, dan kritik, adanya rasa aman untuk bereksperimen dalam bekerja, mencoba serangkaian tools modern baru. Semua itu sangat di dukung oleh stakeholder tim development yang supportif, saya bersyukur memiliki mentor hebat seperti pak <a href=\"https://id.linkedin.com/in/vcool\">Rafeequl</a> sebagai CTO yang sering memberikan tantangan kepada tim untuk bergerak lebih baik, ia tidak terbiasa memberikan perintah untuk mengerjakan sesuatu, tetapi menjadi teman diskusi mencari solusi dari suatu masalah yang ada dengan cara yang lebih baik, hingga yang paling baik.</p>\n<h2 id=\"mcetoc_1dk4t52sj0\">Terima Kasih</h2>\n<p>atas semua pengalaman indah dan pembelajaran yang luar biasa, saya belajar banyak dari setiap orang di Mekari, saya bersyukur bisa mengenal kalian, saya harap kita semua bisa terus <span style=\"text-decoration: underline;\">bisa mencurahkan sepenuh hati</span> pada hal yang kita kerjakan, selama itu bisa bermanfaat bagi pelanggan, orang banyak, selama itu bisa membuat kita bahagia, janganlah menganggap itu bekerja untuk gaji, karena <strong>sesungguhnya kita sedang berkarya!</strong> menciptakan kode yang mengubah sebuah binary menjadi value</p>\n<div class=\"gallery\"   >\n<figure class=\"gallery__item\"><a href=\"https://fachrul.id/media/posts/26/gallery/sleekr-to-mekari.jpg\" ><img src=\"https://fachrul.id/media/posts/26/gallery/sleekr-to-mekari-thumbnail.jpg\" alt=\"sleekr menjadi mekari\" width=\"240\" height=\"240\"></a>\n<figcaption class=\"gallery-description\">perbandingan jumlah karyawan 2017 dan 2019</figcaption>\n</figure>\n<figure class=\"gallery__item\"><a href=\"https://fachrul.id/media/posts/26/gallery/team-techology-mekari.jpg\" ><img src=\"https://fachrul.id/media/posts/26/gallery/team-techology-mekari-thumbnail.jpg\" alt=\"HR technology team\" width=\"240\" height=\"240\"></a>\n<figcaption class=\"gallery-description\">HR technology team</figcaption>\n</figure>\n<figure class=\"gallery__item\"><a href=\"https://fachrul.id/media/posts/26/gallery/fachrul-ch.jpg\" ><img src=\"https://fachrul.id/media/posts/26/gallery/fachrul-ch-thumbnail.jpg\" alt=\"Fachrulch di Mekari\" width=\"240\" height=\"240\"></a>\n<figcaption class=\"gallery-description\">Saya di Mekari</figcaption>\n</figure>\n<figure class=\"gallery__item\"><a href=\"https://fachrul.id/media/posts/26/gallery/rafeequl-dan-fachrul.jpg\" ><img src=\"https://fachrul.id/media/posts/26/gallery/rafeequl-dan-fachrul-thumbnail.jpg\" alt=\"CTO rafeequl\" width=\"240\" height=\"240\"></a>\n<figcaption class=\"gallery-description\">Bersama mentor paling keren CTO Rafeequl</figcaption>\n</figure>\n<figure class=\"gallery__item\"><a href=\"https://fachrul.id/media/posts/26/gallery/suwandi-dan-fachrul.jpg\" ><img src=\"https://fachrul.id/media/posts/26/gallery/suwandi-dan-fachrul-thumbnail.jpg\" alt=\"CEO Suwandi\" width=\"240\" height=\"240\"></a>\n<figcaption class=\"gallery-description\">Bersama Bos paling baik dan supportif CEO Suwandi</figcaption>\n</figure>\n</div>",
            "image": "https://fachrul.id/media/posts/26/art-art-materials-bright-1047540.jpg",
            "author": {
                "name": "Fachrul Choliluddin"
            },
            "tags": [
            ],
            "date_published": "2019-09-07T10:41:06+07:00",
            "date_modified": "2019-09-07T11:29:45+07:00"
        },
        {
            "id": "https://fachrul.id/retrospective-1-agustus-24-agustus-2019/",
            "url": "https://fachrul.id/retrospective-1-agustus-24-agustus-2019/",
            "title": "Retrospective 1 Agustus - 24 Agustus 2019",
            "summary": "Hi, ini adalah catatan retrospective diri sendiri selama periode 1-24 agustus 2019, rencananya akan rutin per-pekan menuliskan apa yang terjadi selama minggu itu sebagai refleksi, karena ini adalah post pertama, makanya langsung aja dimulai dari peride selama awal bulan :D 19 Agustus 2019 - Hari&hellip;",
            "content_html": "<p>Hi, ini adalah catatan retrospective diri sendiri selama periode 1-24 agustus 2019, rencananya akan rutin per-pekan menuliskan apa yang terjadi selama minggu itu sebagai refleksi, karena ini adalah post pertama, makanya langsung aja dimulai dari peride selama awal bulan :D</p>\n<h2 id=\"mcetoc_1dj22ha0g0\">Apa yang terjadi?</h2>\n<p><strong>19 Agustus 2019</strong> - Hari tampil sebagai pembicara publik pertama di <a href=\"https://scrumdaybandung.com/\">Scrumday Bandung 2019</a>, lumayan deg-degan sampai-sampai latihan presentasinya berminggu-minggu bareng Agus Verdy</p>\n<p> </p>\n<blockquote class=\"instagram-media\" style=\"background: #FFF; border: 0; border-radius: 3px; box-shadow: 0 0 1px 0 rgba(0,0,0,0.5),0 1px 10px 0 rgba(0,0,0,0.15); margin: 1px; max-width: 540px; min-width: 326px; padding: 0; width: calc(100% - 2px);\"   >\n<div style=\"padding: 16px;\">\n<div style=\"display: flex; flex-direction: row; align-items: center;\"> </div>\n<div style=\"padding: 19% 0;\"> </div>\n<div style=\"display: block; height: 50px; margin: 0 auto 12px; width: 50px;\"> </div>\n<div style=\"padding-top: 8px;\">\n<div style=\"color: #3897f0; font-family: Arial,sans-serif; font-size: 14px; font-style: normal; font-weight: 550; line-height: 18px;\">View this post on Instagram</div>\n</div>\n<p style=\"margin: 8px 0 0 0; padding: 0 4px;\"><a href=\"https://www.instagram.com/p/B1VOPBpHwbw/\" style=\"color: #000; font-family: Arial,sans-serif; font-size: 14px; font-style: normal; font-weight: normal; line-height: 17px; text-decoration: none; word-wrap: break-word;\" target=\"_blank\" rel=\"noopener noreferrer\">Alhamdulillah dapet kesempatan pertama untuk tampil di #scrumdaybdg2019 ternyata paling seru, Peserta masih fresh, walau banyak yg laper 😝 Tapi beban benchmarks menjadi speaker pertama itu langsung ilang ketika udah diatas panggung All out.. mendeliver materi yang udah kita siapin jauh hari biar menjadi value bagi pemirsa Thank you @mekaricom udah menjadi tempat kita belajar dan @scrumdaybandung atas kesempatan ini</a></p>\n<h2 id=\"mcetoc_1dj22p76f1\" style=\"color: #c9c8cd; font-family: Arial,sans-serif; font-size: 14px; line-height: 17px; margin-bottom: 0; margin-top: 8px; overflow: hidden; padding: 8px 0 7px; text-align: center; text-overflow: ellipsis; white-space: nowrap;\">A post shared by <a href=\"https://www.instagram.com/fachrulch/\" style=\"color: #c9c8cd; font-family: Arial,sans-serif; font-size: 14px; font-style: normal; font-weight: normal; line-height: 17px;\" target=\"_blank\" rel=\"noopener noreferrer\"> Fachrul Abbana Alif</a> (@fachrulch) on <time style=\"font-family: Arial,sans-serif; font-size: 14px; line-height: 17px;\" datetime=\"2019-08-19T04:08:34+00:00\">Aug 18, 2019 at 9:08pm PDT</time></h2>\n</div>\n</blockquote>\n<h2 id=\"mcetoc_1dj22p76f2\">\n<script async=\"\" src=\"//www.instagram.com/embed.js\"></script>\n</h2>\n<p id=\"mcetoc_1dj23grro8\">Cerita selengkapnya bisa di denger podcast penguji.id di bawah ini di episode 2 ya</p>\n<p>Oia untuk slidenya bisa di akses di <a href=\"https://speakerdeck.com/fachrulch\">https://speakerdeck.com/fachrulch</a> (ini juga baru bikin ahaha)</p>\n<h2 id=\"mcetoc_1dj22p8r24\">Podcast</h2>\n<p>Mulai dari 30 Juli kemaren mulai bikin podcast :D coba cari aja di Spotify \"Celoteh Penguji aplikasi digital\", ini episode terkini nya:</p>\n<p><iframe width=\"100%\" height=\"232\" src=\"https://open.spotify.com/embed-podcast/episode/3M6hBg976nmS2pVs0Ys4Y3\" frameborder=\"0\" allowtransparency=\"true\" allow=\"encrypted-media\"></iframe></p>\n<h3 id=\"mcetoc_1dj23cjuh7\">Podcast of the week</h3>\n<p><iframe width=\"100%\" height=\"232\" src=\"https://open.spotify.com/embed-podcast/episode/2ETpU1nf50A7vvPuIXfv7R\" frameborder=\"0\" allowtransparency=\"true\" allow=\"encrypted-media\"></iframe> </p>\n<p>Disini podcast Makna Talk, 30 days of lunch cerita soal perjalanan mereka membuat podcast dan idealisme berkarya, sangat menginspirasi dan memacu untuk bisa berkarya di brand sendiri, <a href=\"https://penguji.id\">Penguji.id</a></p>\n<h2 id=\"mcetoc_1dj22pjsc5\">YouTube</h2>\n<p>Lagi seneng belajar ngerekam video kece pake hape, makanya mulai follow channel tentang videography seperti:</p>\n<ul>\n<li>Iphoneographers: <a href=\"https://www.youtube.com/user/iphoneographers/\">https://www.youtube.com/user/iphoneographers</a></li>\n<li><a href=\"https://www.youtube.com/channel/UC3DkFux8Iv-aYnTRWzwaiBA\">Peter McKinnon</a></li>\n<li><a href=\"https://www.youtube.com/channel/UCtM-xct7QQx0dL-swaMzYbg/\">Peter Lindgren</a></li>\n<li><a href=\"https://www.youtube.com/channel/UC3stPIuUoCDHG7COfwr0tEA\">Brandon Li</a></li>\n<li><a href=\"https://www.youtube.com/channel/UCw9zJ3qnebPPGsutiEAvu5Q\">Parker Walbeck</a></li>\n</ul>\n<h3 id=\"mcetoc_1dj239hm26\">Video of the week</h3>\n<p><iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/VL-_pnICmGY\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"allowfullscreen\"></iframe> </p>\n<p>Disini Angie Jones cerita tentang cara dia mengatur matrix menentukan use case mana aja yang perlu dan harus di automate, mungkin ini juga bisa jadi ide buat bikin topik di podcast nantinya</p>\n<h2 id=\"mcetoc_1dj22p76f3\">Reading list</h2>\n<p>Banyak baca soal Quality Assistance yang akan di bawain di scrum day bandung dari:</p>\n<ul>\n<li><a href=\"https://www.atlassian.com/inside-atlassian/quality-assurance-vs-quality-assistance\">https://www.atlassian.com/inside-atlassian/quality-assurance-vs-quality-assistance</a></li>\n<li><a href=\"https://amaysim.engineering/from-quality-assurance-to-quality-assistance-32ffc990d27b\">https://amaysim.engineering/from-quality-assurance-to-quality-assistance-32ffc990d27b</a></li>\n<li><a href=\"https://www.thinksys.com/qa-testing/from-quality-assurance-to-quality-assistance/\">https://www.thinksys.com/qa-testing/from-quality-assurance-to-quality-assistance/</a></li>\n</ul>\n<p>Kalo mau lebih lanjut belajar soal quality assistance, ada juga videonya sih</p>\n<p><iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/yRP29wFqu20\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"allowfullscreen\"></iframe></p>\n<p><iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/w5MN1JWRM1I\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"allowfullscreen\"></iframe></p>\n<p><iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/oHFBp5SOEfI\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"allowfullscreen\"></iframe></p>\n<p><iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/Ix61aEREKNU\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"allowfullscreen\"></iframe></p>\n<p> </p>\n<h2 id=\"mcetoc_1dj2406o1a\">Apa yang akan dilakukan minggu depan?</h2>\n<p>Belajar Android! yup, pengen belajar bikin apps android, susah banget nyisihin waktu buat ngulik lagi, klo malem rasanya ngantuk, mau belajar subuh, malah kesiangan :D</p>\n<p>pokoknya minggu depan mau belajar lebih serius lagi ahaha :D</p>",
            "author": {
                "name": "Fachrul Choliluddin"
            },
            "tags": [
            ],
            "date_published": "2019-08-24T22:31:52+07:00",
            "date_modified": "2019-08-24T22:32:13+07:00"
        },
        {
            "id": "https://fachrul.id/membangun-cross-functional-team/",
            "url": "https://fachrul.id/membangun-cross-functional-team/",
            "title": "Membangun Cross-Functional Team",
            "summary": "Kita tak mungkin bisa membuat rumah hanya dari bahan baku pasir, kita memerlukan berbagai material berbeda sehingga mampu membuat bangunan yang kokoh. Begitu pula dengan perusahaan dan tim, kita memiliki peran masing-masing dari mulai Product owner, scrum master, software developer, tester dan stakeholder lainya. Cross&hellip;",
            "content_html": "<p id=\"mcetoc_1di390br16\" class=\"dropcap\">Kita tak mungkin bisa membuat rumah hanya dari bahan baku pasir, kita memerlukan berbagai material berbeda sehingga mampu membuat bangunan yang kokoh.</p>\n<p>Begitu pula dengan perusahaan dan tim, kita memiliki peran masing-masing dari mulai Product owner, scrum master, software developer, tester dan stakeholder lainya.</p>\n<p>Cross functional team menjadi hal penting ketika kecepatan tim terus meningkat, artinya kebutuhan untuk tim dapat melaju bersama dengan keahlian beragam dan saling mersinergi.</p>\n<p>Cukup umum di lingkungan startup ketika membahas job desc itu cukup bias, batasan lingkup kerja antar jabatan itu juga seringkali tumpang tindih, bisa jadi ini adalah salah satu indikasi dari terciptanya tim yang cross functional, bukan berarti lingkungan ini tidak menghargai adanya spesialisasi keahlian, tetapi lebih besar karena keterbatasan budget untuk mempekerjakan orang dengan keahlian khusus, tapi ternyata ini justru memberikan kesempatan kepada staff untuk membaur menjadi tim secara utuh dan saling melengkapi kekurangan skillnya, dengan adanya irisan keahlian ini ternyata tim dapat saling memahami dan tahu bagaimana cara saling support.<br><br></p>\n<hr>\n<h2 id=\"mcetoc_1di39ebgh0\"><img class=\"post__image\" src=\"https://fachrul.id/media/posts/24/Screen-Shot-2019-08-12-at-23.09.23.png\" alt=\"\" width=\"800\" height=\"742\"></h2>\n<h2 id=\"mcetoc_1di3916dm7\">T-shaped skill set</h2>\n<p>dalam dunia agile yang ekstrim, dikenal dengan istilah <em>\"everyone is replaceable\"</em> tapi saya pribadi tidak setuju jika semua orang bisa bebas digantikan siapa saja, ibarat tim sepakbola, jika seorang kiper digantikan oleh seorang striker tentu tidaklah optimal toh. Tapi ya tetep aja ada juga pertanyaan \"apakah seorang tester di tim yang agile harus bisa jadi programmer juga?\" jawaban saya adalah seorang tester jaman now haruslah memiliki keahlian T-shaped skills, yaitu keahlian mendalam disatu bidang, dan keahlian melebar di bidang lainya. Seorang tester handal memiliki \"T\" shaped skill diantaranya mengerti arsitektur sistem, menguasai bahasa pemrograman, query database, debugging skill, dan keahlian implmentasi CI/CD.</p>\n<p>Tapi setiap orang tentu memiliki keahlian yang berbeda, jadi tidak terpaku melulu berbentuk seperti huruf \"T\" di area lain, bisa jadi zigzag, kotak, bentuk L seperti pada tetris, dan dengan keahlian tim yang beragam itulah akan menjadikan tim saling melengkapi hingga potongan puzzle tetris terisi penuh, sehingga tim memiliki keahlian yang beragam.</p>\n<p><img class=\"post__image\" src=\"https://fachrul.id/media/posts/24/tetris-block.jpg\" alt=\"\" width=\"425\" height=\"425\"></p>\n<p>Contoh nyata dari T shaped atau cross functional team ini adalah seperti seorang programmer yang menguasai testing, ia akan lebih efektif dalam berkomunikasi dengan tester dan cepat tanggap dalam mengatasi kesalahan yang timbul dari implementasi kode yang dibuatnya, sepengalaman saya, pairing dengan seoarang tester adalah cara tercepat bagi programer untuk memahami seluk beluk pengujian aplikasi, begitu pula dengan tester yang memiliki kemampuan debug aplikasi, tentu akan sangat membantu developer dalam menemukan root cause masalah yang timbul, atau mampu memisahkan mana issue frontend, backend atau database.</p>\n<h2 id=\"mcetoc_1di391ke88\">Kompetensi daripada Jabatan</h2>\n<p><br> Saya mengalami sendiri ada beberapa programmer yang sesungguhnya sangat handal disisi pengujian aplikasi, atau seorang tester yang memiliki solusi sederhana untuk menyelesaikan kendala arsitektur sistem yang rumit, atau memiliki keahlian database mumpuni. bahkan di tim saya sudah berkurang alasan dengan istilah \"ini mah bukan kerjaan saya\" tapi lebih banyak \"ada yang bisa dibantu?\" ini merupakan bukti tim yang berbuat melebihi dari jabatannya.</p>\n<p>Bahkan pada satu tim, para developer yang sudah disiplin menulis test sedari level unit hingga level feature seringkali saat planning selalu bertanya \"Trus cara kita test nya gimana? cara kita yakin implementasi sudah benar gimana?\" atau bahkan mereka saling review implementasi fitur dengan teliti sebelum merge master, sehingga sangat sedikit kesalahan (bug) yang ditemukan hingga akhir, paling tidak hanya beberapa user scenario yang tidak terfikirkan di awal.</p>\n<blockquote>\n<p>Semakin banyak upaya kita untuk menganalisa dan menguji produk di fase konsep awal, semakin sedikit bug kritikal yang ditemukan di akhir.</p>\n</blockquote>\n<p><br>Memiliki seorang test spesialis di tim adalah sebuah keuntungan bagi tim, tetapi bukan berarti segala tanggung jawab kualitas aplikasi ditentukan oleh ia seorang diri. seperti halnya dengan seorang database spesialist pada tim, tapi bukan berarti hanya dia yang boleh bekerja dengan database seorang diri juga toh.</p>\n<p>Mari kita kesampingkan dahulu label jabatan, dan coba kita renungkan, seorang software developer harus bisa menciptakan produk dengan keyakinan itu akan berfungsi dengan baik. Kepedulian software developer dalam menjaga kualitas dari karyanya sangatlah penting, untuk bisa mencapai mutu terbaik itulah kita harus lebih banyak meningkatkan kompetensi pengujian aplikasi yang berkualitas pada orang yang menciptakannya.</p>\n<p>Dengan begitu semakin singkat feedback loops akan menciptakan rasa percaya diri yang tinggi dan meningkatkan kecepatan rilis aplikasi dengan kualitas tertinggi. siapa yang tidak senang!?</p>\n<h2 id=\"mcetoc_1di392q03a\">Penutup</h2>\n<p>Memiliki T shaped team sehingga menciptakan cross functional team tentu memiliki banyak kelebihan, utamanya dari segi empati kepada rekan kerja, kita bisa memberikan hasil kerja yang lebih baik dan saling gotong royong mencapai tujuan bersama, <br><br>Namun ada beberapa hal yang mesti diperhatikan untuk mencegah menjadi cross functional team yang gagal memberikan hasil terbaik karena alasan tidak ada sosok yang memimpin, tidak ada tanggung jawab, asumsi pada komunikasi dan ketika tujuan tidak jelas dan spesifik maka cross functional team bisa terpuruk.<br><br>Bagaimana kiat <strong>sukses menciptakan cross functional team yang bisa diandalkan</strong>?</p>\n<ol>\n<li>berikan tujuan akhir yang jelas</li>\n<li>jangan ajari tim bagaimana cara menyelesaikannya, biarkan mereka melakukan kerja tim</li>\n<li>berikan batasan dan tanggung jawab antar tim member</li>\n<li>lakukan standup meeting/branstorming untuk sinkronisasi pekerjaan</li>\n<li>definisi of done yang jelas dan disepakati</li>\n<li>retrospective secara berkala</li>\n</ol>\n<p>Sepertihalnya sepakbola, akan sangat membantu ketika memiliki seorang swiper defender yang tidak hanya bisa tackling dan menghentikan lawan, tetapi bisa juga mengalirkan bola dengan tenang dan membantu serangan saat service bola mati seperti Virgl Van Dijk, atau kiper yang bisa menciptakan gol semacam Luis Chilavert.</p>\n<p>Jika begitu apakah sudah pantas dibilang tim sepakbola agile?</p>\n<figure class=\"post__video\"><iframe width=\"560\" height=\"314\" src=\"https://www.youtube.com/embed/oe7zyD5QRz8\" allowfullscreen=\"allowfullscreen\" ></iframe></figure>",
            "image": "https://fachrul.id/media/posts/24/valvesa.jpeg",
            "author": {
                "name": "Fachrul Choliluddin"
            },
            "tags": [
            ],
            "date_published": "2019-08-12T23:18:45+07:00",
            "date_modified": "2019-08-12T23:18:57+07:00"
        }
    ]
}
