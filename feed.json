{
    "version": "https://jsonfeed.org/version/1",
    "title": "Catatan celoteh @FachrulCH",
    "description": "",
    "home_page_url": "https://fachrul.id",
    "feed_url": "https://fachrul.id/feed.json",
    "user_comment": "",
    "icon": "https://fachrul.id/media/website/fachrulch-icon.png",
    "author": {
        "name": "Fachrul Choliluddin"
    },
    "items": [
        {
            "id": "https://fachrul.id/portofolio-software-quality-assurance/",
            "url": "https://fachrul.id/portofolio-software-quality-assurance/",
            "title": "Portofolio QA: Tampil Memikat Melamar Lowongan Kerja Software Quality Assurance/Engineer",
            "summary": "<p class=\"dropcap\">Salam, Beberapa waktu lalu, saya mendapatkan sebuah pertanyaan melalui Instagram, mengenai hal apa yang perlu disusun ketika melamar kerja untuk posisi QA (quality assurance) atau SDET / Test engineer.</p>\n<p>Tentu saja ini bisa jadi sangat membingungkan terutama bagi pemula dikarenakan minimnya pengalaman, namun tak jarang pula saya termui kandidat senior yang terkesan hanya \"bawa diri\" saja, tanpa mempersiapkan portofolio pada proses melamar pekerjaan baru juga loh!</p>\n<p>Lalu bagaimana cara agar kamu bisa meyakinkan perusahaan bahwa kamu sudah memiliki keahlian yang dibutuhkan dan layak untuk mendapatkan kesempatan bekerja di perusahaan itu?</p>\n",
            "content_html": "<p class=\"dropcap\">Salam, Beberapa waktu lalu, saya mendapatkan sebuah pertanyaan melalui Instagram, mengenai hal apa yang perlu disusun ketika melamar kerja untuk posisi QA (quality assurance) atau SDET / Test engineer.</p>\n<p>Tentu saja ini bisa jadi sangat membingungkan terutama bagi pemula dikarenakan minimnya pengalaman, namun tak jarang pula saya termui kandidat senior yang terkesan hanya \"bawa diri\" saja, tanpa mempersiapkan portofolio pada proses melamar pekerjaan baru juga loh!</p>\n<p>Lalu bagaimana cara agar kamu bisa meyakinkan perusahaan bahwa kamu sudah memiliki keahlian yang dibutuhkan dan layak untuk mendapatkan kesempatan bekerja di perusahaan itu?</p>\n\n<figure ><figure class=\"post__image post__image--center\"><img loading=\"lazy\"  src=\"https://fachrul.id/media/posts/51//instagram-dm-3.png\" sizes=\"100vw\" srcset=\"https://fachrul.id/media/posts/51//responsive/instagram-dm-3-xs.png 300w ,https://fachrul.id/media/posts/51//responsive/instagram-dm-3-sm.png 480w ,https://fachrul.id/media/posts/51//responsive/instagram-dm-3-md.png 768w ,https://fachrul.id/media/posts/51//responsive/instagram-dm-3-lg.png 1024w ,https://fachrul.id/media/posts/51//responsive/instagram-dm-3-xl.png 1360w ,https://fachrul.id/media/posts/51//responsive/instagram-dm-3-2xl.png 1600w\"  alt=\"DM instagram\" width=\"323\" height=\"700\"></figure>\n<figcaption >Pertanyaan Melalui DM instagram</figcaption>\n</figure>\n<p>Jawabannya adalah dengan melampirkan pengalaman/portofolio yang relevan dengan keahlian QA sehingga membuat kamu menjadi jauh lebih menonjol dibandingkan kandidat lain, berikut ini adalah kiat mempersiapkan portofolio bagi seorang <em>Software Quality Assurance</em> menurut pengalaman saya pribadi</p>\n<hr>\n<h1>1. Test Automation Framework</h1>\n<p>Bisa membuat <em>test automation</em> sendiri sudah barang tentu akan membuat kamu lebih berkilau, ini menunjukan kamu memiliki keahlian koding dan cocok menjadi kandidat <em>test engineer</em> yang tentu dibutuhkan di perusahaan. Apalagi jiga kode test automation tersebut kamu buat sendiri menjadi sebuah framework lengkap tapi jangan berkecil hati jika kamu baru berada pada level sebagai penguna framework yang ada saja seperti menggunakan Serenity BDD (java), Robot Framework (python) ataupun Codeception (PHP/Javascript) untuk project automation kamu, itu sudah keren loh!</p>\n<p>Pada <em>Test Automation Framework</em> ini, kamu bisa membuat pengujian <em>backend</em> API, web browser automation, mobile automation atau bahkan gabungan semua automation tadi, pasti keren banget!</p>\n<p>Berangkat dari pengalaman sebagai penguji kandidat SDET (software development engineer in test), saya akan bocorkan beberapa poin penting yang akan dilihat oleh interviewer yaitu:</p>\n<ul>\n<li><strong>Apa yang di-automation?:</strong> Kamu bebas membuat automation web/aplikasi umum/publik, seperti <em>ecommerce</em>, <em>social media</em>, CMS atau web pribadi, tetapi jangan sampai membuat <em>test automation</em> untuk menguji <em>basic functionality</em> saja seperti halaman login ya! Harap membuat <em>test automation</em> untuk <em>scenario</em> yang memiliki dengan beberapa (berbagai) halaman web/mobile.</li>\n<li><strong>Clean code: </strong>Dengan membagikan kode karya kamu, semua orang bisa menilai keahlian kamu dalam menuliskan kode secara konkrit, bisa dilihat dari bagaimana kamu memilih tipe data yang efisien untuk tujuan tertentu dan bagaimana kamu menggunakan strategi reusable code pada struktur kode kamu (<em>design pattern)</em></li>\n<li><strong>Selector yang dipilih:</strong> Interviewer bisa melihat pengalaman kamu menggunakan <em>selenium/appium</em> dari cara kamu menentukan locator/selector pada element, apakah cukup unik dan kokoh, seberapa ahli dalam menggunakan xpath untuk element yang sulit, jangan pula banyak memakai xpath yang kaku ataupun css selector yang cenderung berubah</li>\n<li><strong>Page Object Model:</strong>Â Menandakan kamu paham akan <em>design pattern</em> yang umum dipakai, POM yaitu mengelompokan element pada satu halaman menjadi satu object khusus, eh tapi tidak menutup kemungkinan juga kalau kamu mau menggunakan <em>design pattern</em> lain semacam <em>screenplay pattern</em> loh</li>\n<li><strong>Commit Message:</strong> kita bisa melihat kedewasaan kode dari cara kamu menuliskan git commit message, seberapa deskriptiv, seberapa sering menulis kode, cara kamu membuat branch baru untuk mengerjakan fitur baru (walaupun repo sendiri sih ðŸ˜… )</li>\n</ul>\n<p>Opsi tambahan yang bisa meningkatkan <em>value automation framework</em> kamu, khususnya untuk kandidat <em>senior/leader</em> :</p>\n<ul>\n<li><strong>Parallel support:</strong> test automation kamu bisa berjalan secara paralel dan cepat</li>\n<li><strong>Support multi browser/platform:</strong> pengujian mendukung untuk ios/android/chrome/firefox, <em>portability</em> <em>test runner</em> pada windows/linux/macos</li>\n<li><strong>Custom Gesture:</strong> ada interaction gesture khusus seperti <em>swiping</em> dan <em>pinching</em></li>\n<li><strong>Visual automation:</strong> topik yang sedang hangat, tentu akan membuat kamu bersinar di mata penguji</li>\n<li><strong>Data-driven testing:</strong> jika memungkinkan bisa mengimplementasikan penggunaan <em>spreadsheet files</em> dalam menjalankan test yang repetitif</li>\n<li><strong>Database connection:</strong> proses <em>setup data</em> sebelum test dimulai, ataupun <em>query </em>untuk <em>assertion process</em></li>\n<li><strong>Performance testing:</strong> memiliki keahlian <em>non-funcitonal testing</em> seperti ini umumnya tidaklah wajib, tapi tentu akan membuat kamu menjadi makin cemerlang</li>\n</ul>\n<hr>\n<h1>2. Test Case/Scenario untuk Sebuah Requirement (bisa BDD spec)</h1>\n<p>Banyak perusahaan mempraktikan test automation dengan menggunakan BDD (<em>cucumber</em>), tentu saja kamu bisa membagikan <em>.features files</em> dimana kamu menulis kode <em>gherkin</em> untuk suatu test scenario.</p>\n<p>Mungkin bagi kamu yang baru memulai karir QA, sedikit bingung pada bagian ini, oke saya akan jelaskan sedikit:</p>\n<p class=\"msg msg--info\"><em>Test case</em> atau <em>test scenario</em> adalah rancangan pengujian yang berisi informasi mengenai hal apa saja yang harus dinilai kelayakannya, lalu langkah pengujian, serta ekspektasi dari hasil yang di harapkan</p>\n<p>Misal contoh penulisan gherkin untuk test scenario:</p>\n<div>\n<div><code>Given the admin is logged in</code></div>\n<div><code>When the admin deletes a post on the blog</code></div>\n<div><code>Then the post moved to deleted section</code></div>\n<div><code>And a successful deleted message should display</code></div>\n</div>\n<p>Apa yang dinilai:</p>\n<ul>\n<li><strong>Kejelasan penulisan scenario test:</strong> ada yang bilang <em>.feature files</em> adalah <em>living documentation</em>, dimana kamu harus bisa menuliskan <em>test scenario</em> yang mudah dipahami, bahkan oleh orang awam yang baru pertama kali melihat <em>feature files</em> ini, apakah cukup konteks yang diberikan pada <em>step \"Given\",Â </em>apakah suatu action dituliskan pada <em>step \"When\"</em> dst</li>\n<li><strong>Standar penulisan Gherkin file:</strong> banyak yang salah kaprah dan salah menuliskan step yang harusnya pada step yang Given tapi malah menggunakan When, atau overuse keyword (given-when-then), hindari pula ketidak konsistenan sudut pandang orang pertama atau ketiga,Â </li>\n<li><strong>Declaratif vs Imperatif:</strong> Cenderung subjektif, tapi cara penulisan yang saya sukai adalah menuliskan <em>test scenario</em> secara <em>Declarative</em>, selain lebih singkat dengan begitu pula menjadi mudah dibaca, tinggal bagaimana nanti di implementasikan di step definition untuk menyusun blok kodenya, ada artikel yang menjadi sumber inspirasi saya <a href=\"https://www.spritecloud.com/the-3-most-common-mistakes-writing-gherkin-features/\" target=\"_blank\" rel=\"noopener noreferrer\">disini</a>. tetapi harap diperhatikan risiko masalah yang mungkin timbul, seringkali dengan menggunakan declarative style test step menjadi kurang detail dan informatif terkait apa yang terjadi, seimbangkan saja antara <em>imperative (too much details)</em> dengan <em>declarative</em> <em>(not enough details)</em>Â </li>\n</ul>\n<hr>\n<h1>3. Laporan Bugs</h1>\n<p>Saya teringat kisah teman saya si Anggadirja saat interview di Sleekr HR, tempat saya bekerja dulu, di hari dia interview, sang bos besar tiba-tiba melaporkan ada seseorang bernama Angga (tau dari email yang dipakai) yang melakukan spam signup pada environmen Demo di production, karena dia membuat kurang-lebih sekitar 50 perusahaan baru bertubi-tubi, sontak saja kita konfirmasi ke si Angga saat itu sedang <em>interview</em> dan dia pun mengakui disertai bukti temuan issue apa saja yang telah dia dapatkan dari aktifitas tersebut! sekilas, saya melihat wajah interviewer yang saat itu geleng-geleng pun tersirat senyum kagum ðŸ˜‚</p>\n<p>Memberikan laporan bugs saat interview memang sebuah kesan yang istimewa, sepanjang karir saya meng-interview kandidat QA/SDET hanya dia yang menyetorkan laporan bugs tanpa diminta, menurut saya ini adalah sebuah bukti kalau kandidat bisa bekerja sebagai QA dan memiliki keahlian yang mumpuni (tergantung dari level bugs yang ditemukan).</p>\n<p>Disaat saya melamar kerja pun beberapa kali melampirkan hasil temuan bugs saya, dan selalu saya lihat wajah kaget dan takjub dari para interviewer (mungkin setelah ini banyak yang mengikuti jadi lumrah ahaha ðŸ¤£)</p>\n<p>Tidak mesti kamu harus menemukan bugs baru pada aplikasi yang dibuat oleh perusahaan dimana kamu melamar, bisa juga kamu membagikan temuan bugs dari aplikasi umum, seperti temuan kamu saat menggunakan aplikasi Ojek online, ataupun issue saat kamu menggunakan instagram, yang penting adalah kamu membuat sebuah dokumentasi akan temuan kamu ini</p>\n<p>Apa yang dinilai:</p>\n<ul>\n<li><strong>Penulisan laporan bugs:</strong> Kamu harus memiliki struktur laporan bugs yang baik, setidaknya terdiri dari penjelasan temuan masalah dan langkah reproduce nya</li>\n<li><strong>Level temuan:</strong> Seberapa <em>critical bugs</em> yang kamu temukan, bisa jadi issue UI, functional atau bahkan blocker, semakin parah temuan kamu maka kamu akan terlihat semakin keren (dan mungkin berfikir, ngapain aja QA internal perusahaan itu, sampai kelolosan ahaha #julidModeON )</li>\n<li><strong>Saran:</strong> Sertakan ide perbaikan yang kamu harapkan, seberapa masuk akal expected result dari bugs tersebut, atau bahkan jika kamu tidak menemukan bugs/issue kamu pun bisa saja menuliskan saran perbaikan dari suatu proses</li>\n<li><strong>Analisa:</strong> Sangat keren sekali apabila kamu bisa membuat analisa risiko dari temuan kamu tersebut, kamu bisa membahas risiko yang mungkin diderita pengguna dengan adanya bugs tersebut, yang sering kali luput oleh tester adalah menguji accesibility pada aplikasi, seringkali aplikasi menjadi kurang friendly untuk pengguna lanjut usia yang biasanya menggunakan font size besar, dan aplikasi menjadi tidak tersusun baik, bahkan bisa jadi tombol submit menjadi tertimbun element yang overlap</li>\n</ul>\n<p>Berikut ini contoh laporan bugs:</p>\n<table style=\"border-collapse: collapse; width: 100%;\" border=\"1\">\n<tbody>\n<tr>\n<td style=\"width: 25.535%;\">Screenshot</td>\n<td style=\"width: 74.465%;\">\n<figure ><figure class=\"post__image post__image--center\"><img loading=\"lazy\"  src=\"https://fachrul.id/media/posts/51/bug-report-todolist-counter.jpg\" sizes=\"100vw\" srcset=\"https://fachrul.id/media/posts/51/responsive/bug-report-todolist-counter-xs.jpg 300w ,https://fachrul.id/media/posts/51/responsive/bug-report-todolist-counter-sm.jpg 480w ,https://fachrul.id/media/posts/51/responsive/bug-report-todolist-counter-md.jpg 768w ,https://fachrul.id/media/posts/51/responsive/bug-report-todolist-counter-lg.jpg 1024w ,https://fachrul.id/media/posts/51/responsive/bug-report-todolist-counter-xl.jpg 1360w ,https://fachrul.id/media/posts/51/responsive/bug-report-todolist-counter-2xl.jpg 1600w\"  alt=\"temuan bugs pada todo list\" width=\"1024\" height=\"776\"></figure>\n<figcaption >Masalah pada counter todo list</figcaption>\n</figure>\n</td>\n</tr>\n<tr>\n<td style=\"width: 25.535%;\">Judul</td>\n<td style=\"width: 74.465%;\">Invalid counter for Todo list</td>\n</tr>\n<tr>\n<td style=\"width: 25.535%;\">Penjelasan Masalah</td>\n<td style=\"width: 74.465%;\">Todo counter menunjukan angka yang tidak benar, dimana angka yang ditunjukan selalu selisih -1 dari yang seharusnya ditunjukan</td>\n</tr>\n<tr>\n<td style=\"width: 25.535%;\">Langkah Reproduce</td>\n<td style=\"width: 74.465%;\">Â Buat satu todo list lalu simpan, perhatikan nilai pada counter menunjukan 0 bukan 1</td>\n</tr>\n<tr>\n<td style=\"width: 25.535%;\">Expected Behaviour</td>\n<td style=\"width: 74.465%;\">Conter menunjukan jumlah todo list yang belum selesai, nilai akan berkurang apabila user menyelesaikan pekerjaan dan nilai akan bertambah apabila ada tambahan pekerjaan</td>\n</tr>\n</tbody>\n</table>\n<hr>\n<h1>4. Kontribusi</h1>\n<p>Kontribusi seorang QA sering kali tidak terdokumentasikan, baik itu kontribusi teknis ataupun non teknis, mungkin karena kita menganggap itu terlalu Â biasa saja atau malas menuliskannya.</p>\n<p>Saya akan membagikan contoh kasus non teknis berdasarkan pengalaman saya, jadi pada tahun 2020 dulu di Golife (waktu masih ada), dimana saya melakukan perubahan bagaimana QA status update menjadi lebih menarik dan interaktif.</p>\n<figure class=\"post__image post__image--center\"><img loading=\"lazy\"  src=\"https://fachrul.id/media/posts/51/status-update-golife.jpg\" sizes=\"100vw\" srcset=\"https://fachrul.id/media/posts/51/responsive/status-update-golife-xs.jpg 300w ,https://fachrul.id/media/posts/51/responsive/status-update-golife-sm.jpg 480w ,https://fachrul.id/media/posts/51/responsive/status-update-golife-md.jpg 768w ,https://fachrul.id/media/posts/51/responsive/status-update-golife-lg.jpg 1024w ,https://fachrul.id/media/posts/51/responsive/status-update-golife-xl.jpg 1360w ,https://fachrul.id/media/posts/51/responsive/status-update-golife-2xl.jpg 1600w\"  alt=\"story telling pada status update\" width=\"521\" height=\"569\"></figure>\n<p>Pada awalnya QA update pada periode testing berupa informasi grafik test run progress dari testrail, hanya berupa angka persentase dari jumlah total test cases berbanding dengan jumlah test case yang sudah diuji, lalu saya ubah ini menjadi status update yang berupa story telling dan ini berdampak positif, dari engagement tim yang tinggi, dengan begitu kita bisa mengetahui bahwa tim membaca dan memperhatikan progress testing yang ada.</p>\n<p>Untuk contoh kontribusi teknis, saya akan membagikan kisah saya membuat semacam \"Cheat engine\" agar proses testing manual menjadi jauh lebih cepat 95% hingga mendapatkan spotlight untuk showcase di Gojek Townhall November 2021</p>\n<figure ><figure class=\"post__image post__image--center\"><img loading=\"lazy\"  src=\"https://fachrul.id/media/posts/51/fachrul-dan-pertamax.jpg\" sizes=\"100vw\" srcset=\"https://fachrul.id/media/posts/51/responsive/fachrul-dan-pertamax-xs.jpg 300w ,https://fachrul.id/media/posts/51/responsive/fachrul-dan-pertamax-sm.jpg 480w ,https://fachrul.id/media/posts/51/responsive/fachrul-dan-pertamax-md.jpg 768w ,https://fachrul.id/media/posts/51/responsive/fachrul-dan-pertamax-lg.jpg 1024w ,https://fachrul.id/media/posts/51/responsive/fachrul-dan-pertamax-xl.jpg 1360w ,https://fachrul.id/media/posts/51/responsive/fachrul-dan-pertamax-2xl.jpg 1600w\"  alt=\"\" width=\"1080\" height=\"675\"></figure>\n<figcaption >Berada pada Townhall bersama CEO</figcaption>\n</figure>\n<p>Atau pun bisa kita tuliskan bagaimana test automation yang sudah terimplementasi CI/CD bisa membantu proses relese lebih cepat dengan menjaga kualitas aplikasi tetap tinggi disetiap build barunya, cerita bagaimana kami bisa mengurangi waktu full cycle testing, awalnya 3 hari menjadi 1,5 hari kerja.</p>\n<hr>\n<h1>5. Pitch deck</h1>\n<p>Saya masih ingat ketika saya membuat <em>pitch deck</em> saat apply sebagai QA Leader di GoMart, saat itu head of engineering langsung kepincut dengan apa yang saya lakukan, karena saya sungguh-sungguh membuat slide berisi pengalaman, cara kerja saya, visi saya tentang <em>Quality Assurance</em>, serta misi saya dalam membangun tim, tujuan pitch deck ini adalah memudahkan saya \"menjual (keahlian) diri\" dalam proses interview, saya lebih nyaman menggunakan presentasi daripada hanya bercerita secara verbal, mungkin ini ide saya mengakali interviewer saat itu yang orang India, jadi mengurangi grogi saya karena menggunakan bahasa Inggris, jadi menghindari saya melupakan topik yang harus saya bahas karena sudah direncanakan di slides.</p>\n<p>Karena intinya interview adalah seperti mencari jodoh, bisa jadi yang dicari perusahaan sejalan dengan visi &amp; misi pribadi kita.<br><br></p>\n<figure ><figure class=\"post__image post__image--center\"><img loading=\"lazy\"  src=\"https://fachrul.id/media/posts/51/pitchdeck-fachrulch-2020-small.jpg\" sizes=\"100vw\" srcset=\"https://fachrul.id/media/posts/51/responsive/pitchdeck-fachrulch-2020-small-xs.jpg 300w ,https://fachrul.id/media/posts/51/responsive/pitchdeck-fachrulch-2020-small-sm.jpg 480w ,https://fachrul.id/media/posts/51/responsive/pitchdeck-fachrulch-2020-small-md.jpg 768w ,https://fachrul.id/media/posts/51/responsive/pitchdeck-fachrulch-2020-small-lg.jpg 1024w ,https://fachrul.id/media/posts/51/responsive/pitchdeck-fachrulch-2020-small-xl.jpg 1360w ,https://fachrul.id/media/posts/51/responsive/pitchdeck-fachrulch-2020-small-2xl.jpg 1600w\"  alt=\"\" width=\"1280\" height=\"999\"></figure>\n<figcaption >Pitchdeck profil saya pada tahun 2020</figcaption>\n</figure>\n<hr>\n<h1>Bagaimana cara menyajikan portofolio?</h1>\n<h2>Google Slides/Documents</h2>\n<p>Di poin terakhir saya sudah singgung sedikit mengenai slides <em>(pitch deck)</em> saya, saya akan membagikan link google slides kepada interviewer sebelum proses interview (bisa sehari sebelum) agar mereka bisa melihat dahulu lalu didiskusikan/ditanyakan saat interview, kenapa menggunakan <em>google slides</em>? Karena itu memungkinkan saya untuk bisa memperbarui konten, hal yang tidak bisa terjadi jika saya mengirimkan lampiran file .ppt, tentu jika ada perubahan harus mengirimkan file susulan.</p>\n<p>Bisa juga ketika kita ingin menjabarkan informasi lebih banyak untuk membuatnya berupa google documents (word) berformat seperti esai, cocok untuk konten bugs reporting yang kita temukan, ataupun cerita soal analisa bugs seperti pembahasan sebelumnya</p>\n<figure ><figure class=\"post__image post__image--center\"><img loading=\"lazy\"  src=\"https://fachrul.id/media/posts/51/github-fachrulch.jpg\" sizes=\"100vw\" srcset=\"https://fachrul.id/media/posts/51/responsive/github-fachrulch-xs.jpg 300w ,https://fachrul.id/media/posts/51/responsive/github-fachrulch-sm.jpg 480w ,https://fachrul.id/media/posts/51/responsive/github-fachrulch-md.jpg 768w ,https://fachrul.id/media/posts/51/responsive/github-fachrulch-lg.jpg 1024w ,https://fachrul.id/media/posts/51/responsive/github-fachrulch-xl.jpg 1360w ,https://fachrul.id/media/posts/51/responsive/github-fachrulch-2xl.jpg 1600w\"  alt=\"Github FachrulCH\" width=\"1024\" height=\"687\"></figure>\n<figcaption >Github FachrulCH</figcaption>\n</figure>\n<h2>Github</h2>\n<p>Kode <em>automation</em> yang sudah kita buat alangkah baiknya kita simpan di akun github, walaupun bisa juga gitlab/bitbucket tapi agak kurang populer.</p>\n<p>Namun perlu diingat untuk tidak menyimpan akun kredensial di repositori ya, github ini merupakan etalase untuk pamer keahlian koding kita, kelebihan lain bagi seorang reviewer di perusahaan dimana kita melamar kerja untuk bisa mengintip cara kita melakukan git commit message, kadang kedewasaan koding bisa tercermin dari cara kita menuliskan commit message ðŸ˜›</p>\n<h2><br>Website</h2>\n<p>Memiliki <em>website pribadi</em>Â ibarat sebuah KTP, karena <em>website</em> adalah <em>online presence</em> kita, sebuah tempat dimana kita menunjukan pribadi seperti apakah kita, tempat kita bisa memamerkan pengalaman kita, opini serta keunikan kita.</p>\n<p>Tentu saja, ini adalah sebuah keputusan yang sangat baik. Saya berasumsi ini akan terlihat lebih profesional, bahkan saya rasa faktor ini menentukan saya diterima kerja sebagai Software Engineer di Gojek tempo hari, karena aspirasi saya terhadap QA tertuang di website ini <a href=\"https://fachrul.id/\">fachrul.id</a></p>\n<p>Saya rasa ini bukanlah hal sulit kan? Web saya ini pun saya hosting di github hanya dengan static html tanpa koneksi database, bermodal sebuah domain saja, justru yang sulit adalah mengisi konten nya, ahaha</p>\n<hr>\n<p>Demikian kiat singkat (walau ternyata panjang) dari pengalaman saya dan teman-teman saya, semoga bisa bermanfaat dan membantu kamu mendapatkan pekerjaan impianmu, jangan lupa sapa saya di <a href=\"https://www.instagram.com/fachrulch\">Instagram</a> ataupun <a href=\"https://www.youtube.com/c/NgeTestBarengFachrul\">Youtube Ngetest bareng Fachrul</a></p>\n<p><code></code></p>",
            "image": "https://fachrul.id/media/posts/51/maranda-vandergriff-7aakZdIl4vg-unsplash.jpg",
            "author": {
                "name": "Fachrul Choliluddin"
            },
            "tags": [
                   "tutorials"
            ],
            "date_published": "2022-07-03T13:16:04+07:00",
            "date_modified": "2022-07-03T13:19:03+07:00"
        },
        {
            "id": "https://fachrul.id/oh-ternyata-saya-condong-ke-auditory-learning/",
            "url": "https://fachrul.id/oh-ternyata-saya-condong-ke-auditory-learning/",
            "title": "Oh Ternyata Saya Condong ke Auditory Learning",
            "summary": "Foto olehÂ Armin RimoldiÂ dariÂ Pexels Awal mulanya saya percaya saya adalah seorang tipe visual learning, dimana saya akan cepat paham ketika memproses informasi secara visual melalui gambar, charts, diagram, peta, bahkan saya rutin menuangkan ide dalam bentuk mind mapping, namun akhir-akhir ini saya menyadari adanya proses pergeseran&hellip;",
            "content_html": "<figure class=\"post__image post__image--left\" ><img loading=\"lazy\" src=\"https://fachrul.id/media/posts/50/pexels-armin-rimoldi-5553630.jpg\" sizes=\"100vw\" srcset=\"https://fachrul.id/media/posts/50/responsive/pexels-armin-rimoldi-5553630-xs.jpg 300w ,https://fachrul.id/media/posts/50/responsive/pexels-armin-rimoldi-5553630-sm.jpg 480w ,https://fachrul.id/media/posts/50/responsive/pexels-armin-rimoldi-5553630-md.jpg 768w ,https://fachrul.id/media/posts/50/responsive/pexels-armin-rimoldi-5553630-lg.jpg 1024w ,https://fachrul.id/media/posts/50/responsive/pexels-armin-rimoldi-5553630-xl.jpg 1360w ,https://fachrul.id/media/posts/50/responsive/pexels-armin-rimoldi-5553630-2xl.jpg 1600w\"  alt=\"Foto oleh Armin Rimoldi dari Pexels\" width=\"300\">\n<figcaption >Foto olehÂ <strong><a href=\"https://www.pexels.com/id-id/@armin-rimoldi?utm_content=attributionCopyText&amp;utm_medium=referral&amp;utm_source=pexels\">Armin Rimoldi</a></strong>Â dariÂ <strong><a href=\"https://www.pexels.com/id-id/foto/pria-pena-meja-musik-5553630/?utm_content=attributionCopyText&amp;utm_medium=referral&amp;utm_source=pexels\">Pexels</a></strong></figcaption>\n</figure>\nAwal mulanya saya percaya saya adalah seorang tipe <em>visual learning</em>, dimana saya akan cepat paham ketika memproses informasi secara visual melalui gambar, charts, diagram, peta, bahkan saya rutin menuangkan ide dalam bentuk <em>mind mapping</em>, namun akhir-akhir ini saya menyadari adanya proses pergeseran tipe membelajar menjadi <em>auditory learning</em>, dimana saya lebih senang dan cepat pahamÂ ketikaÂ mencerna informasi melalui media audio/suara.<br><hr>\n<p><br>Pembelajar auditory memiliki kemampuan untukÂ menyimak informasi dengan mudahÂ dalam bentuk suara, kita mampu memahami emosi melalui intonasi, serta senang dengan hiruk-pikuk suara.Â Kurang lebihÂ adaÂ beberapa tanda dari <em>audio learning</em>Â menurut saya:</p>\n<ul>\n<li>Mudah ingat pecakapan yang terjadi tempo dulu, masih ingat bit/jokes standup yang sudah lama ditonton</li>\n<li>Lebih paham dengan membaca tulisan dengan lantang</li>\n<li>Ketika di kelas, walaupun jarang mencatat tetapi saat ulangan masih bisa menjawab karena menyimak apa yang disampaikan guru</li>\n</ul>\n<p>Saya baru paham akhir-akhir ini bahwa saya adalah seorang <em>auditory learner</em>, setelah merenungi ciri-ciri <em>auditory learner</em>Â lebih cocok dengan saya seperti point-point di atas, walaupun saya tidak setuju dengan pengkotakan label ini (selain auditory learning, ada pula visual learning, dan kinetik learning) karena setiap orang bisa jadi memiliki irisan antar tipe (hybrid).</p>\n<p>Saya cenderung lebih paham ketika belajar diÂ suasana ramai, kalaupun di rumah, saya akan menyalakan TV sebagai background/white noise sembari menemani saya belajar karena ini akan membantu saya menjaga fokus dengan baik ketimbang sunyi senyap.</p>\n<p>Manfaat lain dari mengetahui tipe mana yang paling cocok dengan kita adalah potensi untuk memaksimalkan gaya belajar kita, apakah audio, visual ataupun kenetik, Mungkin saya bisa berbagi tips yang saya gunakan selama ini untuk belajar, diantaranya:</p>\n<h3>Bacalah dengan lantang</h3>\n<p>Informasi yang ingin dipahami, karena kita perlu melibatkan indra pendengaran agar bisa lebih meresapi maknanya.</p>\n<p>Saat menghapal nomer telepon ataupun OTP code, saya akan membaca dengan lantang dan mengingat ucapan saya sendiri ahaha.</p>\n<h3>White noise</h3>\n<p>Saya termasuk orang yang sulit fokus ketika bekerja/belajar jika sambil mendengarkan lagu atau percakapan/podcast, saya lebih memilih memutar suara alam, bunyi jam, ataupun menyalakan tivi dengan volume rendah, tapi tak pula menyukai suasana yang sunyi senyap macam menggunakan headset active noise cancelling. Saya akan membuka spotify dan mencari \"natural sound\", suara yang saya suka adalah suara hujan dan angin.</p>\n<h3>Bercakap</h3>\n<p>Yup, sering kali saya menemukan \"Aha! momen\", ide brilian ketika sedang ngobrol ataupun saat mengajari orang lain, entah kenapa saat mengemukakan mendapat itulah saya bisa mendapatkan ide-ide segar dalam fikiran, saya menduga penyebabnya karena aktivitas berbicara inilah, besar kemungkinan karena dengan berbicara kita pun melibatkan sensor pendengaran kita.</p>\n<hr>\n<h2>Belajar melalui suara</h2>\n<p>Sejak 2017 saya aktif mendengarkan podcast sembari berkendara menuju kantor dan mendengar audiobook saat perjalanan pulangnya, perjalanan Bekasi Barat ke Sudirman menghabiskan lebih dari 2 jam perjalanan pulang-pergi, sehingga dengan mendengarkan <em>podcast, audiobook</em> ataupun ceramah sangat cocok untuk menemani dan menghibur kita dikala macet tak terhindarkan.</p>\n<p>Ada satu kekuatan utama dari belajar melalui suara ini yang menurut saya tidak bisa ditandingi oleh medium visual, yaitu kita tidak dituntut penuh perhatianÂ dalam menyimak seperti halnya belajar dari membaca ataupun menonton video pada youtube, yang umumnya akan memaksa kita secara aktif memperhatikan apa yang disampaikan melalui visualnya.</p>\n<p>Dengan audio, kita bisa sembari mengerjakan hal lain sekaligus, misalkan kita mendengarkan podcast secara pasif, sembari mencuci piring, berolahraga, ataupun mengemudi (dengan tetap aktif waspada pada berkendara ya, bisa menggunakan hanya satu sisi headset saja, agar suara klakson masi terdengar)</p>\n<h3>Podcast</h3>\n<p>Saya senang sekali medium podcast kini mulai marak, ada banyak siniar yang bisa kita pilih di berbagai platform aplikasi podcast, seperti Spotify, google podcast ataupun aplikasi karya anak bangsa yaitu Noise.</p>\n<p>Ada banyak sekali pilihan podcast yang bisa didengarkan dengan berbagai genre, ada podcast komedi, ada talkshow, ada drama suara macam di radio dulu<br>Kita hanya perlu memilih dan berlangganan podcast mana yang berkualitas dan sesuai dengan kebutuhan kita (bermanfaat/menghibur)</p>\n<h3>Audiobook</h3>\n<p>Audible adalah platform audiobook dari amazon untuk buku-buku berbahasa Inggris, sangat sulit ditemui platform yang menyediakan konten audiobook berbahasa indonesia, bahkan saya menggunakan audio sintetis yang ada pada google book, tapi sayangnya hanya support bahasa inggris disini, jadi aneh jika harus membaca buku berbahasa Indonesia, suara mesin TTS ini persis seperti bule membaca text Indo, akhirnya saya membeli aplikasi Moon+ Reader Pro yang support text to speech menggunakan bahasa Indonesia, seperti ini:</p>\n<p>Â <div class=\"post__iframe\"><iframe loading=\"lazy\" width=\"640\" height=\"480\" src=\"https://drive.google.com/file/d/1G5RHvfaSxxyl_WAtDv8mvRzOtkeAZ7iG/preview\" allow=\"autoplay\"></iframe></div>\n<h3>Yang lebih dari sekedar <em>podcast/audiobook</em></h3>\n<p>Lalu saya berkenalan dengan Inspigo, sebuah platform audio content yang penuh inspirasi, saya bisa belajar berbagai macam topik dari narasumber berkualitas, dibawakan dengan luar biasa oleh host nya yang memiliki gaya bicara luwes dan kualitas pertanyaan yang bagus sehingga bisa \"memeras habis\" ilmu dari narasumber.</p>\n<figure class=\"post__image post__image--center\" ><img loading=\"lazy\" src=\"https://fachrul.id/media/posts/50/inspigo.gif\" alt=\"tampilan aplikasi inspigo terbaru\" width=\"399\" height=\"839\">\n<figcaption >Tampilan aplikasi Inspigo yang manis</figcaption>\n</figure>\n<p>Ada beberapa point utama kenapa Inspigo lebih keren dari konten podcast:</p>\n<ul>\n<li><strong>Narasumber</strong> yang terpilih dan ahli di bidangnya</li>\n<li><strong>Kualitas</strong> Audio sangat <strong>istimewa</strong>. Suara narasumber dan host terdengar jelas</li>\n<li>Host inspigo yang sangat ahli dalam wawancara, kualitas pertanyaan yang diajukan, serta <strong>kepiawaian host</strong> dalam membuat flow yang baik, sehingga kita akan terus aktif menyimak alur diskusi</li>\n<li>Potongan episode yang singkat memberikan <strong>fleksibilitas</strong> dalam mendengarkan, saya seringkali mencari episode dibawah 10 menit, untuk didengarkan sembari perjalanan jalan kaki dari parkiran, menunggu lift sampai tiba di meja kerja</li>\n<li><strong>Keberkahan waktu</strong>, dengan mendengar konten inspiratif dari inspigo, otomatis kita akan mendengarkan hal yang bermanfaat ketimbang mendengar lagu yang gitu-gitu aja</li>\n</ul>\n<h2>Freemium</h2>\n<p>Inspigo bisa di download secara gratis di appstore ataupun playstore dan kamu juga bisa mencoba langsung berbagai konten bermutu disana, namun untuk menikmati keseluruhan episode biasanya hanya bisa diakses oleh member yang sudah berlangganan, sangat murah kok biayanya, kurang lebih Rp1.000 per hari, perbedaan selengkapnya seperti ini:</p>\n<table class=\" align-center\"><caption>Perbedaan tipe member Inspigo</caption>\n<tbody>\n<tr>\n<td><strong>Berlangganan</strong></td>\n<td><strong>Gratis</strong></td>\n</tr>\n<tr>\n<td class=\"align-left\">Bisa akses konten penuh Inspirasi</td>\n<td class=\"align-left\">Bisa akses konten penuh Inspirasi</td>\n</tr>\n<tr>\n<td class=\"align-left\">Akses penuh ke semua episode disemua konten</td>\n<td class=\"align-left\">AksesÂ beberapa episode disetiap konten</td>\n</tr>\n<tr>\n<td class=\"align-left\">Bisa download dan didengar offline</td>\n<td class=\"align-left\">Tidak bisa download</td>\n</tr>\n<tr>\n<td class=\"align-left\">Bisa pilih size audio, pilih hemat quota atau high resulution</td>\n<td class=\"align-left\">Default audio quality</td>\n</tr>\n<tr>\n<td class=\"align-left\">\n<p>Rp85.000/3 bulan atau kalau dihitungÂ kurang dari 1.000/hari</p>\n<p>Atau ikutin berbagai misi untuk dapet bonus premium</p>\n</td>\n<td class=\"align-left\">\n<p>Ga pake bayar, tapi mending subscribe deh semurah itu kok</p>\n</td>\n</tr>\n</tbody>\n</table>\n<p>Cara berlanggannya kita bisa beli kode voucher berlangganan di Tokopedia ataupun shopee, seperti ini cara membeli kode voucher via tokopedia:</p>\n<figure class=\"post__image post__image--center\" ><img loading=\"lazy\" src=\"https://fachrul.id/media/posts/50/topup-inspigo-toped.gif\" alt=\"topup inspigo via tokopedia\" width=\"400\" height=\"842\">\n<figcaption >topup inspigo via tokopedia</figcaption>\n</figure>\n<p>Setelah pembayaran komplit, kita harusnya akan mendapatkan kode voucher unik dari tokopedia, lalu cara redeem vouchernya di aplikasi Inspigo seperti ini:</p>\n<figure class=\"post__image post__image--center\" ><img loading=\"lazy\" src=\"https://fachrul.id/media/posts/50/redeem-voucher-inspigo.gif\" alt=\"cara redeem voucher inspigo\" width=\"398\" height=\"836\">\n<figcaption >cara redeem voucher inspigo</figcaption>\n</figure>\n<p>bahkan mau gratisan jadi premium member juga bisa loh, ada challenge yang bisa kita ikut partisipasi untuk mendapatkan imbalan akses premium, atau share id referal ke orang lain, seperti ini:</p>\n<figure class=\"post__image post__image\" ><img loading=\"lazy\" src=\"https://fachrul.id/media/posts/50/Screen-Shot-2021-12-31-at-09.08.18.png\" sizes=\"100vw\" srcset=\"https://fachrul.id/media/posts/50/responsive/Screen-Shot-2021-12-31-at-09.08.18-xs.png 300w ,https://fachrul.id/media/posts/50/responsive/Screen-Shot-2021-12-31-at-09.08.18-sm.png 480w ,https://fachrul.id/media/posts/50/responsive/Screen-Shot-2021-12-31-at-09.08.18-md.png 768w ,https://fachrul.id/media/posts/50/responsive/Screen-Shot-2021-12-31-at-09.08.18-lg.png 1024w ,https://fachrul.id/media/posts/50/responsive/Screen-Shot-2021-12-31-at-09.08.18-xl.png 1360w ,https://fachrul.id/media/posts/50/responsive/Screen-Shot-2021-12-31-at-09.08.18-2xl.png 1600w\"  alt=\"kode referensi inspigo \" width=\"1038\" height=\"1952\">\n<figcaption >kode referensi inspigoÂ </figcaption>\n</figure>\n<p><br>Jadi, jika kalian belum mendaftar Inspigo bisa menggunakan <strong>id referal Inspigo: hnd4y</strong> saya ini ya, saya sangat berterima kasih karena dengan anda mendaftar dengan ID referal ini, saya akan mendapatkan 2 minggu extra langganan premium member.</p>\n<hr>\n<h2>Interaksi</h2>\n<p>Saya mengklaim sendiri termasuk ke dalam pendengar setia inspigo sedari awal, sekitar pertengahan 2018 saya sudah berlangganan dan senang sekali jika melihat UI/UX aplikasi inspigo sekarang sangat manis dan enak digunakan.</p>\n<p>Ada beberapa interaksi dengan tim Inspigo via Instagram, dan mereka sangat mendengar aspirasi dari pengguna loh,</p>\n<p>Beberapa feedback dari 2018 dulu:</p>\n<p>Â </p>\n<figure class=\"post__image post__image--center\"><img loading=\"lazy\"  src=\"https://fachrul.id/media/posts/50/Screen-Shot-2021-12-31-at-08.55.09.png\" sizes=\"100vw\" srcset=\"https://fachrul.id/media/posts/50/responsive/Screen-Shot-2021-12-31-at-08.55.09-xs.png 300w ,https://fachrul.id/media/posts/50/responsive/Screen-Shot-2021-12-31-at-08.55.09-sm.png 480w ,https://fachrul.id/media/posts/50/responsive/Screen-Shot-2021-12-31-at-08.55.09-md.png 768w ,https://fachrul.id/media/posts/50/responsive/Screen-Shot-2021-12-31-at-08.55.09-lg.png 1024w ,https://fachrul.id/media/posts/50/responsive/Screen-Shot-2021-12-31-at-08.55.09-xl.png 1360w ,https://fachrul.id/media/posts/50/responsive/Screen-Shot-2021-12-31-at-08.55.09-2xl.png 1600w\"  alt=\"\" width=\"290\" height=\"545\"></figure><br><figure class=\"post__image post__image--center\"><img loading=\"lazy\"  src=\"https://fachrul.id/media/posts/50/Screen-Shot-2021-12-31-at-08.54.37.png\" sizes=\"100vw\" srcset=\"https://fachrul.id/media/posts/50/responsive/Screen-Shot-2021-12-31-at-08.54.37-xs.png 300w ,https://fachrul.id/media/posts/50/responsive/Screen-Shot-2021-12-31-at-08.54.37-sm.png 480w ,https://fachrul.id/media/posts/50/responsive/Screen-Shot-2021-12-31-at-08.54.37-md.png 768w ,https://fachrul.id/media/posts/50/responsive/Screen-Shot-2021-12-31-at-08.54.37-lg.png 1024w ,https://fachrul.id/media/posts/50/responsive/Screen-Shot-2021-12-31-at-08.54.37-xl.png 1360w ,https://fachrul.id/media/posts/50/responsive/Screen-Shot-2021-12-31-at-08.54.37-2xl.png 1600w\"  alt=\"\" width=\"287\" height=\"540\"></figure>\n<p>Â </p>",
            "image": "https://fachrul.id/media/posts/50/pexels-andrea-piacquadio-3965238-1.jpg",
            "author": {
                "name": "Fachrul Choliluddin"
            },
            "tags": [
                   "ulasan"
            ],
            "date_published": "2021-12-31T05:57:57+07:00",
            "date_modified": "2021-12-31T09:55:30+07:00"
        },
        {
            "id": "https://fachrul.id/membentuk-pola-pikir-entrepreneurship-dalam-bekerja-sebagai-karyawan/",
            "url": "https://fachrul.id/membentuk-pola-pikir-entrepreneurship-dalam-bekerja-sebagai-karyawan/",
            "title": "Membentuk Pola Pikir Entrepreneurship dalam Bekerja Sebagai Karyawan",
            "summary": "\"Your job isÂ NOT your carrer\" adalah sebuah kalimat intisari dari diskusi perpisahan dengan manager saya di akhir bulan Oktober lalu, dan kalimat ini masih saja bergema di fikiran saya hingga sekarang dan memicu beberapa perenungan yang akan saya tuliskan disini untuk melepas unek-unek mengganjal ini.",
            "content_html": "<p><em><strong>\"Your job isÂ NOT your carrer\" </strong></em>adalah sebuah kalimat intisari dari diskusi perpisahan dengan manager saya di akhir bulan Oktober lalu, dan kalimat ini masih saja bergema di fikiran saya hingga sekarang dan memicu beberapa perenungan yang akan saya tuliskan disini untuk melepas unek-unek mengganjal ini.</p>\n<figure class=\"post__image post__image--center\" ><img loading=\"lazy\" src=\"https://fachrul.id/media/posts/48/pexels-rodnae-productions-7413915.jpg\" sizes=\"100vw\" srcset=\"https://fachrul.id/media/posts/48/responsive/pexels-rodnae-productions-7413915-xs.jpg 300w ,https://fachrul.id/media/posts/48/responsive/pexels-rodnae-productions-7413915-sm.jpg 480w ,https://fachrul.id/media/posts/48/responsive/pexels-rodnae-productions-7413915-md.jpg 768w ,https://fachrul.id/media/posts/48/responsive/pexels-rodnae-productions-7413915-lg.jpg 1024w ,https://fachrul.id/media/posts/48/responsive/pexels-rodnae-productions-7413915-xl.jpg 1360w ,https://fachrul.id/media/posts/48/responsive/pexels-rodnae-productions-7413915-2xl.jpg 1600w\"  alt=\"Foto oleh RODNAE Productions dari Pexels\" width=\"640\" height=\"426\">\n<figcaption >Foto olehÂ <strong><a href=\"https://www.pexels.com/id-id/@rodnae-prod?utm_content=attributionCopyText&amp;utm_medium=referral&amp;utm_source=pexels\">RODNAE Productions</a></strong>Â dariÂ <strong><a href=\"https://www.pexels.com/id-id/foto/pemasaran-exit-teknologi-bisnis-7413915/?utm_content=attributionCopyText&amp;utm_medium=referral&amp;utm_source=pexels\">Pexels</a></strong></figcaption>\n</figure>\n<p>Â </p>\n<hr>\n<p><br>Sabagai pendahuluan, awal mulanya saya mengajukan sebuah pertanyaan kepada dia, <em>\"Why resign now, in time where the company is about to IPO?\",</em> yup mungkin terdengar materialistis, dan saya menduga jawaban dia akan mengarah ke tawaran perusahaan lain jauh lebih seksi, seperti kenaikan gaji yang signifikan ataupun tawaran RSU yang lebih bernilai. Tapi ternyata tidak!</p>\n<p>Dia menjawab bahwa perusahaan nantiÂ akan menarik, karena disana akan mengakselerasi pencapaian goal karir dia secara profesional, ia menegaskan bukan berarti perusahaan sekarang ini jelek, tetapi dia menemukan kapal yang lebih cepat dalam melaju. <em>\"Your job is not your carrier\"</em>Â ujarnya, selanjutnya dibungkus dengan jawaban klise dan politis, nah disini saya tertarik dengan argumen dia, sedikit takjub dengan idealisme yang dia pegang, atau mungkin sugar coating yang menarik jika ujung ujung nya hanya faktor finansial saja ahaha, tapi mari kita kembalikan fokus pada kutipan tadi ya.</p>\n<hr>\n<p><br>Kemudian saya teringat dengan pesan dari sebuah buku yang saya baca tempo lalu, mungkin pada saat itu saya mengingatnya hanya sebuah pengetahuan saja, namun kini mulai terlihat keterkaitannya, karena sangat relevan dengan apa yang dimaksud, bahwa:</p>\n<blockquote>\n<p>kita seharusnyaÂ <strong>tidak</strong>Â berfikir bahwa kita bekerja ke perusahaanÂ <strong>hanya</strong>Â sebagai karyawan yang menjalankan tugas dan kewajiban dan mendapatkan ganjaran gaji bulanan saja, melainkan kita harus memilikiÂ <strong>mental entrepreneurship</strong>, dimana kita memperlakukan karir kita sebagai sebuah bisnis, dan kita harus memikirkan produk/jasa, marketing, bahkan finance-nya.</p>\n</blockquote>\n<p>Jangan mau dibohongi oleh status \"pekerja swasta\" yang tugasnya hanya mengerjakan tugas yang diberikan, dan mendapatkan gaji rutin bulanan. <span style=\"text-decoration: underline;\">Mulai sekarang mulailah berfikir bahwa <strong>karir kamu sebagai bisnis yang kita rinitis</strong>, sebuah perusahaan dan kita sebagai CEO nya,</span> sehingga setiap keputusan yang kamu buat bisa berdampak pada kemajuan perusahaan kamu ini,Â dan anggaplah client perusahaan ini adalah perusahaan dimanaÂ kamu bekerja saat ini, ataupun skala lebih intinya, customerÂ kamu adalah rekan kerja kamu, mereka yang mendapatkan <em>value</em>Â yang kamu berikan.</p>\n<h2>Bagaimana cara mengembangkan bisnis perushaan?</h2>\n<p>Mari kita lanjutkan lebih jauh setelah kita paham bahwa karir kitaÂ adalah sebuah bisnis dan bagaimana membuat perusahaan ini menjadi sukses makmur.</p>\n<p>Pertama, layaknya sebuah perusahaan, ia harus memiliki suatu produk atau jasa yang ditawarkan kepada client, karena hanya dengan hal ini perusahaan bisa menghasilkan uang. Pikirkan apa yang perusahaan karir kamu ini bisa jual? apakahÂ suatu barang atau jasa? ambilah contoh karir saya sebagai software developer, produk perusahaan \"karir\" sayaÂ adalah \"paket membuat website\", atauÂ secara sederhananya yang bisa saya jual adalah jasa untuk membuat sebuah gagasan menjadi produk digital berupa website.</p>\n<p>Sebuah bisnis tentu akan terus menerus mengembangkan produknya menjadi lebih baik, lebih beragam, dan karir kita pun harus seperti itu, contoh produk membuat website tadi misalkan, kita bisa menawarkan produk lain nya yang mendukung seperti TDD <em>(test driven development)</em> sehingga website yang dihasilkan lebih teruji dan berkualitas misalkan, dan salah satu tugas kita pula untuk memasarkan produk ini, kelebihannya dibanding kompetitor, yup kita pun harus bisa menjadi marketing perusahaan (diri) kita sendiri, memiliki produk yang bagus saja belumlah cukup, kita harus bisa meyakinkan klien bahwa produk kita memiliki kualitas yang baik toh, semakin baik kita memasarkan produk kita semakin tinggi keuntungan yang bisa kita dapatkan, bahkan semakin banyak potensial kustomer yang bisa kita peroleh.</p>\n<h2>Bekerja melebihi harapan pelanggan</h2>\n<p>Adalah kunci untuk menjadi yang terdepan, pelanggan kita tidak melulu hanya si perusahaan tempat kita bekerja, rekan kerja kita sebenarnya adalah pelanggan kita, merekalah yang mendapatkan value yang kita berikan.</p>\n<p>Angaplah hubungan di kantor IT adalah hubungan transaksional. Seorang Developer pelanggan nya adalah QA, PM bahkan IT ops. Bagaimana si Developer ini bisa melebihi harapan pelanggan nya? adalah dengan mengetahui keinginan si pelanggan, misal Dev-QA, si developer tentu harus membuat aplikasi dengan kualitas yang baik, dia sendiri pun harus menguji aplikasi yang dia buat dengan teliti, agar dia bisa segera menemukan error dan memperbaiki dengan cepat, sehingga ketika aplikasi di uji oleh seorang QA, maka error sepele tidak lagi ada, dan meringankan kerja QA, atau contoh lain bagi seorang developer adalah membuat code yang baik atau bahkan membuat dokumentasi dari kode yang ia tulis agar di masa depan developer lain yang melanjutkan tidak akan kebingungan atau mengutuk dia dan malah merewrite aplikasi ke kode baru :D</p>\n<figure class=\"post__image post__image--wide\" ><img loading=\"lazy\" src=\"https://fachrul.id/media/posts/48/pexels-rodnae-productions-7414050.jpg\" sizes=\"100vw\" srcset=\"https://fachrul.id/media/posts/48/responsive/pexels-rodnae-productions-7414050-xs.jpg 300w ,https://fachrul.id/media/posts/48/responsive/pexels-rodnae-productions-7414050-sm.jpg 480w ,https://fachrul.id/media/posts/48/responsive/pexels-rodnae-productions-7414050-md.jpg 768w ,https://fachrul.id/media/posts/48/responsive/pexels-rodnae-productions-7414050-lg.jpg 1024w ,https://fachrul.id/media/posts/48/responsive/pexels-rodnae-productions-7414050-xl.jpg 1360w ,https://fachrul.id/media/posts/48/responsive/pexels-rodnae-productions-7414050-2xl.jpg 1600w\"  alt=\"Foto oleh RODNAE Productions dari Pexels\" width=\"1280\" height=\"853\">\n<figcaption >Foto olehÂ <strong><a href=\"https://www.pexels.com/id-id/@rodnae-prod?utm_content=attributionCopyText&amp;utm_medium=referral&amp;utm_source=pexels\">RODNAE Productions</a></strong>Â dariÂ <strong><a href=\"https://www.pexels.com/id-id/foto/pemasaran-exit-teknologi-bisnis-7413915/?utm_content=attributionCopyText&amp;utm_medium=referral&amp;utm_source=pexels\">Pexels</a></strong></figcaption>\n</figure>\n<h2>Selanjutnya</h2>\n<p>Layaknya bisnis, ada banyak faktor yang harus diperhatikan selain hanya produk, seperti tadi sudah disingung mengenai marketing, perusahaan di dunia nyata pun kalau kita lihat banyak menghabiskan biaya untuk iklan kan produk mereka, sebagai software developer kitapun harus bisa \"menjual diri\" kita ke customer agar layak mendapatkan imbalan yang tinggi.</p>\n<p>Contoh marketing yang biasa ditempuh oleh software developer seperti memberikan sharing session, aktif di komunitas, membuat open source, membuat konten di sosial media (instagram, youtube, podcast, ataupun blog/medium).</p>\n<p>Lalu setelah memperoleh income, perusahaan pun harus pandai mengelola uang, divisi finance memegang peranan krusial dalam keberlangsungan perusahaan, kita harus pandai-pandai mengelola aliran uang masuk, khususnya jika kita sebagai pekerja lepas (freelance) dimana penghasilan bisa tak menentu, ataupun jika kamu karyawan bergaji tinggi harus juga mulai melek investasi sehingga bisa membuat portofolio aset untuk masa depan, minimal bisa menjaga kekayaan kita di masa depan (menghindari inflasi) atau bahkan menjadi passive income yang akan memenuhi kebutuhan kita nanti, karena sebesar apapun pendapatan apabila tidak bisa mengelola pengeluaran yang baik serupa ember bolong-bolong, sebanyak apapun air yang kamu isi, kemudian akan bocor juga dan habis suatu saat. Sederhananya, ember boleh saja bolong, tapi pastikan ada banyak keran yang mengisi toh</p>\n<h2>Pekerjaanmu bukanlah karirmu</h2>\n<p>Kembali ke kasus manajer saya tadi, dia tak takut kehilangan potensi keuntungan dan berani mengambil risiko di pekerjaan baru, karena dia tahu keputusan nya pindah pekerjaan akan mengakselerasi karir dia ke depannya.</p>\n<p>Jadi, kita tak perlu setia pada perusahaan dimana kita bekerja, karena kita adalah CEO di perusahaan \"karir\" kita sendiri.</p>\n<p>Bahkan jika dipikirkan kembali, semua pekerjaan pun bisa menerapkan pola pikir entrepreneurship ini, bukan bekerja tapi berkarya, maka dari itu kita kenal istilah karyawan, orang yang berkarya, sekalipun pekerjaan sebagai tukang Vermak lepis keliling, yang mungkin produk utamanya adalahÂ memotong levis customer, namun jika mau meningkatkan layanan produknya, bisa saja dia berinovasi dari sisi marketing jasanyaÂ nya ini, misalnya dengan menuliskan akun sosial media di \"grobak\" nya dia, atau memberikan kartu nama, sehingga bisa \"menjemput rejeki\" ketika pelanggan perlu vermak, maka dia akan menghubungi dia, daripada mengandalkan luasnya cakupan keliling untuk meningkatkan probabilitas bertemu pelanggan yang membutuhkan jasanya.</p>\n<p>Baiklah, sekarang sudah percaya karirmu adalah perusahaanmu? seberapa siap kah kamu memimpin perusahaan \"Karir\" kamu ini?<br><br></p>",
            "image": "https://fachrul.id/media/posts/48/pexels-rodnae-productions-7414050.jpg",
            "author": {
                "name": "Fachrul Choliluddin"
            },
            "tags": [
                   "today-i-learned",
                   "teamwork",
                   "opinion",
                   "leadership"
            ],
            "date_published": "2021-11-07T22:08:00+07:00",
            "date_modified": "2021-11-07T22:17:42+07:00"
        },
        {
            "id": "https://fachrul.id/api-test-framework-python-struktur-framework-dan-fluent-assertion-bagian-3/",
            "url": "https://fachrul.id/api-test-framework-python-struktur-framework-dan-fluent-assertion-bagian-3/",
            "title": "Struktur Framework dan Fluent Assertion - API Test Framework Python (Bagian 3)",
            "summary": "Hi Kawan ðŸ‘‹, Gimana mudah kan belajar bikin API automation dengan python? tentunya,, di kesempatan ini kita akan belajar lebih lanjut dengan pytest dan menggunakan library tambahan (lagi) agar test kita lebih mudah dibaca dan dipahami dengan bantuan fluent assertion Artikel ini adalah salah satu&hellip;",
            "content_html": "<p>Â </p>\n<p>Hi Kawan ðŸ‘‹,</p>\n<p>Gimana mudah kan belajar bikin API automation dengan python? tentunya,, di kesempatan ini kita akan belajar lebih lanjut dengan pytest dan menggunakan library tambahan (lagi) agar test kita lebih mudah dibaca dan dipahami dengan bantuan fluent assertionÂ </p>\n<p>Artikel ini adalah salah satu dari rangkaian tutorial cara membuat RestfulAPI Test Framework dengan bahasa pemrograman Python, artikel lainnya bisa kamu cekidot disini ya:</p>\n<ul>\n<li><a href=\"https://fachrul.id/yuk-belajar-cara-membuat-api-test-automation-framework-python-bagian-1/\" target=\"_blank\" rel=\"noopener noreferrer\">PelajaranÂ 1:Â  Setup dan pengenalan HTTP requests</a></li>\n<li><a href=\"https://fachrul.id/api-test-automation-framework-python-bagian-2/\" target=\"_blank\" rel=\"noopener noreferrer\">Pelajaran 2: Pengujian dengan assert dan pytest</a></li>\n<li><a href=\"https://fachrul.id/api-test-framework-python-struktur-framework-dan-fluent-assertion-bagian-3/\" target=\"_blank\" rel=\"noopener noreferrer\">Pelajaran 3: Struktur awal test framework dan library fluent assertion</a></li>\n<li><a href=\"https://fachrul.id/refactoring-dan-base-api-api-test-framework-python-bagian-4/\" target=\"_blank\" rel=\"noopener noreferrer\" style=\"font-family: -apple-system, BlinkMacSystemFont, Arial, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'; font-size: inherit;\">Pelajaran 4: Refaktoring dan base helper</a></li>\n<li><a href=\"https://fachrul.id/reporting-api-test-framework-python-bagian-5/\" target=\"_blank\" rel=\"noopener noreferrer\" style=\"font-family: -apple-system, BlinkMacSystemFont, Arial, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'; font-size: inherit;\">Pelajaran 5: Reporting</a></li>\n<li><a href=\"https://fachrul.id/json-schema-validation-api-test-framework-python-extra-bonus/\" target=\"_blank\" rel=\"noopener noreferrer\">Extra: Penambahan schema validation dan running test in parallel</a></li>\n</ul>\n<hr>\n<h2>Kenapa kita perlu fluent assertion?</h2>\n<p>Karena assert terlalu sederhana, dia hanya bisa mengevaluasi value True/False saja,, (eh tapi pada dasarnya semua juga sama sih mau pake library ini pun gitu, hahaha)</p>\n<p>Maksudnya ada banyak fitur tambahan dari library ini, bisa dilihat dokumentasinya di web resminyaÂ <a href=\"https://github.com/assertpy/assertpy\">https://github.com/assertpy/assertpy</a>Â dan secara kode pun akan mudah dibaca dan dipahami kok</p>\n<p>Install library ini dengan command `pip install assertpy`</p>\n<h2>Mengakses API method POST</h2>\n<p>Oke kali ini kita ga akan pake GET airports lagi sebagai contoh, tapi kita akan menggunakan contoh API POST untuk menghitung jarak antar airports ya, kurang lebih kode nya akan seperti ini</p>\n<pre><code class=\"language-python line-numbers\">import requests\nfrom assertpy import assert_that\n\n\ndef test_calculate_distance():\n    payload = {\n        \"from\": \"LAE\",\n        \"to\": \"NRT\"\n    }\n    response = requests.post(\"https://airportgap.dev-tester.com/api/airports/distance\", data=payload)\n    data = response.json().get(\"data\")\n    assert_that(data[\"type\"]).is_equal_to(\"airport_distance\")\n    assert_that(data[\"attributes\"]).is_not_empty()\n    assert_that(data).has_id(\"LAE-NRT\")\n    assert_that(data[\"attributes\"][\"kilometers\"]).is_equal_to(4753.834755437252)</code></pre>\n<p>Â Penjelasan kode, yang beda aja dari artikel sebelumnya ya hehe:</p>\n<ul>\n<li>from assertpy import assert_that ==&gt; melakukan import function assert_that yang berada pada module library assertpy</li>\n<li>payload = {} ==&gt; deklarasi variable dengan tipe data dictionary</li>\n<li>response = requests.post(&lt;url&gt;, data) ==&gt; nah seperti pada umumnya method POST adalah untuk mengirim data, maka kita akan mengirim data payload secara programatis dengan menggunakan argument tambahan data=payload</li>\n<li>assert_that(&lt;condition&gt;).is_equal_to(&lt;expected result&gt;) ==&gt; penggunaan assertpy library untuk assertion, lihatlah kodenya jadi mudah dipahami bukan?</li>\n</ul>\n<hr>\n<h2>Struktur Framework pytest</h2>\n<p>Pada umumnya kode pengujian pada sebuah project python terletak pada directory `test` atau `tests`Â jadi untuk standarisasi kita akan mengikuti kaidah ini, sehingga bentuk project test kita menjadi seperti ini</p>\n<pre>.<br>â””â”€â”€ test<br> â”œâ”€â”€ airport_test.py<br> â””â”€â”€ favorite_test.py</pre>\n<p>Oia, sebagai convention pun kita perlu menamakan file kita dengan _test.py agar pytest bisa menemukan file mana saja yang akan dieksekusi sebagai test</p>\n<p>Kita membagi dua file utnuk pengujian api yang berkaitan dengan airport dan favorite ke dalam file yang terpisah agar mudah dipahami, jadi semua test yang berkaitan dengan module favorite pasti terletak di favorite_test.py jadi test kita pun bisa menjadi sebuah dokumentasi yang baik</p>\n<p>Kurang lebih contoh akhir dari file airport_test.py adalah seperti ini</p>\n<pre><code class=\"language-python line-numbers\">import requests\nfrom assertpy import assert_that\n\nBASE_URL = \"https://airportgap.dev-tester.com/api\"\n\n\ndef test_get_all_airports():\n    response = requests.get(f'{BASE_URL}/airports')\n    data = response.json().get('data')\n\n    assert_that(response.status_code).is_equal_to(200)\n    assert_that(data).is_greater_than_or_equal_to(5)\n\n\ndef test_get_airports_by_id():\n    # arrange/GIVEN\n    airport_id = \"LAE\"\n    # action/WHEN\n    response = requests.get(f'{BASE_URL}/airports/{airport_id}')\n    data = response.json().get('data')\n    data_airport = data[\"attributes\"]\n    # assertion/THEN\n    assert_that(response.status_code).is_equal_to(200)\n    assert_that(data_airport[\"name\"]).is_equal_to(\"Nadzab Airport\")\n\n\ndef test_get_not_found_airport():\n    airport_id = \"NOTFOUND\"\n    response = requests.get(f'{BASE_URL}/airports/{airport_id}')\n    assert_that(response.status_code).is_equal_to(404)\n    assert_that(response.json()).contains_key(\"errors\")\n    assert_that(response.text).contains(\"The page you requested could not be found\")\n\n\ndef test_calculate_distance():\n    payload = {\n        \"from\": \"LAE\",\n        \"to\": \"NRT\"\n    }\n    response = requests.post(\"https://airportgap.dev-tester.com/api/airports/distance\", data=payload)\n    data = response.json().get(\"data\")\n    assert_that(data[\"type\"]).is_equal_to(\"airport_distance\")\n    assert_that(data[\"attributes\"]).is_not_empty()\n    assert_that(data).has_id(\"LAE-NRT\")\n    assert_that(data[\"attributes\"][\"kilometers\"]).is_equal_to(4753.834755437252)\n</code></pre>\n<p>dan favorite_test.py</p>\n<pre><code class=\"language-python line-numbers\">from datetime import datetime\n\nimport requests\nfrom assertpy import assert_that\n\nBASE_URL = \"https://airportgap.dev-tester.com/api\"\n\n\ndef get_token(email, password):\n    return requests.post(BASE_URL + \"/tokens\", data={\n        \"email\": email,\n        \"password\": password\n    })\n\n\ndef get_my_favorite_airport(token):\n    header = {\n        \"Authorization\": f\"Token {token}\"\n    }\n    return requests.get(BASE_URL + \"/favorites\", headers=header)\n\n\ndef test_token():\n    token = get_token(email=\"naruto@mailinator.com\", password=\"shuriken\")\n    assert_that(token.status_code).is_equal_to(200)\n    assert_that(token.json()).contains_key(\"token\")\n    assert_that(token.json().get(\"token\")).is_not_empty()\n\n\ndef test_get_favorite():\n    give_me_token = get_token(email=\"naruto@mailinator.com\", password=\"shuriken\")\n    token = give_me_token.json().get(\"token\")\n    header = {\n        \"Authorization\": f\"Token {token}\"\n    }\n    response = requests.get(BASE_URL + \"/favorites\", headers=header)\n    data = response.json().get(\"data\")\n    assert_that(response.status_code).is_equal_to(200)\n    assert_that(data).is_greater_than_or_equal_to(1)\n\n\ndef test_add_new_favorite():\n    \"\"\"\n    Since the data is hardcoded, then it was not idempotent/repeatable\n    This test will failed, if NRT already in my favorite list\n    Need to remove after test teardown\n    \"\"\"\n    give_me_token = get_token(email=\"naruto@mailinator.com\", password=\"shuriken\")\n    token = give_me_token.json().get(\"token\")\n\n    before_add = get_my_favorite_airport(token)\n    data_before = before_add.json().get(\"data\")\n    assert_that(before_add.text).does_not_contain(\"NRT\")\n\n    new_airport = {\n        \"airport_id\": \"NRT\",\n        \"note\": \"I like Narita\"\n    }\n\n    header = {\n        \"Authorization\": f\"Token {token}\"\n    }\n\n    response = requests.post(BASE_URL + \"/favorites\", headers=header, data=new_airport)\n    assert_that(response.status_code).is_equal_to(201)\n    response_data = response.json().get(\"data\")\n    assert_that(response_data[\"attributes\"][\"airport\"][\"iata\"]).is_equal_to(new_airport[\"airport_id\"])\n    assert_that(response_data[\"attributes\"][\"note\"]).is_equal_to(new_airport[\"note\"])\n\n    after_add = get_my_favorite_airport(token)\n    data_after = after_add.json().get(\"data\")\n    assert_that(len(data_after)).is_greater_than(len(data_before))\n    assert_that(after_add.text).contains(new_airport[\"note\"])\n\n\ndef test_update_favorite_note():\n    give_me_token = get_token(email=\"naruto@mailinator.com\", password=\"shuriken\")\n    token = give_me_token.json().get(\"token\")\n\n    before_add = get_my_favorite_airport(token)\n    data_before = before_add.json().get(\"data\")\n\n    assert_that(len(data_before)).is_greater_than(0)\n    id_airport_to_modify = data_before[0][\"id\"]\n\n    header = {\n        \"Authorization\": f\"Token {token}\"\n    }\n\n    # Add dynamic unique string with a timestamp\n    new_note = {\n        \"note\": f\"The note for ID:{id_airport_to_modify} is changed at time: {datetime.now()} \"\n    }\n\n    response = requests.patch(f\"{BASE_URL}/favorites/{id_airport_to_modify}\", headers=header, data=new_note)\n    assert_that(response.status_code).is_equal_to(200)\n    assert_that(response.text).contains(new_note[\"note\"])\n\n    after_add = get_my_favorite_airport(token)\n    data_after = after_add.json().get(\"data\")\n    for airport_data in data_after:\n        if airport_data[\"id\"] == id_airport_to_modify:\n            print(f\"Found the modified airport {id_airport_to_modify}\")\n            print(\"\\nHere is the check for specific airport in an array data\")\n            assert_that(airport_data[\"attributes\"][\"note\"]).is_equal_to(new_note[\"note\"])\n\n\ndef test_delete_favorite():\n    give_me_token = get_token(email=\"naruto@mailinator.com\", password=\"shuriken\")\n    token = give_me_token.json().get(\"token\")\n\n    before_add = get_my_favorite_airport(token)\n    data_before = before_add.json().get(\"data\")\n\n    assert_that(len(data_before)).is_greater_than(0)\n    id_airport_to_delete = data_before[0][\"id\"]\n\n    header = {\n        \"Authorization\": f\"Token {token}\"\n    }\n\n    response = requests.delete(f\"{BASE_URL}/favorites/{id_airport_to_delete}\", headers=header)\n    assert_that(response.status_code).is_equal_to(204)\n    after_delete = get_my_favorite_airport(token)\n    data_after = after_delete.json().get(\"data\")\n    assert_that(len(data_after)).is_less_than(len(data_before))</code></pre>\n<p>Penjelasan kode? hmm sepertinya akan sangat panjang, nanti akan saya jelaskan pada video sepertinya agar lebih runut ehehe, klo nulis keknya panjang ehehe</p>\n<h2>Bagaimana cara menjalankan kode dengan pytest?</h2>\n<p>Klo mau menjalankan satu satu sih bisa seperti cara sebelumnya `Â pytest test/airport_test.py`</p>\n<p>Tapi klo mau menjalankan seluruh test, karena sudah sesuai convention (dalam folder test, file sudah bearakhiran xxx_test.py dan method berawalan test_xxx) sebenarnya cukup menggunakan `pytest` saja tanpa embel embel loh</p>\n<hr>\n<p>Cukup sekian tutorial kali ini, silakan teman-teman pelajari approach saya dalam menulis kode di atas, apakah sudah test nya seperti itu? atau kamu mungkin punya assertion yang bisa jadi ditambahkan juga, silakan tulis di kolom komentar di bawah ya!</p>\n<p>Â Berikutnya kita akan bahas, bagaimana kode ini bisa kita refactor dengan menggunakan class Base API ya</p>\n<p>Salam!</p>\n<p>Selengkapnya ada pula di video live coding berikut ini:</p>\n<div class=\"post__iframe\"><iframe loading=\"lazy\" width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/8XcDzl5vVBU\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"allowfullscreen\"></iframe></div>",
            "author": {
                "name": "Fachrul Choliluddin"
            },
            "tags": [
                   "tutorials",
                   "automation-python"
            ],
            "date_published": "2021-01-29T16:00:31+07:00",
            "date_modified": "2021-08-08T16:36:28+07:00"
        },
        {
            "id": "https://fachrul.id/api-test-automation-framework-python-bagian-2/",
            "url": "https://fachrul.id/api-test-automation-framework-python-bagian-2/",
            "title": "Assert dan Pytest - API Test Framework Python (Bagian 2)",
            "summary": "Hi Kawan ðŸ‘‹, Di artikel sebelumnya kita telah belajar mengenai instalasi python , library requests dan melakukan HTTP call dengan method GET secara programatis melalui kode python, walaupun belum ada test disana, karena memang artikelnya cukup panjang hehehe, jadi kita lanjut disini saja ya. Oh&hellip;",
            "content_html": "<p>Hi Kawan ðŸ‘‹,</p>\n<p>Di artikel sebelumnya kita telah belajar mengenai instalasi python , library requests dan melakukan HTTP call dengan method GET secara programatis melalui kode python, walaupun belum ada test disana, karena memang artikelnya cukup panjang hehehe, jadi kita lanjut disini saja ya.Â </p>\n<p>Oh iya artikel ini adalah salah satu dari rangkaian tutorial cara membuat RestfulAPI Test Framework dengan bahasa pemrograman Python, artikel lainnya bisa kamu cekidot disini ya:</p>\n<ul>\n<li><a href=\"https://fachrul.id/yuk-belajar-cara-membuat-api-test-automation-framework-python-bagian-1/\" target=\"_blank\" rel=\"noopener noreferrer\">PelajaranÂ 1:Â  Setup dan pengenalan HTTP requests</a></li>\n<li><a href=\"https://fachrul.id/api-test-automation-framework-python-bagian-2/\" target=\"_blank\" rel=\"noopener noreferrer\">Pelajaran 2: Pengujian dengan assert dan pytest</a></li>\n<li><a href=\"https://fachrul.id/api-test-framework-python-struktur-framework-dan-fluent-assertion-bagian-3/\" target=\"_blank\" rel=\"noopener noreferrer\">Pelajaran 3: Struktur awal test framework dan library fluent assertion</a></li>\n<li><a href=\"https://fachrul.id/refactoring-dan-base-api-api-test-framework-python-bagian-4/\" target=\"_blank\" rel=\"noopener noreferrer\" style=\"font-family: -apple-system, BlinkMacSystemFont, Arial, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'; font-size: inherit;\">Pelajaran 4: Refaktoring dan base helper</a></li>\n<li><a href=\"https://fachrul.id/reporting-api-test-framework-python-bagian-5/\" target=\"_blank\" rel=\"noopener noreferrer\" style=\"font-family: -apple-system, BlinkMacSystemFont, Arial, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'; font-size: inherit;\">Pelajaran 5: Reporting</a></li>\n<li><a href=\"https://fachrul.id/json-schema-validation-api-test-framework-python-extra-bonus/\" target=\"_blank\" rel=\"noopener noreferrer\">Extra: Penambahan schema validation dan running test in parallel</a></li>\n</ul>\n<hr>\n<h2>Bagaimana cara menguji API response secara programatis dengan python?</h2>\n<p>Pada umumnya di semua bahasa pemrograman memiliki sebuah statement yang digunakan untuk menguji kebenaran sebuah expresion pada program, dan akan mentrigger error pada saat kondisi tersebut bernilai false, pada python kita mengenalnya dengan `assert`, namun sebelum kita menggunakan fungsi `assert`, alangkah baiknya jika kita mengetahui bagaimana cara menguji aplikasi secara sederhana (atau equivalent dari assert):</p>\n<pre class=\"lang-py s-code-block hljs python\"><code><span class=\"hljs-keyword\">if</span> <span class=\"hljs-keyword\">not</span> condition:\n    <span class=\"hljs-keyword\">raise</span> AssertionError()</code></pre>\n<p>Apabila menggunakan `assert` maka, kode di atas akan menjadi serupa:</p>\n<pre class=\"lang-py s-code-block hljs python\"><code><span class=\"hljs-keyword\">assert</span> condition</code></pre>\n<p>Jika kamu perhatikan, assert tidak memiliki kurung seperti function pada umumnya, karena ia adalah sebuah statement bukan sebuah function, oia assert juga bisa memiliki pesan opsional, jadi ketika program kita bisa menyisipkan sebuah kalimat tambahan yang akan mempermudah proses debug, contohnya:</p>\n<pre class=\"lang-py s-code-block hljs python\"><code><span class=\"hljs-keyword\">assert</span> response_ok, <span class=\"hljs-string\">\"Oh no! Server /api/airports is not responding OK!\"</span>\n</code></pre>\n<p>Nah bagaimana implementasinya di kode kita sebelumnya?</p>\n<pre>import requests<br><br>response = requests.get('https://airportgap.dev-tester.com/api/airports')<br>assert response.status_code == 200</pre>\n<p>Penjelasan kode:</p>\n<ul>\n<li>baris 1-3 =&gt; kita import library request dan mengakses server dengan method GET lalu disimpan ke dalam variable `response`</li>\n<li>baris 4 =&gt; kita melakukan pengujian apakah response.status bernilai 200, jika tidak maka program akan error</li>\n</ul>\n<p>Oia satu yang perlu disimak, jika assert mengevaluasi nilai False, maka program akan BERHENTI karena error, jadi baris setelah assert failed tidak akan di eksekusi loh! ini bisa memiliki efek samping jika kita perlu melakukan teardown atau proses tertentu setelah test selesai dilakukan (contoh pada pengujian Web, teardown untuk menutup browser setelah sesi test selesai)</p>\n<hr>\n<h2>Pytest? Benda apakah itu bro?</h2>\n<p>Pytest adalah test library pada python, mirip junit atau testNG pada java, selengkapnya sudah saya tulis di artikel terpisah diÂ <a href=\"https://fachrul.id/belajar-pytest-framework-1/\">https://fachrul.id/belajar-pytest-framework-1/</a></p>\n<p>Oke penggunaan pytest pada project kita sekarang adalah agar kode test yang kita tulis menjadi rapih dan memiliki report pada command line yang lebih rapih manakala ada kejadian errorÂ </p>\n<p>Untuk menggunakan pytest kita perlu install dahulu library nya dengan cara mengetikan command `pip install pytest` pada terminal/cmd kamu</p>\n<p>contoh implementasi pytest</p>\n<pre>import requests<br><br><br>def test_get_all_airports():<br>    response = requests.get('https://airportgap.dev-tester.com/api/airports')<br>    data = response.json().get('data')<br><br>    assert response.status_code == 200<br>    assert len(data) &gt; 5</pre>\n<p>apa yang beda pada kode kita? berikut penjelasannya</p>\n<ul>\n<li>import requests =&gt; kita meninisiasi import library request sebelum digunakan di baris setelahnya</li>\n<li>def test_get_all_airports(): =&gt; kita membuat sebuah function yang diawali dengan def lalu nama function nya, dan penamaan function ini wajib memiliki prefix test_xxxx untuk dikenali sebagai sebuah test case oleh pytest nantinya</li>\n<li>response = requests.get(&lt;url&gt;) =&gt; kita melakukan permintaan data pada webserver dan ditampung ke dalam variable response</li>\n<li>data = response.json().get('data') =&gt; disini kita akan melakukan chaining proses dari mulai parsing response dalam bentuk json menjadi tipe data dictionary pada python, dan dilanjutkan dengan method .get('data')Â artinya kita akan mengambil value dari atribut \"data\" pada dictionary tadi</li>\n<li>assert response.status_code == 200 =&gt; kita melakukan pengujian dengan mengevaluasi status code http response nya harus sama dengan 200</li>\n<li>assert len(data) &gt; 5 =&gt; function len digunakan untuk menghitung berapa jumlah data pada suatu list/collection, nah disini artinya kita melakukan pengujian jumlah data airport harus lebih dari 5</li>\n</ul>\n<h2>Lalu bagaimana cara menjalankan kodenya?</h2>\n<p>oia untuk pytest ada sedikit perbedaan pada cara menjalankan kode/file test, jika sebelumnya kita menjalankanÂ kode pada terminal/cmd dengan `python nama_file.py` sekarang menjadi `pytest nama_file.py`</p>\n<p>perhatikan output pada console sekarang menjadi berbeda dengan materi sebelumnya di pelajaran 1 kan ya!</p>\n<p>oia untuk lebih informatif bisa tambahkan -v (verbose) pada argument pytest menjadi seperti ini `pytest -v nama_file.py`</p>\n<p>Jika kode tidak berjalan dengan pytestÂ yang perlu diperhatikan adalah penamaan method (def) harus diawali dengan test_xxx yaa!</p>\n<p>Â </p>\n<p>Salam!</p>\n<p>Selengkapnya ada pada video live coding ini:</p>\n<div class=\"post__iframe\"><iframe loading=\"lazy\" width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/XkrOAdGQ8Zk\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"allowfullscreen\"></iframe></div>",
            "author": {
                "name": "Fachrul Choliluddin"
            },
            "tags": [
                   "tutorials",
                   "automation-python"
            ],
            "date_published": "2021-01-29T15:58:54+07:00",
            "date_modified": "2021-08-08T16:36:48+07:00"
        },
        {
            "id": "https://fachrul.id/yuk-belajar-cara-membuat-api-test-automation-framework-python-bagian-1/",
            "url": "https://fachrul.id/yuk-belajar-cara-membuat-api-test-automation-framework-python-bagian-1/",
            "title": "Yuk Belajar Cara Membuat API Test Automation Framework Python (Bagian 1)",
            "summary": "Hi Kawan ðŸ‘‹, Di kesempatan kali ini saya akan membuat rangkaian post yang berisi tutorial cara membuat API Test Framework dengan Python dari dasar sampai jadi sebuah framework testing yang siap di integrasikan dengan pipeline CI/CD ðŸ˜ŽðŸ¤˜ Oke setiap post akan berisi sebuah topik tahapan&hellip;",
            "content_html": "<p>Hi Kawan ðŸ‘‹,</p>\n<p>Di kesempatan kali ini saya akan membuat rangkaian post yang berisi tutorial cara membuat API Test Framework dengan Python dari dasar sampai jadi sebuah framework testing yang siap di integrasikan dengan pipeline CI/CD ðŸ˜ŽðŸ¤˜</p>\n<p>Oke setiap post akan berisi sebuah topik tahapan pelajaran dari dasar disetiap aspeknya, semoga saja ini bisa bermanfaat bagi teman-teman yangÂ mulai belajar menekuni dunia software quality assurance / Test engineering ya,Â harapan saya, tutorial ini bisa membantuÂ teman-teman untuk memahami approachÂ API testing, dan bisa mempermudah implementasi API testÂ framework dengan python di tempat kerja kalianÂ </p>\n<p>Kurang lebih rangkaian posting akan seperti:</p>\n<ul>\n<li><a href=\"https://fachrul.id/yuk-belajar-cara-membuat-api-test-automation-framework-python-bagian-1/\" target=\"_blank\" rel=\"noopener noreferrer\">PelajaranÂ 1:Â  Setup dan pengenalan HTTP requests</a></li>\n<li><a href=\"https://fachrul.id/api-test-automation-framework-python-bagian-2/\" target=\"_blank\" rel=\"noopener noreferrer\">Pelajaran 2: Pengujian dengan assert dan pytest</a></li>\n<li><a href=\"https://fachrul.id/api-test-framework-python-struktur-framework-dan-fluent-assertion-bagian-3/\" target=\"_blank\" rel=\"noopener noreferrer\">Pelajaran 3: Struktur awal test framework dan library fluent assertion</a></li>\n<li><a href=\"https://fachrul.id/refactoring-dan-base-api-api-test-framework-python-bagian-4/\" target=\"_blank\" rel=\"noopener noreferrer\" style=\"font-family: -apple-system, BlinkMacSystemFont, Arial, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'; font-size: inherit;\">Pelajaran 4: Refaktoring dan base helper</a></li>\n<li><a href=\"https://fachrul.id/reporting-api-test-framework-python-bagian-5/\" target=\"_blank\" rel=\"noopener noreferrer\" style=\"font-family: -apple-system, BlinkMacSystemFont, Arial, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'; font-size: inherit;\">Pelajaran 5: Reporting</a></li>\n<li><a href=\"https://fachrul.id/json-schema-validation-api-test-framework-python-extra-bonus/\" target=\"_blank\" rel=\"noopener noreferrer\">Extra: Penambahan schema validation dan running test in parallel</a></li>\n</ul>\n<p>Kamu bisa berkomentar atau bertanya di pada bagian komentar post tersebut, insya alloh nanti akan saya jawab sebisanya ehehe, atau bisa juga DM dan follow @fachrulch untuk kritik dan saran nya dalam pembahasan iniÂ </p>\n<hr>\n<h2>Â Apa itu API sih?</h2>\n<p>Sebenernya saya ga yakin bisa menjelaskannya dengan benar, mungkin bisa kamu googling aja nanti ya klo masih belum jelas dari penjelasan saya ehehe, jadi kurang lebih gini:</p>\n<figure class=\"post__image--left\"><img loading=\"lazy\"  src=\"https://fachrul.id/media/posts/41/api-1.png\" sizes=\"100vw\" srcset=\"https://fachrul.id/media/posts/41/responsive/api-1-xs.png 300w ,https://fachrul.id/media/posts/41/responsive/api-1-sm.png 480w ,https://fachrul.id/media/posts/41/responsive/api-1-md.png 768w ,https://fachrul.id/media/posts/41/responsive/api-1-lg.png 1024w ,https://fachrul.id/media/posts/41/responsive/api-1-xl.png 1360w ,https://fachrul.id/media/posts/41/responsive/api-1-2xl.png 1600w\"  alt=\"\" width=\"800\" height=\"454\"></figure>API (Application Programming Interface) atau juga seringkali dikenal dengan webservice adalah bentuk komunikasi antar sistem, sederhananya, API menyediakan serangkaian cara/kontrak bagaimana sebuah informasi bisa ditransfer/diakses.</p>\n<p>API ada dua kategori, yaitu SOAP dan REST, SOAPmenggunakan format XML yang membungkus informasi data nya, sejauh yg saya tau soap masih umum dipergunakan oleh perbankan sampai saat ini, sedangkan REST sudah umum dipakai oleh khalayak ramai, karena lebih ringan dalam hal ukuran data yang disimpan dalam format JSON, dan umumnya permintaan dan penerimaan data menggunakan protokol HTTP, biasanya menggunakan verbs GET, POST, PUT dan DELETE dalam berinteraksi.</p>\n<p>Di kesempatan ini kita akan fokus dalam pembuatan API test framework untuk RESTful API ya, tools yang sering dipergunakan dalam berinteraksi dengan API adalah Postman</p>\n<figure class=\"post__image post__image--full\" ><img loading=\"lazy\" src=\"https://fachrul.id/media/posts/41/rest-api-contoh-sederhana.png\" sizes=\"100vw\" srcset=\"https://fachrul.id/media/posts/41/responsive/rest-api-contoh-sederhana-xs.png 300w ,https://fachrul.id/media/posts/41/responsive/rest-api-contoh-sederhana-sm.png 480w ,https://fachrul.id/media/posts/41/responsive/rest-api-contoh-sederhana-md.png 768w ,https://fachrul.id/media/posts/41/responsive/rest-api-contoh-sederhana-lg.png 1024w ,https://fachrul.id/media/posts/41/responsive/rest-api-contoh-sederhana-xl.png 1360w ,https://fachrul.id/media/posts/41/responsive/rest-api-contoh-sederhana-2xl.png 1600w\"  alt=\"\" width=\"1280\" height=\"757\">\n<figcaption >RestAPI secara sederhana</figcaption>\n</figure>\n<p>Â </p>\n<h2>Kenapa Perlu Membuat API test automation?</h2>\n<p>Test functional dari API sebenarnya lewat postman juga bisa, entah manually atau automation test disana, memiliki functional API automation adalah langkah besar dalam pengujian yang cepat terhadap sistem, apalagi API cenderung lebih stabil daripada UI automation test. Dampak yang bisa kita harapkan dari memiliki automation test pada API/webservice adalah kita bisa menguji user flow, business logic dengan cepat dan stabil.</p>\n<p>Nah kita akan membuat API test automation dengan python, walaupun sebenarnya bisa juga dibuat dengan bahasa pemrograman lain seperti java, kotlin, javascript, dll. tetapi menurut saya python lebih sederhana dan mudah dipelajari oleh pemula, juga sangat powerful bagi tingkat mahir sekalipun, so i think it is good investment</p>\n<h2>OK, terus apa yang diperlukan dalam pengembangan API test framework dengan Python?</h2>\n<p>Udah siap? oke kita list dulu ya apa saja yang diperlukan dalam pengembangan API test framework dengan bahas python</p>\n<ol>\n<li>Komputer kamu sudah terinstal python (saran saya sudah versi 3.8 keatas ya)</li>\n<li>Install code editor, saran saya sih menggunakan PyCharm, tapi klo mau yg lebih ringan boleh pake Visual Code ataupun Notepad++ juga bisa harusnya</li>\n</ol>\n<hr>\n<h2><figure class=\"post__image--center\"><img loading=\"lazy\"  src=\"https://fachrul.id/media/posts/41/airportgap.png\" sizes=\"100vw\" srcset=\"https://fachrul.id/media/posts/41/responsive/airportgap-xs.png 300w ,https://fachrul.id/media/posts/41/responsive/airportgap-sm.png 480w ,https://fachrul.id/media/posts/41/responsive/airportgap-md.png 768w ,https://fachrul.id/media/posts/41/responsive/airportgap-lg.png 1024w ,https://fachrul.id/media/posts/41/responsive/airportgap-xl.png 1360w ,https://fachrul.id/media/posts/41/responsive/airportgap-2xl.png 1600w\"  alt=\"\" width=\"500\" height=\"592\"></figure></h2>\n<h2>Studi Kasus</h2>\n<p>Oke, sepertinya kita akan bahas dulu aplikasi apa yang akan menjadi target kita dalam pengembangan API test framework, sebagai contoh kita akan mengautomasi pengujian padaÂ <a href=\"https://airportgap.dev-tester.com\">https://airportgap.dev-tester.com</a>Â sebuah dummy app yang dikhususkan bagi teman-teman yang berlatih dalam mengasah automation skill pada API</p>\n<p>Kenapa saya pilih ini? karena koleksi API disini kurang lebih akan mirip dengan apa yang kamu punya di kantor, ada API yang bisa diakses dengan GET, POST, DELETE dan PUT/PATCH, jadi bisa dikatakan mini project API, apalagi dokumentasinya API juga sudah cukup jelas ya, bisa diakses disiniÂ <a href=\"https://airportgap.dev-tester.com/docs\">https://airportgap.dev-tester.com/docs</a></p>\n<figure class=\"post__image--left\"><img loading=\"lazy\"  src=\"https://fachrul.id/media/posts/41/374px-Requests_Python_Logo.png\" sizes=\"100vw\" srcset=\"https://fachrul.id/media/posts/41/responsive/374px-Requests_Python_Logo-xs.png 300w ,https://fachrul.id/media/posts/41/responsive/374px-Requests_Python_Logo-sm.png 480w ,https://fachrul.id/media/posts/41/responsive/374px-Requests_Python_Logo-md.png 768w ,https://fachrul.id/media/posts/41/responsive/374px-Requests_Python_Logo-lg.png 1024w ,https://fachrul.id/media/posts/41/responsive/374px-Requests_Python_Logo-xl.png 1360w ,https://fachrul.id/media/posts/41/responsive/374px-Requests_Python_Logo-2xl.png 1600w\"  alt=\"\" width=\"374\" height=\"480\"></figure>\n<h2>Pelajaran 1 - pengenalan HTTP requests</h2>\n<p>SiapÂ kita mulai ya, untuk mengakses API/webservice kita perlu sebuah library yang akan memudahkan kita dalam berinteraksi dengan API, yaitu menggunakan library requests, cara menginstall library ini adalah dengan command</p>\n<pre>pip install requests</pre>\n<p>Dokumentasi requests menurut saya sangat jelas dan keren, coba saja lihat <a href=\"https://requests.readthedocs.io/en/master/\">https://requests.readthedocs.io/en/master/</a> , kita bisa pelajari lebih lanjut fitur dan kemampuan requests disana ya, tapi secara natural sangat mudah diingat kok method dan fungsi nya</p>\n<p>Lanjut,, kita akan mengakses informasi daftar airports yand bisa diakses dengan melakukan request GET pada endpoint `/api/airports` dan melihat apa saja informasi yang terkandung di dalamnya</p>\n<p>Untuk itu kita harus membuat file python baru di folder/direktori yang sudah kamu pilih ya</p>\n<p>Di baris awal kita perlu melakukan import library request dahulu dengan menambahkan kode `import requests` lalu di baris berikutnya kita akan menggunakan library requests dalam mengakses API dengan kode</p>\n<pre><code class=\"language-python line-numbers\">import requests\n\nresponse = requests.get('https://airportgap.dev-tester.com/api/airports')\nprint(response.status_code)\nprint(response.text) \n    </code></pre>\n<p>Â </p>\n<p>Penjelasan kode:</p>\n<ul>\n<li>import requests =&gt; melakukan import library `requests` sebelum penggunaan di baris selanjutnya</li>\n<li>response = requests.get(&lt;url&gt;) =&gt; kita melakukan permintaan GET pada sebuah url yang kemudian di tampung kedalam variable `response`</li>\n<li>print(response.status_code) dan print(response.text) =&gt; kita mengeluarkan text response dan status code kepada python console dengan command print</li>\n</ul>\n<p>Bagaimana cara run file ini? yaitu dengan membuka terminal/cmd lalu masuk ke directory/folder dimana file python ini berada, kemudian kita tinggal menjalankan command `python namafile.py` maka kita bisa melihat hasil requests di dalam console terminal/cmd</p>\n<hr>\n<h2>Penutup</h2>\n<p>Namun,,, ini masih belum ada test nya ya, di pelajaran kali ini kita hanya bisa melihat hasil GET pada console, tanpa ada pengujian secara otomatis (pengujian masih visual oleh kita melalui console ehehe)</p>\n<p>Karena materi disini sudah cukup panjang ehehe, PR dari saya di tahap 1 ini adalah untuk mempelajari <a href=\"https://requests.readthedocs.io/en/master/\" target=\"_blank\" rel=\"noopener noreferrer\">dokumentasi requests</a> ya, kita lihat betapa mudahnya mengkases webservice dengan library ini, baik itu dengan method GET, POST, PUT, PATCH ya</p>\n<p>Dimateri berikutnya kita akan menggunakan test dengan assertion jadi sudah mulai masuk ke automation test</p>\n<p>Salam!</p>\n<p>Selengkapnya ada di Video live coding berikut ini</p>\n<div class=\"post__iframe\"><iframe loading=\"lazy\" width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/nsdHPitMSSI\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"allowfullscreen\"></iframe></div>",
            "image": "https://fachrul.id/media/posts/41/pexels-zachary-debottis-1888883.jpg",
            "author": {
                "name": "Fachrul Choliluddin"
            },
            "tags": [
                   "tutorials",
                   "automation-python"
            ],
            "date_published": "2021-01-29T14:00:27+07:00",
            "date_modified": "2021-12-31T09:55:43+07:00"
        },
        {
            "id": "https://fachrul.id/belajar-pytest-framework-1/",
            "url": "https://fachrul.id/belajar-pytest-framework-1/",
            "title": "Pytest: Memahami Cara Kerja Testing Framework (bagian 1)",
            "summary": "Apa itu pytest? icon Pytest Adalah kerangka kerja dari pengujian pada kode python, bisa dibilang semua test framework (junit, testng, rspec, dkk) adalah jantung nya dari segala test automation framework, pytest bisa digunakan pada berbagai tipe dan level dari software testing, sebenarnya ada berbagai alternatif&hellip;",
            "content_html": "<h2>Apa itu pytest?</h2>\n<figure class=\"post__image post__image--left\" ><img loading=\"lazy\" src=\"https://fachrul.id/media/posts/34/pytest1.png\" sizes=\"100vw\" srcset=\"https://fachrul.id/media/posts/34/responsive/pytest1-xs.png 300w ,https://fachrul.id/media/posts/34/responsive/pytest1-sm.png 480w ,https://fachrul.id/media/posts/34/responsive/pytest1-md.png 768w ,https://fachrul.id/media/posts/34/responsive/pytest1-lg.png 1024w ,https://fachrul.id/media/posts/34/responsive/pytest1-xl.png 1360w ,https://fachrul.id/media/posts/34/responsive/pytest1-2xl.png 1600w\"  alt=\"\" width=\"150\" height=\"143\">\n<figcaption >icon Pytest</figcaption>\n</figure>\n<p>Adalah kerangka kerja dari pengujian pada kode python, bisa dibilang semua test framework (<em><strong>junit, testng, rspec</strong></em>, dkk) adalah jantung nya dari segala test automation framework, pytest bisa digunakan pada berbagai tipe dan level dari software testing, sebenarnya ada berbagai alternatif testing tools pada python yang lainya seperti uniitest ataupun nose, tapi banyak open source project yang mulai \"hijrah\"Â mengadopsi pytest karena fitur yang ada pada <a href=\"https://docs.pytest.org/en/latest/\">pytest</a>Â yang menarik diantara yang lainya yaitu:</p>\n<ul>\n<li>Mudah membuat kode test dari pengujian sederhana hingga pengujian kompeks tetap mudah menuliskan kodeÂ pengujiannya dengan pytest</li>\n<li>Mudah dibaca</li>\n<li>Mudah dipelajari</li>\n<li>Kode yang Pythonic banget</li>\n<li>Bahkan pytest bisa menjalankan kode pengujian yang ditulis dengan format unittest ataupun nose</li>\n<li>Komunitas yang sangat aktif dan pengembangan yang terjaga</li>\n</ul>\n<p>Â </p>\n<hr>\n<p>Post ini merupakan rangkaian post mengenai membuat automationt test dengan python</p>\n<h4>Daftar isinya:</h4>\n<ol>\n<li><a href=\"https://fachrul.id/mau-belajar-automation-test-dengan-python-mulai-dari-mana/\" target=\"_blank\" rel=\"noopener noreferrer\">Belajar Python dari dasar</a></li>\n<li><a href=\"https://fachrul.id/belajar-pytest-framework-1/\" target=\"_blank\" rel=\"noopener noreferrer\">Memahami cara kerja Pytest (bagian 1)</a> &lt;== Sekarang disini</li>\n<li><a href=\"https://fachrul.id/memulai-automation-test-selenium-python-bagian-1/\" target=\"_blank\" rel=\"noopener noreferrer\">Mulai membuat automation test dengan Selenium</a></li>\n<li><a href=\"https://fachrul.id/selector-locator-strategy-yang-baik/\" target=\"_blank\" rel=\"noopener noreferrer\">Menemukan Element dengan locator strategi yang baik</a></li>\n</ol>\n<hr>\n<p>Â </p>\n<p>Berikutnya akan kitaÂ belajar tentang penggunaan pytest dalam mengembangkan kerangka kerja (framework) pengujian otomatis (automated test) dalam bahasa pemrograman python, dengan menguasai kerangka kerja pengujian di python maka kamu akan dengan mudahÂ mengkombinasikan automated test pada REST API, browser dengan selenium nya ataupun mobile apps dengan appium karena sesungguhnya mereka itu adalah library yang menjadi pelengkap pytest ini ðŸ˜…Â </p>\n<h2>Persiapan Pytest</h2>\n<p>Saya asumsikan python sudah terinstal di komputer kamu, dan tak diperlukan untuk tahu banyak tentang python itu sendiri, karena contoh yang akan saya tunjukan cuma kode sederhana bahkan bisa dibilang terlalu sederhana :D</p>\n<p>Cara installnya cukup menjalankan command berikut pada terminal ataupun command line kamu</p>\n<p><code>pip install pytest</code></p>\n<p>lalu setelah installasi berhasil coba jalankan perintah:</p>\n<p><code>pytest --help</code></p>\n<p>jika installasi benar maka akan memunculkan informasi lengkap tentang cara penggunaan pytest pada command line</p>\n<p>dokumentasi lebih lanjut bisa dilihat diÂ <a href=\"https://docs.pytest.org/en/latest/\">https://docs.pytest.org/en/latest/</a>Â </p>\n<h2>Menjalankan Pytest</h2>\n<p>Secara aturan (convention) di berbagai macam project pengujian, kode test harus ditaruh didalam directory (folder) /tests/, dan secara otomatis pytest akan menemukan dan mengeksekusi test yang ditemukan dalam proses test discovery seperti berikut:</p>\n<ul>\n<li>Nama file mengandung nama \"<em><strong>test_&lt;sesuatu&gt;.py</strong></em>\" ataupun \"<em><strong>&lt;sesuatu&gt;_test.py</strong></em>\"</li>\n<li>Test class yang dinamai \"<strong><em>Test&lt;Sesuatu&gt;</em></strong>\"</li>\n<li>Test method/function yang diawali \"<strong><em>test_&lt;sesuatu&gt;</em></strong>\", dan menariknya, pytest tidak memerlukan sebuah file <strong><em>__init__.py</em></strong> disemua test directory seperti pada aplikasi python pada umumnya</li>\n</ul>\n<p>cara menjalankan kode test:</p>\n<table>\n<tbody>\n<tr>\n<td><code>$ â€‹â€‹pytestâ€‹â€‹ tests/</code></td>\n<td>menjalankan seluruh test pada directory /tests/</td>\n</tr>\n<tr>\n<td><code>$ â€‹â€‹pytestâ€‹â€‹ tests/nama_file.py</code></td>\n<td>menjalankan test hanya pada module \"nama_file.py\"</td>\n</tr>\n<tr>\n<td><code>$ â€‹â€‹pytestâ€‹â€‹ tests/nama_file.py::TestClass</code></td>\n<td>menjalankan test hanya pada class TestClass di module \"nama_file.py\"</td>\n</tr>\n<tr>\n<td>\n<p><code>$ â€‹â€‹pytestâ€‹â€‹ tests/nama_file::TestClass::test_method</code></p>\n<p>atau jika bentuk test bukan dalam Class</p>\n<p><code>$ â€‹â€‹pytestâ€‹â€‹ tests/nama_file::test_method</code></p>\n</td>\n<td>menjalankan test hanya di method tertentu saja, tidak menjalankan method lainnya</td>\n</tr>\n</tbody>\n</table>\n<p>Â </p>\n<h2>Marker</h2>\n<p>Penggunaan decorator <em><strong>@pytest.mark.&lt;sesuatu&gt;</strong></em> sangat memudahkan kita dalam mengelompokan test, ibarat tagging dari test, satu test bisa memiliki lebih dari satu mark, dan kitapun bisa mengeksekusi test berdasarkan mark tertentu, seperti berikut</p>\n<p><code>$ â€‹â€‹pytestâ€‹â€‹ -m smoke</code></p>\n<p>maka pytest akan mencari test mana saja yang memiliki tag @pytest.mark.smoke untuk dijalankan</p>\n<p>Informasi lebih lanjut, kamu bisa akses dokumentasinya langsung di terminal dengan perintah</p>\n<p><code>$ â€‹â€‹pytestâ€‹â€‹ --help</code></p>\n<h2>Menulis Test</h2>\n<p>Kurang lebih contoh kerangka kerja test pada pytest sebagai berikut:</p>\n<figure class=\"post__image post__image--center\" ><img loading=\"lazy\" src=\"https://fachrul.id/media/posts/34/Screen-Shot-2020-05-19-at-22.56.59.png\" sizes=\"100vw\" srcset=\"https://fachrul.id/media/posts/34/responsive/Screen-Shot-2020-05-19-at-22.56.59-xs.png 300w ,https://fachrul.id/media/posts/34/responsive/Screen-Shot-2020-05-19-at-22.56.59-sm.png 480w ,https://fachrul.id/media/posts/34/responsive/Screen-Shot-2020-05-19-at-22.56.59-md.png 768w ,https://fachrul.id/media/posts/34/responsive/Screen-Shot-2020-05-19-at-22.56.59-lg.png 1024w ,https://fachrul.id/media/posts/34/responsive/Screen-Shot-2020-05-19-at-22.56.59-xl.png 1360w ,https://fachrul.id/media/posts/34/responsive/Screen-Shot-2020-05-19-at-22.56.59-2xl.png 1600w\"  alt=\"\" width=\"450\" height=\"450\">\n<figcaption >struktur kode pytest pada umumnya</figcaption>\n</figure>\n<p>Â </p>\n<p>File test berada dibawah directory tests, dan pytest.ini adalah file optional, biasanya terkait dengan configurasi default cara menjalankan pytest, lalu pytest.py ini juga optional, bisa dianggap file ini berisikan dari \"local plugin\" karena semua kode yang ada disini bisa diakses oleh seluruh file test yang dijalankan, sehingga sangat cocok untuk menaruh kode yang bisa di reuse antar test</p>\n<p>Pada kesempatan kali ini sebagai contoh sederhana dalam mencoba pytest, buatlah sebuah file /tests/test_math.py yang di dalamnya isinya sebagai berikut:</p>\n<pre><code class=\"language-python\">def test_pertambahan():\n    assert 1 + 11 == 12\n    \n    \nclass TestHimpunan:\n    def test_persamaan(self):\n        assert (1,2,3) == (1,2,3)\n</code></pre>\n<p>lalu cara menjalankan nya pada terminal dengan perintah sebagai berikut:</p>\n<p><code>pytest tests/test_math.py</code></p>\n<p>Output yang dihasilkan kurang lebih seperti berikut:</p>\n<figure class=\"post__image post__image--center\" ><img loading=\"lazy\" src=\"https://fachrul.id/media/posts/34/Screen-Shot-2020-05-19-at-22.21.54.png\" sizes=\"100vw\" srcset=\"https://fachrul.id/media/posts/34/responsive/Screen-Shot-2020-05-19-at-22.21.54-xs.png 300w ,https://fachrul.id/media/posts/34/responsive/Screen-Shot-2020-05-19-at-22.21.54-sm.png 480w ,https://fachrul.id/media/posts/34/responsive/Screen-Shot-2020-05-19-at-22.21.54-md.png 768w ,https://fachrul.id/media/posts/34/responsive/Screen-Shot-2020-05-19-at-22.21.54-lg.png 1024w ,https://fachrul.id/media/posts/34/responsive/Screen-Shot-2020-05-19-at-22.21.54-xl.png 1360w ,https://fachrul.id/media/posts/34/responsive/Screen-Shot-2020-05-19-at-22.21.54-2xl.png 1600w\"  alt=\"\" width=\"1024\" height=\"538\">\n<figcaption >output test berhasil</figcaption>\n</figure>\n<p>Ok kita bahas ya, pada contoh diatas saya menjalankan 2 test pada file <em><strong>test_math.py</strong></em> yaitu <em><strong>def test_pertambahan</strong></em> dan <strong><em>def test_persamaan</em></strong>, disini saya menunjukan bahwa pytest support bentuk kode pengujian yang dituliskan sebagai function mandiri atau method pada class, tidak ada perbedaan signifikan, hanya pengelompokan test saja menurut saya.</p>\n<p>Dan jika ditilik lagi, jika test berjalan baik dan passed akan ditandai dengan simbol titik warna hijau (di windows gada warnanya) pada output console danÂ jika failed ditandai dengan huruf F warna merah, disertai dengan informasi pelengkapnya.</p>\n<p>agar lebih jelas lagi mari kita coba membuat test gagal dengan mengubah nilai pada assertnya, dan agar tampilan output console lebih informatif, jalankan perintahÂ <code>pytest -v tests/test_math.py</code> lalu perhatikan error message yang ditampilkan sebagai berikut</p>\n<figure class=\"post__image post__image--center\" ><img loading=\"lazy\" src=\"https://fachrul.id/media/posts/34/Screen-Shot-2020-05-19-at-22.26.15.png\" sizes=\"100vw\" srcset=\"https://fachrul.id/media/posts/34/responsive/Screen-Shot-2020-05-19-at-22.26.15-xs.png 300w ,https://fachrul.id/media/posts/34/responsive/Screen-Shot-2020-05-19-at-22.26.15-sm.png 480w ,https://fachrul.id/media/posts/34/responsive/Screen-Shot-2020-05-19-at-22.26.15-md.png 768w ,https://fachrul.id/media/posts/34/responsive/Screen-Shot-2020-05-19-at-22.26.15-lg.png 1024w ,https://fachrul.id/media/posts/34/responsive/Screen-Shot-2020-05-19-at-22.26.15-xl.png 1360w ,https://fachrul.id/media/posts/34/responsive/Screen-Shot-2020-05-19-at-22.26.15-2xl.png 1600w\"  alt=\"\" width=\"1024\" height=\"1352\">\n<figcaption >hasil menjalankan kode test yang ternyata failed :P</figcaption>\n</figure>\n<p>Ada berbagai macam jenis outcome dari sebuah test yang akan dihasilkan oleh pytest sebagai berikut:</p>\n<ul>\n<li><strong>PASSED</strong> (.) adalah test yang berjalan sebagaimana mestinya</li>\n<li><strong>FAILED</strong> (F) adalah test yang tidak berjalan seperti yang diharapkan</li>\n<li><strong>SKIPPED</strong> (s) adalah test yang tidak dijalankan (dilompati), kita bisa mengkonfigurasi test yang harus di lompati dengan menggunakan decorator <em><strong>@pytest.mark.skip()</strong> </em>atau secara programatically</li>\n<li><strong>xfail</strong> (x): adalah test yang tidak seharusnya untuk pass, jadi secara eksplisit kita mengharapkan suatu test untuk failed, ditandai dengan decorator <em><strong>@pytest.mark.xfail()</strong></em></li>\n<li><strong>XPASS</strong> (X): kurang lebih mirip xfail</li>\n<li><strong>ERROR</strong> (E) adalah exception yang terjadi diluar test function tersebut, bisa gara-gara fixture, di hook atau dari mis-configurasi</li>\n</ul>\n<h2>Ekspektasi</h2>\n<p>Pytest akan menggak exception yang tidak dihandle sebagai sebuah failure, pada saat statement assert dihadapkan kepada nilai False maka ia akan melempar exception dan langsung memberhentikan eksekusi program, jadi tidak akan dilanjutkan ke statement setelah assert yang failed tersebut</p>\n<pre><code class=\"language-python\">class TestHimpunan:\n    def test_persamaan(self):\n        assert (1,3,5) == (1,4,5)\n        print('Bagian ini tidak akan dijalankan')</code></pre>\n<p>Tapi jika memang justru exception yang diharpkan maka bisa menggunakanÂ <span class=\"pln\">pytest</span><span class=\"pun\">.</span><span class=\"pln\">raises</span></p>\n<p>Â </p>\n<h2>Contoh studi kasus JSON api kode post Indonesia</h2>\n<p>Contoh API test sederhana menggunakan pytest untuk menguji json api dari repo iniÂ <a href=\"https://github.com/bachors/Kode-Pos-API\">https://github.com/bachors/Kode-Pos-API</a>Â yang memiliki aplikasi live di firebaseio</p>\n<p>Kita buat file di tests/feature_kodepost/test_kodepos_indonesia.py, isinya</p>\n<pre><code class=\"language-python\">iimport requests \n\ndef test_provinsi():\n    list_provinsi = requests.get('https://kodepos-2d475.firebaseio.com/list_propinsi.json?print=pretty')\n    data_prov = list_provinsi.json()\n    assert len(data_prov) == 34\n    assert data_prov.get('p9') == 'Jawa Barat'\n    \ndef test_kotakab_jabar():\n    list_kotakab = requests.get('https://kodepos-2d475.firebaseio.com/list_kotakab/p9.json?print=pretty')\n    data_kotakab = list_kotakab.json()\n    assert list_kotakab.status_code == 200\n    assert data_kotakab.get('k60') == 'Tasikmalaya_typo'\n    assert len(data_kotakab) == 21\n    \ndef test_kodepos_tasik():\n    list_keckel = requests.get('https://kodepos-2d475.firebaseio.com/kota_kab/k60.json?print=pretty')\n    data_kodepos = list_keckel.json()\n    assert list_keckel.status_code == 200\n    assert len(data_kodepos) == 420\n </code></pre>\n<p>lalu cara menjalankannya denganÂ  command</p>\n<p><code>âžœ pytest -v tests/feature_kodepos</code></p>\n<p>maka akan muncul output sebagai berikut</p>\n<figure class=\"post__image post__image--center\" ><img loading=\"lazy\" src=\"https://fachrul.id/media/posts/34/Screen-Shot-2020-05-19-at-23.21.32.png\" sizes=\"100vw\" srcset=\"https://fachrul.id/media/posts/34/responsive/Screen-Shot-2020-05-19-at-23.21.32-xs.png 300w ,https://fachrul.id/media/posts/34/responsive/Screen-Shot-2020-05-19-at-23.21.32-sm.png 480w ,https://fachrul.id/media/posts/34/responsive/Screen-Shot-2020-05-19-at-23.21.32-md.png 768w ,https://fachrul.id/media/posts/34/responsive/Screen-Shot-2020-05-19-at-23.21.32-lg.png 1024w ,https://fachrul.id/media/posts/34/responsive/Screen-Shot-2020-05-19-at-23.21.32-xl.png 1360w ,https://fachrul.id/media/posts/34/responsive/Screen-Shot-2020-05-19-at-23.21.32-2xl.png 1600w\"  alt=\"\" width=\"1024\" height=\"1020\">\n<figcaption >output menjalankan test kdoepos</figcaption>\n</figure>\n<p>Test nya sengaja saya buat failed, karena untuk melihat betapa cantiknya error log dari pytest jika terjadi masalah, apa yang menarik disini:</p>\n<ul>\n<li>Informasi kesalahan yang jelas, contoh diatas ada typo pada string yang dibandingkan (assert) maka ditunjukan kelebihan character dengan tanda plus</li>\n<li>test dijalankan sesuai dengan urutan penulisan test pada file, jadi dieksekusi dari atas kebawah</li>\n<li>walaupun test ke-2 failed, tetap melanjutkan ekseskusi test ke-3, (stop ekseskusi karena throw exception hanya pada scope test function, jadi dari failed tersebut tidak akan melanjutkan ekseskusi baris statement berikutnya tapi langsung pindah ke test berikutnya)</li>\n</ul>\n<p>Yuk kita bermain dengan kode test diatas, berikutnya kita ubah kode test sebagai berikut</p>\n<p>Kita tambahkan decorator xfail di method yg gagal menjadi seperti ini</p>\n<div>\n<pre><code class=\"language-python\">@pytest.mark.xfail\ndef test_kotakab_jabar():<br>   ...</code></pre>\n<p>Lalu jalankan kembali testnya dan outputnya sekarang berbeda</p>\n<figure class=\"post__image post__image--center\" ><img loading=\"lazy\" src=\"https://fachrul.id/media/posts/34/Screen-Shot-2020-05-19-at-23.34.05.png\" sizes=\"100vw\" srcset=\"https://fachrul.id/media/posts/34/responsive/Screen-Shot-2020-05-19-at-23.34.05-xs.png 300w ,https://fachrul.id/media/posts/34/responsive/Screen-Shot-2020-05-19-at-23.34.05-sm.png 480w ,https://fachrul.id/media/posts/34/responsive/Screen-Shot-2020-05-19-at-23.34.05-md.png 768w ,https://fachrul.id/media/posts/34/responsive/Screen-Shot-2020-05-19-at-23.34.05-lg.png 1024w ,https://fachrul.id/media/posts/34/responsive/Screen-Shot-2020-05-19-at-23.34.05-xl.png 1360w ,https://fachrul.id/media/posts/34/responsive/Screen-Shot-2020-05-19-at-23.34.05-2xl.png 1600w\"  alt=\"\" width=\"1024\" height=\"580\">\n<figcaption >semua hasil passed dengan catatan 1 xfail</figcaption>\n</figure>\n<p>Nah terlihat bahwa sekarang semua test hijau (passed) dengan catatan ada 1 test yang memang expected failed (xfailed)</p>\n<h2>Pytest Fixtures</h2>\n<p>Nah bagian ini sebenarnya yang menurut saya paling keren dari pytest, tapi berhubung postingan kali ini sudah cukup panjang, maka informasi lebih lanjut terkait fixture akan disambung di post selanjutnya ya, dengan contoh framework pada web ui testing</p>\n<p>Bersambung ...</p>\n</div>",
            "image": "https://fachrul.id/media/posts/34/Screen-Shot-2020-05-20-at-00.05.17.png",
            "author": {
                "name": "Fachrul Choliluddin"
            },
            "tags": [
                   "tutorials",
                   "automation-python"
            ],
            "date_published": "2020-05-19T23:59:58+07:00",
            "date_modified": "2020-05-20T00:06:39+07:00"
        },
        {
            "id": "https://fachrul.id/selector-locator-strategy-yang-baik/",
            "url": "https://fachrul.id/selector-locator-strategy-yang-baik/",
            "title": "Selector (Locator) Strategy adalah koentji dari Test Automation",
            "summary": "Hi kawan, Jika kamu berkecimpung di pemrograman automation test menggunakan selenium / appium tentunya kamu sudah paham banget kalau sampe salah selector (locator) makaÂ kamu telah membuang banyakÂ waktu karena selector yang kamu telah tuliskan tidak ditemukan dan harus re-run lagi ðŸ˜­ Menemukan element pada tampilan aplikasi&hellip;",
            "content_html": "<p>Hi kawan,</p>\n<p>Jika kamu berkecimpung di pemrograman automation test menggunakan selenium / appium tentunya kamu sudah paham banget kalau sampe salah selector (locator) makaÂ kamu telah membuang banyakÂ waktu karena selector yang kamu telah tuliskan tidak ditemukan dan harus re-run lagi ðŸ˜­</p>\n<p>Menemukan element pada tampilan aplikasi seperti buttons, inputs, divs, checkboxes ataupun anchor tag terkadang cukup \"menantang\", terutama ketika tidak adanya ke-unikan ataupun identitas yang jelas pada element tersebut, bahakan pernah saya menguji aplikasi yang ID nya selalu berubah karena digenerate otomatis oleh library front end nya. Alamakjang ðŸ˜µ</p>\n<hr>\n<p>Post ini merupakan rangkaian post mengenai membuat automationt test dengan python</p>\n<h4>Daftar isinya:</h4>\n<ol>\n<li><a href=\"https://fachrul.id/mau-belajar-automation-test-dengan-python-mulai-dari-mana/\" target=\"_blank\" rel=\"noopener noreferrer\">Belajar Python dari dasar</a></li>\n<li><a href=\"https://fachrul.id/belajar-pytest-framework-1/\" target=\"_blank\" rel=\"noopener noreferrer\">Memahami cara kerja Pytest (bagian 1)</a>Â </li>\n<li><a href=\"https://fachrul.id/memulai-automation-test-selenium-python-bagian-1/\" target=\"_blank\" rel=\"noopener noreferrer\">Mulai membuat automation test dengan Selenium</a></li>\n<li><a href=\"https://fachrul.id/selector-locator-strategy-yang-baik/\" target=\"_blank\" rel=\"noopener noreferrer\">Menemukan Element dengan locator strategi yang baik</a>Â &lt;== Sekarang disini</li>\n</ol>\n<hr>\n<p>Â </p>\n<h2>Apa sih web/mobile elements itu?</h2>\n<p>Terjemahan ala saya sih ia adalah sebuah element adalah entitas pada aplikasi yang di render menjadi halaman web ataupun user interface pada mobile app. Jadi apapun yang dilihat oleh pengguna (termasuk yang ga keliatan sih) adalah element, seperti buttons submit, foto profile, navigasi halaman.</p>\n<p>Biasanya bentuknya berupa HTML pada web ataupun XML pada mobile apps, jadi bisa dikatakan memiliki struktur seperti tag name, attributes dan contents, termasuk kedalam hierarki posisinya.</p>\n<p>Untuk pembahasan ini saya cenderung membahas element pada web, untuk mobile apps akan dibahas lebih rinci di lain kesempatan karena perbedaan struktur source code tampilan lintas platformnya, tapi masih sangat relevan dengan mobile apps terutama mobile browser ya gaes.</p>\n<h2>Nah itu kan baru element, trus selector itu apa?</h2>\n<p>Jadi selector ataupun locator adalah sebuah bentuk query untuk mengakses element tertentu yang ada di halaman aplikasi, nah untuk website biasanya object hasil query locator ini disebut node yang terletak di Document Object Model (DOM)</p>\n<p>Perlunya selector element pada aplikasi adalah sebagai awal mula interaksi automation. Setelah selenium/appium menemukan element sesuaiÂ selector maka kamu bisa mengakses method di element itu seperti meng-click button, menginput text, ataupun mengambil text pada element tersebut.</p>\n<h2>Kenapa kok perlu banget selector?</h2>\n<p>Jadi gini, sebagai manusia yang menggunakan aplikasi tentu kita tidak perlu selector untuk berinteraksi dengan aplikasi, kita bisa menggunakan indera penglihatan untuk menjalankan aksi seperti submit form, scrollingÂ halaman, click sana sini di halaman web, tapi tidak begitu bagi test automation yang harus menerjemahkan interaksi manusia tadi ke istilah yang komputer bisa mengerti secara programatis. JadiÂ selenium/appium ga akan melihat aplikasi sebagaimana kita kita melihat tampilannya, tapiÂ ia akan melihatnya secara source code struktural seperti html/xml (catatan: tapi jaman now, sedang gandrung library/tools yang mendukung visual testing juga loh seperti <a href=\"https://applitools.com\" target=\"_blank\" rel=\"noopener noreferrer\">applitools</a>, <a href=\"https://www.mabl.com\" target=\"_blank\" rel=\"noopener noreferrer\">mabl</a>, <a href=\"http://test.ai/\" target=\"_blank\" rel=\"noopener noreferrer\">test.ai</a> dkk)</p>\n<h2>Hmm gitu ya.. Bentuk element itu seperti apa sih?</h2>\n<p>Sebagai contoh kita akan bedah element di google.co.id ya, coba pada browser chrome kamu (sama juga pada firefox ataupun safari) klik kanan pada kotak pencarian trus pilih opsi menu \"Inspect\" maka akan muncul jendela Developer tool, pada Tab aktif \"Elements\", seperti ini gambarannya: (kamu coba juga donk ah)</p>\n<figure class=\"post__image post__image--center\" ><img loading=\"lazy\" src=\"https://fachrul.id/media/posts/33/gugel.png\" sizes=\"100vw\" srcset=\"https://fachrul.id/media/posts/33/responsive/gugel-xs.png 300w ,https://fachrul.id/media/posts/33/responsive/gugel-sm.png 480w ,https://fachrul.id/media/posts/33/responsive/gugel-md.png 768w ,https://fachrul.id/media/posts/33/responsive/gugel-lg.png 1024w ,https://fachrul.id/media/posts/33/responsive/gugel-xl.png 1360w ,https://fachrul.id/media/posts/33/responsive/gugel-2xl.png 1600w\"  alt=\"\" width=\"1764\" height=\"901\">\n<figcaption >tampilan inspect element pada google chrome</figcaption>\n</figure>\n<p>Pada gambar diatas saya memberikan keterangan nomer,Â  yang akan saya jelaskan sebagai berikut:</p>\n<ol>\n<li>Pada gambar no.1 diatas, kotak pencarian adalah target element yang kita lihat, nampak ada highlight warna biru di element tersebut</li>\n<li>Ini adalah kode sumber HTML dari halaman google.co.id yang aktif pada bagian kotak pencarian yaitu tag &lt;input/&gt; beserta atribut yang melekat pada nya</li>\n<li>Apa yang disarankan oleh browser chrome jika kamu mencari element kotak pencarian ini, ada tag dengan classnya, accessibility yang ada pada element tersebut</li>\n</ol>\n<p>Nah jika kita terjemahkan pada kode automation dengan python (yang kurang lebih akan sama juga dengan selenium bindder di bahasa pemrograman lainya) nampak seperti berikut:</p>\n<div>\n<pre><code class=\"language-python line-numbers\">search_box = driver.find_element_by_name('q')\n# driver.find_element(By.NAME, 'q')  &lt;= atau alternatif bisa juga seperti ini\nsearch_box.send_keys('Belajar automation testing' + Keys.ENTER)</code></pre>\n</div>\n<p>di baris pertama saya akan membuat variable search_box yang isinya adalah element yang mengandung nama \"q\" seperti pada keterangan element search box yang saya tunjukan sebelumnya si kotak pencarian ini memiliki element &lt;input ...Â <span class=\"webkit-html-attribute-name\">name</span>=\"<span class=\"webkit-html-attribute-value\">q</span>\" ... /&gt; nah disini selector yang kita ambil adalah attribut name sama dengan \"q\", di baris kedua adalah alternatif cara penulisan kode saja</p>\n<p>di baris berikutnya, adalah proses automation test code saya untuk berinteraksi dengan element tersebut yaitu mengirimkan perintah send keys alias ketikan kataÂ Belajar automation testing pada kotak pencarian dilanjutkan dengan menekan tombol Enter</p>\n<figure class=\"post__image post__image--center\" ><img loading=\"lazy\" src=\"https://fachrul.id/media/posts/33/hasil-pencarian-google-belajar-automation.png\" sizes=\"100vw\" srcset=\"https://fachrul.id/media/posts/33/responsive/hasil-pencarian-google-belajar-automation-xs.png 300w ,https://fachrul.id/media/posts/33/responsive/hasil-pencarian-google-belajar-automation-sm.png 480w ,https://fachrul.id/media/posts/33/responsive/hasil-pencarian-google-belajar-automation-md.png 768w ,https://fachrul.id/media/posts/33/responsive/hasil-pencarian-google-belajar-automation-lg.png 1024w ,https://fachrul.id/media/posts/33/responsive/hasil-pencarian-google-belajar-automation-xl.png 1360w ,https://fachrul.id/media/posts/33/responsive/hasil-pencarian-google-belajar-automation-2xl.png 1600w\"  alt=\"\" width=\"1749\" height=\"890\">\n<figcaption >hasil pencarian kata kunci 'belajar automation' pada google search</figcaption>\n</figure>\n<p>Selector pun adakalanya bersifat tidak unik, seperti pada halaman pencarian google diatas, search result pada umumnya berupa list yang identik secara rupa dan bentuk, karena memiliki stylesheet (CSS) yang sama, hanya isi yang beda, lantas bagaimana cara kita memilih element yang kita mau agar lebih akurat akan kita diskusikan nanti ya.</p>\n<p>Bisa jadi kebutuhan test kita pun perlu mendapatkan element yang lebih dari satu juga, katakan lah contoh diatas mau kita jadikan test code seperti ini jadinya (masih di bahasa python):</p>\n<div>\n<pre><code class=\"language-python line-numbers\">results_title = driver.find_elements_by_css_selector('h3')\nassert len(results_title) &gt; 0\n</code></pre>\n<p>Â Dimana kebutuhannya memang menghitungÂ jumlah dariÂ hasil pencarian yang didapatkan dengan asusi kata kunci tersebut akan menemukan data pada halaman hasil pencarian, makanya kita memerlukan selector pada element judul pencarian yaitu &lt;h3&gt;</p>\n<p>Pada test framework yang besar umumnya mengadopsi design pattern \"<a href=\"https://www.guru99.com/page-object-model-pom-page-factory-in-selenium-ultimate-guide.html\" target=\"_blank\" rel=\"noopener noreferrer\">Page Object Model</a>\" untuk mengelola selector / locator dan interaksi di halaman tertentu, ada juga sih yang mengadopsi <a href=\"https://www.infoq.com/articles/Beyond-Page-Objects-Test-Automation-Serenity-Screenplay\" target=\"_blank\" rel=\"noopener noreferrer\">Screenplay Pattern</a> dimana sedikit ada perbedaan lokasi dimana selector disimpan pada kode automation testnya</p>\n<h2>Hmm.. trus gimana cara saya menemukan selector?</h2>\n<p>Sebenernya,Â cara untuk menentukan selector itu ada banyak, bisa dari element tag, id, class, attributes, isi text, bahkan relatif terhadap element parent/child/sibling juga bisa, bahkan yang saya sebutkan tadi bisa dikombinasikan juga loh. Wadidaw, banyak banget sih selector strategi yang bisa diterapkan. Dalam waktu dekat saya pun akan membuat video tutorial terkait berbagai penggunaan selector strategi, karena medium video lebih enak untuk langsung terjun praktek penggunaan, jadi jangan lupa <a href=\"https://www.youtube.com/channel/UCZVY3VNPkFs_iINTXEBWWgw\" target=\"_blank\" rel=\"noopener noreferrer\">subscibe disini</a> ya gaes ahaha</p>\n<p>Kita harus hati-hati juga, penulisan selector yang salah mengharuskan kita re-run automation test dan ini mubazir waktu loh. Kalau selectornya terlalu luas bisa salah dalam menentukan element yang harusnya kita dapat, kalau terlalu spesifik malah rawan breaking ketika ada yang berubah di struktur DOM nya, kalau terlalu panjang jadi sulit untuk di baca oleh yang lain. Jadi gimana donk?</p>\n<p>Prinsip yang bisa dipegang dalam membuat selector / locator strategy yang saya pegang adalahÂ <strong>Buatlah selector yang paling sederhana dalam menemukan keunikan element yang menjadi target kita</strong></p>\n<p>Â Nah biasanya urutannya seperti ini:</p>\n<ol>\n<li>Element nya punya ID (yang unik) kah? =&gt; pake ID aja</li>\n<li>CSS class nya spesifik dan cuma ada di element itu (untuk format) =&gt; pake CSS klo selector kalo gitu</li>\n<li>Masih nyampur nih klo pake strategi 1 atau 2 =&gt; yaudah kombinasikan aja kedua nya, jadi \"#id .class\" atau \".class #id\"</li>\n<li>Waduh masih ga bisa nih, saya maunya element yangÂ ke-4 dari filter 1-3 tadi =&gt; Oke tambahin posisi \"#id li:nth-of-type(4)\"</li>\n<li>Tapi saya maunya element yang mengandung text tertentu =&gt; pake xpath klo gituÂ //button[text()[contains(.,'Sebut Saja Mawar')]]</li>\n</ol>\n<p>Di urutan 5 itu udah paling rawan banget deh, selector text emang bisa, tapi klo webnya support ganti bahasa bisa jadi ambyar itu loh. Lebih baik diobrolin lagi deh sama developer untuk mulai menuliskan identitas element yang kita mau jadi lebih unik lagi agar lebih testable.</p>\n<p>Sebagai perbandingan, kita coba lihat web tokopedia, mereka memiliki element khusus yang memudahkan QA membuat locator yang stabil</p>\n<figure class=\"post__image post__image--center\" ><img loading=\"lazy\" src=\"https://fachrul.id/media/posts/33/contoh-tokopedia-element-data.jpg\" sizes=\"100vw\" srcset=\"https://fachrul.id/media/posts/33/responsive/contoh-tokopedia-element-data-xs.jpg 300w ,https://fachrul.id/media/posts/33/responsive/contoh-tokopedia-element-data-sm.jpg 480w ,https://fachrul.id/media/posts/33/responsive/contoh-tokopedia-element-data-md.jpg 768w ,https://fachrul.id/media/posts/33/responsive/contoh-tokopedia-element-data-lg.jpg 1024w ,https://fachrul.id/media/posts/33/responsive/contoh-tokopedia-element-data-xl.jpg 1360w ,https://fachrul.id/media/posts/33/responsive/contoh-tokopedia-element-data-2xl.jpg 1600w\"  alt=\"\" width=\"1734\" height=\"893\">\n<figcaption >Kode sumber Tokopedia menunjukan penggunaan data-testid sebagai penunjang selector strategy nya</figcaption>\n</figure>\n<p>Â </p>\n<p>Data-* adalah attribute baru di HTML5 dan termasuk atribut yang valid, enaknya punya atribut khusus macam ini tuh klo ada perubahan desain di UI yang biasanya akan pakai ID atau CLASS, test nya akan tetap sama dan stabil karena tidak terganggu</p>\n<p>Atau di bukalapak juga ada, bedanya disana pakai css class</p>\n<figure class=\"post__image post__image--center\" ><img loading=\"lazy\" src=\"https://fachrul.id/media/posts/33/contoh-element-qa-class-bukalapak.jpg\" sizes=\"100vw\" srcset=\"https://fachrul.id/media/posts/33/responsive/contoh-element-qa-class-bukalapak-xs.jpg 300w ,https://fachrul.id/media/posts/33/responsive/contoh-element-qa-class-bukalapak-sm.jpg 480w ,https://fachrul.id/media/posts/33/responsive/contoh-element-qa-class-bukalapak-md.jpg 768w ,https://fachrul.id/media/posts/33/responsive/contoh-element-qa-class-bukalapak-lg.jpg 1024w ,https://fachrul.id/media/posts/33/responsive/contoh-element-qa-class-bukalapak-xl.jpg 1360w ,https://fachrul.id/media/posts/33/responsive/contoh-element-qa-class-bukalapak-2xl.jpg 1600w\"  alt=\"\" width=\"1281\" height=\"888\">\n<figcaption >Kode sumberÂ Bukalapak menunjukan penggunaanÂ qa-* class sebagai penunjang selector strategy nya</figcaption>\n</figure>\n<h2>Jadi gimana sebenarnya selector / locator yang baik?</h2>\n<p>Kalau menurut saya, automation test menjadiÂ stabil, locator yang baik itu harus memenuhi kriteria seperti:</p>\n<h4>Sederhana</h4>\n</div>\n<div>Semakin pendek penulisan query selector semakin baik dan stabil, contoh nya \"#first_name\".Â  Jangan gunakan attribut atau class yang merujuk ke css formating seperti class=\"col-sm\" atau id=\"83924csdj\" yang tampak seperti di generate otomatis oleh JS lib</div>\n<div>Â </div>\n<h4>Mudah dibaca</h4>\n<div>Jangan menulis query selector yang panjang ataupun sulit dibaca seperti:</div>\n<ul>\n<li>html/body/div[1]/section/div[1]/div/div/div/div[1]/div/div/div/div/div[3]/div[1]/div/h4[1]/b</li>\n<li>//*[@id=\"wakwaw\"]//child::label//following-sibling::input[1]</li>\n</ul>\n<div>Â </div>\n<h4>Semantic</h4>\n<div>ArtinyaÂ query yang dipilih harus sesuai kan dengan maksud element tersebut artinya lebih baik menuliskan selector seperti ini \"input#kampus\" daripada hanya \"#kampus\" agar lebih jelas lagi saat membaca kode yang di maksud id=\"kampus\" adalah sebuah element input bukan div ataupun button</div>\n<div>Â </div>\n<h2>Jadi Kesimpulannya</h2>\n<div>Selector strategy yang baik berperan besar terhadap stabilitas automation code kamu, jika aplikasi yang akan di test tidak memungkinkan membuat selector yang baik, artinya sudah waktunya mengangkat issue testablility aplikasi dengan developer ataupun stakeholder agar test menjadi lebih stabil maka diperlukan sedikit tunning lagi pada kode sumber aplikasinya<br>\n<h2>Â Rujukan lebih lanjut</h2>\n<ul>\n<li><a href=\"https://blog.mozilla.org/fxtesteng/2013/09/26/writing-reliable-locators-for-selenium-and-webdriver-tests/\">https://blog.mozilla.org/fxtesteng/2013/09/26/writing-reliable-locators-for-selenium-and-webdriver-tests/</a>Â </li>\n<li><a href=\"https://www.guru99.com/locators-in-selenium-ide.html\">https://www.guru99.com/locators-in-selenium-ide.html</a>Â </li>\n<li><a href=\"https://www.guru99.com/xpath-selenium.html\">https://www.guru99.com/xpath-selenium.html</a></li>\n<li><a href=\"https://selenium-python.readthedocs.io/locating-elements.html\">https://selenium-python.readthedocs.io/locating-elements.html</a></li>\n<li><a href=\"https://gs.statcounter.com/browser-market-share\">https://gs.statcounter.com/browser-market-share</a>Â Ternyata browser chrome masih paling banyak dipakai oleh orang seluruh dunia</li>\n</ul>\n<p>Â </p>\n</div>",
            "image": "https://fachrul.id/media/posts/33/gugel-selector.png",
            "author": {
                "name": "Fachrul Choliluddin"
            },
            "tags": [
                   "tutorials",
                   "automation-python",
                   "Tester Gadungan"
            ],
            "date_published": "2020-05-14T08:25:31+07:00",
            "date_modified": "2020-05-19T23:58:24+07:00"
        },
        {
            "id": "https://fachrul.id/memulai-automation-test-selenium-python-bagian-1/",
            "url": "https://fachrul.id/memulai-automation-test-selenium-python-bagian-1/",
            "title": "Memulai Automation Test Selenium + Python (bagian 1)",
            "summary": "Hi Kawan, Sesuai dengan post sebelumnya, pada kesempatan kali ini saya akan berbagi resep tentang membuat automation test framework dengan menggunakan bahasa pemrograman python + selenium, jadi di akhir sesi kamu pasti bisa membuat otomatisasi pengujian pada browser Google Chrome ya (kalau setup nya benar)&hellip;",
            "content_html": "<p>Hi Kawan,</p>\n<p>Sesuai dengan post sebelumnya, pada kesempatan kali ini saya akan berbagi resep tentang membuat automation test framework dengan menggunakan bahasa pemrograman python + selenium, jadi di akhir sesi kamu pasti bisa membuat otomatisasi pengujian pada browser Google Chrome ya (kalau setup nya benar) ðŸ˜…</p>\n<h3>Kenapa membuat tutorial automation test dengan python?</h3>\n<p>Tujuannya saya buat tutorial kali ini adalah untuk memperkaya khasanah tutorial bahasa Indonesia pada automation test menggunakan bahasa pemrograman python, dimana mayoritas hasil penelusuran yang ada di gugle menggunakan bahasa pemrograman java ataupun javascript.</p>\n<hr>\n<p>Post ini merupakan rangkaian post mengenai membuat automationt test dengan python</p>\n<h4>Daftar isinya:</h4>\n<ol>\n<li><a href=\"https://fachrul.id/mau-belajar-automation-test-dengan-python-mulai-dari-mana/\" target=\"_blank\" rel=\"noopener noreferrer\">Belajar Python dari dasar</a></li>\n<li><a href=\"https://fachrul.id/belajar-pytest-framework-1/\" target=\"_blank\" rel=\"noopener noreferrer\">Memahami cara kerja Pytest (bagian 1)</a>Â </li>\n<li><a href=\"https://fachrul.id/memulai-automation-test-selenium-python-bagian-1/\" target=\"_blank\" rel=\"noopener noreferrer\">Mulai membuat automation test dengan Selenium</a>Â Â &lt;== Sekarang disini</li>\n<li><a href=\"https://fachrul.id/selector-locator-strategy-yang-baik/\" target=\"_blank\" rel=\"noopener noreferrer\">Menemukan Element dengan locator strategi yang baik</a>Â </li>\n</ol>\n<hr>\n<p>Â </p>\n<h2>Yuk kita mulai!!!</h2>\n<p>Sebentar.. sebentar.. bentuk tutorial yang akan saya share adalah perpaduan dari video tutorial dan blog post, jadi kedua medium pembelajaran ini akan saling melengkapi, untuk video bisa diakses disini:</p>\n<div class=\"post__iframe\"><iframe loading=\"lazy\" width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/dApgg02293I\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"allowfullscreen\"></iframe></div>\n<p>Lalu catatan pada video akan merujuk pada postingan disini</p>\n<h2>Tools yang digunakan</h2>\n<p>Hal pertama yang kita perlukan adalah interpreter kode python sudah terinstall di laptop/komputer kamu, terlepas dari sistem operasi apapun (windows/macOS/linux) saya asumsikan command `python atau python3` bisa dijalankan di terminal/command line kamu ya, jika belum, silahkan merujuk ke post <a href=\"https://fachrul.id/mau-belajar-automation-test-dengan-python-mulai-dari-mana/\" target=\"_blank\" rel=\"noopener noreferrer\">pendahuluan python saya sebelumnya disini</a></p>\n<h3>Kode Editor</h3>\n<p>Editor python ada banyak, dimulai dari yang ada di terminal seperti vim, kode editor ringan dan lengkap seperti:</p>\n<ol>\n<li><a href=\"https://www.sublimetext.com\" target=\"_blank\" rel=\"noopener noreferrer\">sublime</a></li>\n<li><a href=\"https://code.visualstudio.com\" target=\"_blank\" rel=\"noopener noreferrer\">visual code</a></li>\n<li><a href=\"https://atom.io\" target=\"_blank\" rel=\"noopener noreferrer\">atom</a></li>\n<li>ataupun IDE yang kumplit seperti <a href=\"https://www.jetbrains.com/education/download/\" target=\"_blank\" rel=\"noopener noreferrer\">PyCharm Edu</a>.</li>\n</ol>\n<p>Sebagai pendamping dalam menulis kode python saya biasanya akan menginstal pula <a href=\"http://kite.com\" target=\"_blank\" rel=\"noopener noreferrer\">Kite</a>Â sebagai tambahan autocomplete dan documentation di local tapi ini opsional sih, ga di install juga gapapa (ukuran file nya gede sih ahaha)</p>\n<h3>Chromedriver</h3>\n<p>Bisa diunduh di :Â <a href=\"https://chromedriver.chromium.org/downloads\">https://chromedriver.chromium.org/downloads</a>Â </p>\n<p>Lalu tambahkan directory binary chromedriver ke sistem path kamu, (windows bisa taruh chromedriver.exe di folder c:\\windows\\System32 klo linux bisa tambahkan di path via ~/.bash_profile atau ~/.zshrc kamu. Atau klo macOS bisa lebih mudah tinggal jalankan perintah berikut di terminalÂ <code class=\"language-shell\">brew cask install chromedriver</code></p>\n<h3>Â Python Packaging Tools</h3>\n<p>Salah satu best practice pemrograman python adalah memiliki packaging tools yang menjadi depedency management library python agar tidak saling bertabrakan, jadi diperlukan virtual environment, kita akan menggunakan `pipenv` untuk itu, jalankan perintah berikut di terminal</p>\n<pre><code class=\"language-shell-session\"><span class=\"gp\">$ pip install pipenv<br></span></code></pre>\n<p>atau klo gagal karena km menggunakan python3 bisa menggunakan command `pip3 install pipenv`Â </p>\n<p>Nah yuk kita mulai kodingnya.. Silahkan liat videonya ya</p>\n<p>Skenario test yang dijalankan</p>\n<pre><code class=\"language-gherkin\">Scenario: Search Profile in Google</code><br><code class=\"language-gherkin\">Given I am in google home page</code><br><code class=\"language-gherkin\">When I search for \"Fachrul Choliluddin\"</code><br><code class=\"language-gherkin\">Then I should see search result of \"Fachrul Choliluddin\"</code></pre>\n<h2>Apa itu Selector?</h2>\n<p><em>Selector</em>Â adalah sebuah format yang digunakan oleh library sepertiÂ <em>Selenium</em>Â danÂ <em>Capybara</em>Â untuk menemukan elemen pada web seperti gambar, tulisan, tombol, dan sebagainya. Untuk bisa menggunakanÂ <em>Selector</em>Â akan lebih baik jika anda mengenal HTML terlebih dahulu. Kamu bisa lihat materinyaÂ <a href=\"https://www.w3schools.com/html/\" rel=\"nofollow\">disini</a>.</p>\n<h2>Apa itu CSS Selector?</h2>\n<p><em>CSS</em>Â adalah sebuah notasi (<em>selector</em>) yang digunakan untuk menemukan elemen tertentu pada halaman web. CSS sendiri digunakan oleh web developer untuk memberikanÂ <em>style</em>Â pada halaman web seperti warna, besar dan lebar gambar, bentuk tombol, dan berbagai fungsi lainnya. Properti-properti pada CSS ini bisa kita manfaatkan untuk mendeteksi sebuah elemen pada web.</p>\n<h2>Cara Menggunakan CSS selector</h2>\n<p>Sebenarnya kita sudah menggunakan syntax CSS pada lesson sebelumnya. YaituÂ <code>#login_link</code>. Dimana kita memanfaatkan elemenÂ <code>id</code>Â pada tombol login untuk mendeteksi keberadaan tombol login.</p>\n<p>Materi mengenai CSS sendiri sangat luas, sehingga kamu bisa baca mengenai CSS lebih lanjutÂ <a href=\"https://www.w3schools.com/css/\" rel=\"nofollow\">disini</a>.</p>\n<h2>Apa itu XPath?</h2>\n<p><em>XPath</em>Â adalah sebuah notasi (<em>selector</em>) yang digunakan untuk menemukan elemen tertentu pada halaman web.Â <em>Xpath</em>Â memiliki bentuk syntax yang lebih fleksibel jika dibandingkan dengan CSS. Sehingga lebih umum digunakan untuk mencari elemen web yang tidak bisa dicari olehÂ <em>selector</em>Â CSS.</p>\n<h2>Mengapa Memakai XPath?</h2>\n<p>Misalkan saya punya halaman web dengan format HTML seperti ini ...</p>\n<div class=\"highlight highlight-text-html-basic\">\n<pre>&lt;<span class=\"pl-ent\">div</span> <span class=\"pl-e\">class</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>parent<span class=\"pl-pds\">\"</span></span>&gt;\n    &lt;<span class=\"pl-ent\">h2</span>&gt;Ayam&lt;/<span class=\"pl-ent\">h2</span>&gt;\n    &lt;<span class=\"pl-ent\">p</span>&gt;Ayam adalah salah satu unggas yang bisa dimakan&lt;/<span class=\"pl-ent\">p</span>&gt;\n    &lt;<span class=\"pl-ent\">div</span> <span class=\"pl-e\">class</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>child<span class=\"pl-pds\">\"</span></span>&gt;\n        &lt;<span class=\"pl-ent\">h3</span>&gt;Gambar Ayam&lt;/<span class=\"pl-ent\">h3</span>&gt;\n        &lt;<span class=\"pl-ent\">img</span> <span class=\"pl-e\">id</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>ayam_image<span class=\"pl-pds\">\"</span></span> <span class=\"pl-e\">src</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>ayam.jpg<span class=\"pl-pds\">\"</span></span> <span class=\"pl-e\">alt</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Smiley face<span class=\"pl-pds\">\"</span></span> <span class=\"pl-e\">height</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>42<span class=\"pl-pds\">\"</span></span> <span class=\"pl-e\">width</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>42<span class=\"pl-pds\">\"</span></span>&gt;\n        &lt;<span class=\"pl-ent\">p</span>&gt;Ini adalah gambar ayam&lt;/<span class=\"pl-ent\">p</span>&gt;\n    &lt;/<span class=\"pl-ent\">div</span>&gt;\n&lt;/<span class=\"pl-ent\">div</span>&gt;</pre>\n</div>\n<p>Anda bisa menggunakanÂ <em>selector</em>Â CSS untuk mengambil elemen image dengan cara seperti ini.</p>\n<div class=\"highlight highlight-source-ruby\">\n<pre>driver.find_element_by_css_selector(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>#ayam_image<span class=\"pl-pds\">'</span></span>)</pre>\n</div>\n<p>Atau menggunakan XPath dengan cara berikut</p>\n<div class=\"highlight highlight-source-ruby\">\n<pre>driver.find_element_xpath(<span class=\"pl-pds\">'</span>//img<span class=\"pl-pds\">'</span>)</pre>\n</div>\n<p>Atau</p>\n<div class=\"highlight highlight-source-ruby\">\n<pre>driver.find_element(by=By.XPATH, value=<span class=\"pl-pds\">'</span>//*[@id=\"ayam_image\"]<span class=\"pl-pds\">'</span>)</pre>\n</div>\n<p>Â </p>\n<div class=\"highlight highlight-source-ruby\">Â </div>\n<p>Dan sebagainya ...</p>\n<p>Intinya,Â <em>XPath</em>Â menawarkan banyak metode alternatif untuk mencari suatu elemen pada halaman web.</p>\n<p>Materi mengenaiÂ <em>XPath</em>Â sendiri sangat luas, sehingga kamu bisa baca mengenai CSS lebih lanjutÂ <a href=\"https://www.w3schools.com/xml/xpath_intro.asp\" rel=\"nofollow\">disini</a>.</p>\n<h2>Perbandingan CSS vs xPath</h2>\n<table>\n<thead>\n<tr>\n<th>XPath</th>\n<th>Css</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>//div/a</td>\n<td>div &gt; a</td>\n</tr>\n<tr>\n<td>//div//a</td>\n<td>div a</td>\n</tr>\n<tr>\n<td>//div[@id='example']</td>\n<td>#example</td>\n</tr>\n<tr>\n<td>//div[@class='example']</td>\n<td>.example</td>\n</tr>\n<tr>\n<td>//input[@id='username']/following-sibling::input[1]</td>\n<td>#username + input</td>\n</tr>\n<tr>\n<td>//input[@name='username']</td>\n<td>input[name='username']</td>\n</tr>\n<tr>\n<td>//input[@name='login'and @type='submit']</td>\n<td>input[name='login'][type='submit']</td>\n</tr>\n<tr>\n<td>a[contains(text(), 'Log out')]</td>\n<td>a:contains('Log Out')</td>\n</tr>\n<tr>\n<td>Â </td>\n<td>#recordlist li:nth-of-type(4)</td>\n</tr>\n<tr>\n<td>Â </td>\n<td>Â a[id^='id_prefix_']</td>\n</tr>\n<tr>\n<td>Â </td>\n<td>Â a[id$='_id_sufix']</td>\n</tr>\n<tr>\n<td>Â </td>\n<td>Â a[id*='id_pattern']</td>\n</tr>\n<tr>\n<td>Â </td>\n<td>Â </td>\n</tr>\n</tbody>\n</table>\n<p>Â </p>\n<p>Command yang dijalankan:<br><br></p>\n<table style=\"width: 681px;\">\n<tbody>\n<tr>\n<td style=\"width: 280.984px;\">âžœ pipenv --three</td>\n<td style=\"width: 399.016px;\">Inisiasi directory sebagai virtual environment yang baru dengan python3</td>\n</tr>\n<tr>\n<td style=\"width: 280.984px;\">âžœ pipenv shell</td>\n<td style=\"width: 399.016px;\">mengaktivasi virtual environment</td>\n</tr>\n<tr>\n<td style=\"width: 280.984px;\">âžœ pip freeze</td>\n<td style=\"width: 399.016px;\">melihat daftar isi library yang sudah di terpasang di virtual environmentÂ </td>\n</tr>\n<tr>\n<td style=\"width: 280.984px;\">âžœ pipenv install selenium</td>\n<td style=\"width: 399.016px;\">memasang library selenium</td>\n</tr>\n<tr>\n<td style=\"width: 280.984px;\">âžœ pipenv install pytest</td>\n<td style=\"width: 399.016px;\">memasang library pytest</td>\n</tr>\n<tr>\n<td style=\"width: 280.984px;\">âžœ chromedriver -v</td>\n<td style=\"width: 399.016px;\">cek versi chromedriver</td>\n</tr>\n<tr>\n<td style=\"width: 280.984px;\">âžœ python test_googling.py</td>\n<td style=\"width: 399.016px;\">menjalankan kode python</td>\n</tr>\n<tr>\n<td style=\"width: 280.984px;\">âžœ pytest</td>\n<td style=\"width: 399.016px;\">menjalankan module pytest di directory aktif</td>\n</tr>\n<tr>\n<td style=\"width: 280.984px;\">âžœ pytest -s</td>\n<td style=\"width: 399.016px;\">menjalankan pytest disertai stdout untuk print console</td>\n</tr>\n</tbody>\n</table>\n<p>Â Link terkait:</p>\n<table style=\"width: 681px;\">\n<tbody>\n<tr>\n<td style=\"width: 339.984px;\"><a href=\"https://selenium-python.readthedocs.io\">https://selenium-python.readthedocs.io</a>Â </td>\n<td style=\"width: 340.016px;\">DokumentasiÂ library selenium pada python</td>\n</tr>\n<tr>\n<td style=\"width: 339.984px;\"><a href=\"https://docs.pytest.org/en/latest/\">https://docs.pytest.org/en/latest/</a>Â </td>\n<td style=\"width: 340.016px;\">Dokumentasi pytestÂ </td>\n</tr>\n<tr>\n<td style=\"width: 339.984px;\">Â </td>\n<td style=\"width: 340.016px;\">Â </td>\n</tr>\n</tbody>\n</table>\n<p>Â </p>\n<br>\n<p>Â </p>\n<p>Â </p>\n<p>Â </p>",
            "author": {
                "name": "Fachrul Choliluddin"
            },
            "tags": [
                   "tutorials",
                   "automation-python"
            ],
            "date_published": "2020-05-12T22:03:25+07:00",
            "date_modified": "2020-05-19T23:59:00+07:00"
        },
        {
            "id": "https://fachrul.id/mau-belajar-automation-test-dengan-python-mulai-dari-mana/",
            "url": "https://fachrul.id/mau-belajar-automation-test-dengan-python-mulai-dari-mana/",
            "title": "Mau Belajar Automation Test dengan Python, Mulai Dari Mana?",
            "summary": "Halo Kawan! Dikesempatan kali ini saya akan bahas hal teknis yang berhubungan dengan pekerjaan sebagai Software Quality Assurance / Test Engineer yaitu membuat sebuah Test Automation Suite,Â saya akan membagikan pengetahuan dan pengalaman saya dalam merancang Automation test framework dengan python. Saya akan buat tulisan berseri&hellip;",
            "content_html": "<p>Halo Kawan!</p>\n<p>Dikesempatan kali ini saya akan bahas hal teknis yang berhubungan dengan pekerjaan sebagai <em>Software Quality Assurance</em> / <em>Test Engineer</em> yaitu membuat sebuah <em>Test Automation Suite</em>,Â saya akan membagikan pengetahuan dan pengalaman saya dalam merancang Automation test framework dengan python.</p>\n<p>Saya akan buat tulisan berseri terkait pemrograman <em>automation test</em> dengan python, nah sebagai permulaan, pada tulisan ini saya akan share sumber belajar python dari dasar yang dulu saya pelajari, semoga bisa berguna buat yang baru berkenalan dengan bahasa python ya.</p>\n<p>Nanti setelah dasar pemrograman python dikuasai, barulah kita akan langsung koding automation nya ya</p>\n<h2>Kenapa Python?</h2>\n<p>Karena menulis automation code dengan python menurut saya sangat mudah sekali, dan secara bahasa pemrograman, python itu termasuk mudah untuk dipelajari dan code yang dihasilkan sangat enak untuk dibaca, jadi sebagai entry barrier nya rendah bagi seorang QA manual untuk mulai terjun di koding automation (walaupun tools lain yang ga perlu koding juga ada sih ðŸ¤£)</p>\n<h2>Yuk kita Mulai Belajar Pemrograman Python</h2>\n<p>Walaupun ingin, sepertinya saya kurang mahir dalam menjelaskan pemrograman python dengan baik, karena saya sendiri pun tidak terlalu mahir, hehe tapi santai saja, keahlian koding yang dibutuhkan untuk menulis automation test itu tidak terlalu kompleks kok, jadi bisa langsung sambil di praktekan ya.</p>\n<p>Ok, berikut ini adalah sumber pembelajaran python yang sudah saya coba dan menjadi rekomendasi utama, terutama karena gratis dan mudah dipahami,Â saya bagi kedalam beberapa kategori ya sesuai dengan gaya belajar kita yang berbeda, ada yang sukanya audio visual, ada yang lebih suka belajar dengan membaca, atau ada yang paling seneng kalo langsung praktek.</p>\n<h2>Belajar Python Melalui Video</h2>\n<p>Hari gini banyak video tutorial gratis di youtube, saking banyaknya mungkin kalian akan menemukan video tutorial yang jumlahnya sangat banyak, berikut ini adalah beberapa video yang sudah saya tonton dan isinya sangat bermutu, jadi akan menghemat waktu kalian memilih video mana yang akan ditonton ya</p>\n<div class=\"post__iframe\"><iframe loading=\"lazy\" width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/zpeWE1utrWM\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"allowfullscreen\"></iframe></div>\n<p>dengan playlist lengkap dari sekolah koding di:</p>\n<ul>\n<li><a href=\"https://www.youtube.com/playlist?list=PLCZlgfAG0GXDc9Wcsi2fUn0pAr41GDL6m\" target=\"_blank\" rel=\"noopener noreferrer\">Tutorial Python Bahasa Indonesia</a></li>\n<li><a href=\"https://www.youtube.com/playlist?list=PLCZlgfAG0GXC-N-MlNJoG3Jh8nhXHTT6s\" target=\"_blank\" rel=\"noopener noreferrer\">Belajar OOP (object oriented programming) dengan Python</a></li>\n</ul>\n<p>Disini juga lumayan lengkap dari pengenalan pemrograman bahkan</p>\n<div class=\"post__iframe\"><iframe loading=\"lazy\" width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/fBkeaYZ99iY\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"allowfullscreen\"></iframe></div>Â </p>\n<p>Dan aplikasi pembelajaran koding ini juga bagus loh</p>\n<figure class=\"post__image post__image\" ><img loading=\"lazy\" src=\"https://fachrul.id/media/posts/31/belajar-koding-python-di-kode-id.png\" sizes=\"100vw\" srcset=\"https://fachrul.id/media/posts/31/responsive/belajar-koding-python-di-kode-id-xs.png 300w ,https://fachrul.id/media/posts/31/responsive/belajar-koding-python-di-kode-id-sm.png 480w ,https://fachrul.id/media/posts/31/responsive/belajar-koding-python-di-kode-id-md.png 768w ,https://fachrul.id/media/posts/31/responsive/belajar-koding-python-di-kode-id-lg.png 1024w ,https://fachrul.id/media/posts/31/responsive/belajar-koding-python-di-kode-id-xl.png 1360w ,https://fachrul.id/media/posts/31/responsive/belajar-koding-python-di-kode-id-2xl.png 1600w\"  alt=\"\" width=\"800\" height=\"863\">\n<figcaption >Kelas pemrograman gratis dari Kode.id</figcaption>\n</figure>\n<p>Dengan link nya sebagai berikut <a href=\"https://kode.id/kelas/pengenalan-bahasa-pemrograman-python/\" target=\"_blank\" rel=\"noopener noreferrer\">https://kode.id/kelas/pengenalan-bahasa-pemrograman-python/</a>Â ,Â bisa diakses melalui browser komputer ataupun aplikasi mobile nya juga lohÂ </p>\n<h2>Belajar Python Melalui Buku</h2>\n<p>Berikut ini adalah sumber belajar bacaan (buku ataupun web, ya kan dibaca juga ðŸ˜…)</p>\n<h3>BelajarPython.com</h3>\n<p>Kamu bisa akses di halamanÂ <a href=\"https://belajarpython.com/tutorial/apa-itu-python\" target=\"_blank\" rel=\"noopener noreferrer\">https://belajarpython.com</a>Â disana kamu bisa menemukan tutorial python dengan pembahasan yang mudah dimengerti</p>\n<figure class=\"post__image--center\"><img loading=\"lazy\"  src=\"https://fachrul.id/media/posts/31/Screen-Shot-2020-05-07-at-23.20.31.png\" sizes=\"100vw\" srcset=\"https://fachrul.id/media/posts/31/responsive/Screen-Shot-2020-05-07-at-23.20.31-xs.png 300w ,https://fachrul.id/media/posts/31/responsive/Screen-Shot-2020-05-07-at-23.20.31-sm.png 480w ,https://fachrul.id/media/posts/31/responsive/Screen-Shot-2020-05-07-at-23.20.31-md.png 768w ,https://fachrul.id/media/posts/31/responsive/Screen-Shot-2020-05-07-at-23.20.31-lg.png 1024w ,https://fachrul.id/media/posts/31/responsive/Screen-Shot-2020-05-07-at-23.20.31-xl.png 1360w ,https://fachrul.id/media/posts/31/responsive/Screen-Shot-2020-05-07-at-23.20.31-2xl.png 1600w\"  alt=\"\" width=\"750\" height=\"974\"></figure>\n<h3>Workshop Python 101</h3>\n<p>Modul untuk workshop python, bisa kamu akses diÂ <a href=\"https://sakti.github.io/python101/index.html\">https://sakti.github.io/python101/index.html</a> kamu ikutin sendiri kok, tapi bahasannya menggunakan python versi 2.7 dimana sekarang ini sudah ketinggalan (walau masih bisa) dan direkomendasikan untuk menggunakan python versi 3Â </p>\n<h3>GoalKicker</h3>\n<p>Buku ini salah satu rekomendasi saya untuk belajar python dengan cepat, karena disana ga terlalu banyak basa-basi dan langsung ditunjukan contoh kode nya, bisa diunduh di link <a href=\"https://goalkicker.com/PythonBook/\" target=\"_blank\" rel=\"noopener noreferrer\">https://goalkicker.com/PythonBook/</a></p>\n<figure class=\"post__image--center\"><a href=\"https://goalkicker.com/PythonBook/\"><img loading=\"lazy\"  src=\"https://fachrul.id/media/posts/31/Screen-Shot-2020-05-07-at-23.14.57.png\" sizes=\"100vw\" srcset=\"https://fachrul.id/media/posts/31/responsive/Screen-Shot-2020-05-07-at-23.14.57-xs.png 300w ,https://fachrul.id/media/posts/31/responsive/Screen-Shot-2020-05-07-at-23.14.57-sm.png 480w ,https://fachrul.id/media/posts/31/responsive/Screen-Shot-2020-05-07-at-23.14.57-md.png 768w ,https://fachrul.id/media/posts/31/responsive/Screen-Shot-2020-05-07-at-23.14.57-lg.png 1024w ,https://fachrul.id/media/posts/31/responsive/Screen-Shot-2020-05-07-at-23.14.57-xl.png 1360w ,https://fachrul.id/media/posts/31/responsive/Screen-Shot-2020-05-07-at-23.14.57-2xl.png 1600w\"  width=\"340\" height=\"490\"></figure></a></p>\n<p>Buku python lainnya bisa diakses di:Â <a href=\"https://pythonbooks.revolunet.com/\">https://pythonbooks.revolunet.com/</a></p>\n<h2>Â </h2>\n<h2>Belajar Python Dengan Praktek</h2>\n<p>Nah bagi kalian yang pengennya langsung praktek ngerjain kode bisa dicoba cara berikut ini</p>\n<h3>Python Koans</h3>\n<p>Nah Koans adalah metode pembelajaran interaktif dengan langsung menjalankan kodenya, jadi kamu tinggal clone repositoryÂ Â <a href=\"https://github.com/gregmalcolm/python_koans\">https://github.com/gregmalcolm/python_koans</a>Â lalu jalankan kodenya, dan perbaiki yang salah, bisa di baca juga struktur kodenya langsung</p>\n<h3>SoloLearn</h3>\n<p>Enaknya belajar di soloLearn adalah bisa dimana aja, web bisa mobile phone juga bisa, bentuknya seperti kuis interaktifÂ <a href=\"https://www.sololearn.com/Course/Python/\">https://www.sololearn.com/Course/Python/</a></p>\n<h4>Â PyCharm Edu</h4>\n<p>Ini favorit saya, karena embeded di IDE nya python yaitu PyCharm, kita tinggal mengaktifkannya dari <a href=\"https://www.jetbrains.com/education/download/\" target=\"_blank\" rel=\"noopener noreferrer\">Pycharm Edu</a> (ini IDE python gratis loh, dan sangat mumpuni) silahkan unduh Pycharm Edu gratis disini <a href=\"https://www.jetbrains.com/education/download/\" target=\"_blank\" rel=\"noopener noreferrer\">https://www.jetbrains.com/education/download/</a>Â lalu install \"EduTools Plugin\" nya juga ya untuk mengaktifkan menu Academy seperti berikut</p>\n<figure class=\"post__image--center\"><img loading=\"lazy\"  src=\"https://fachrul.id/media/posts/31/Screen-Shot-2020-05-07-at-23.47.10.png\" sizes=\"100vw\" srcset=\"https://fachrul.id/media/posts/31/responsive/Screen-Shot-2020-05-07-at-23.47.10-xs.png 300w ,https://fachrul.id/media/posts/31/responsive/Screen-Shot-2020-05-07-at-23.47.10-sm.png 480w ,https://fachrul.id/media/posts/31/responsive/Screen-Shot-2020-05-07-at-23.47.10-md.png 768w ,https://fachrul.id/media/posts/31/responsive/Screen-Shot-2020-05-07-at-23.47.10-lg.png 1024w ,https://fachrul.id/media/posts/31/responsive/Screen-Shot-2020-05-07-at-23.47.10-xl.png 1360w ,https://fachrul.id/media/posts/31/responsive/Screen-Shot-2020-05-07-at-23.47.10-2xl.png 1600w\"  width=\"600\" height=\"996\"></figure>\n<p>Info lebih lanjut bisa cekidot ini yaÂ <a href=\"https://hyperskill.org/onboarding?track=python\" target=\"_blank\" rel=\"noopener noreferrer\">https://hyperskill.org/onboarding?track=python</a></p>\n<p>Â </p>\n<h2>Penutup</h2>\n<p>Ternyata lumayan banyak juga ya sumber belajar python nya, semoga kalian bisa mengikuti salah satunya dengan tuntas ya ðŸ¤£</p>\n<p>Oke di kesempatan berikutnya kita akan langsung mulai belajar automation test dengan python nya ya, untuk sementara ini mulailah dengan memahami bahasa pemrograman Python.. Sekian</p>\n<hr>\n<p>Post ini merupakan rangkaian post mengenai membuat automationt test dengan python</p>\n<h4>Daftar isinya:</h4>\n<ol>\n<li><a href=\"https://fachrul.id/mau-belajar-automation-test-dengan-python-mulai-dari-mana/\" target=\"_blank\" rel=\"noopener noreferrer\">Belajar Python dari dasar</a>Â &lt;== Sekarang disini</li>\n<li><a href=\"https://fachrul.id/belajar-pytest-framework-1/\" target=\"_blank\" rel=\"noopener noreferrer\">Memahami cara kerja Pytest (bagian 1)</a>Â </li>\n<li><a href=\"https://fachrul.id/memulai-automation-test-selenium-python-bagian-1/\" target=\"_blank\" rel=\"noopener noreferrer\">Mulai membuat automation test dengan Selenium</a>Â Â </li>\n<li><a href=\"https://fachrul.id/selector-locator-strategy-yang-baik/\" target=\"_blank\" rel=\"noopener noreferrer\">Menemukan Element dengan locator strategi yang baik</a>Â </li>\n</ol>\n<hr>\n<p>Â </p>",
            "image": "https://fachrul.id/media/posts/31/belajar-python.jpg",
            "author": {
                "name": "Fachrul Choliluddin"
            },
            "tags": [
                   "tutorials",
                   "automation-python",
                   "Tester Gadungan"
            ],
            "date_published": "2020-05-08T00:07:20+07:00",
            "date_modified": "2020-05-19T23:59:51+07:00"
        }
    ]
}
