{
    "version": "https://jsonfeed.org/version/1",
    "title": "Celotehan Quality Software Development Engineer in Test - Agile Testing, Selenium, Appium, Ruby",
    "description": "",
    "home_page_url": "https://fachrul.id",
    "feed_url": "https://fachrul.id/feed.json",
    "user_comment": "",
    "icon": "https://fachrul.id/media/website/profile_fachrul_paperprint_300.jpg",
    "author": {
        "name": "Fachrul Choliluddin"
    },
    "items": [
        {
            "id": "https://fachrul.id/scrum-bagi-muslim/",
            "url": "https://fachrul.id/scrum-bagi-muslim/",
            "title": "Kerangka Kerja Scrum dalam Keseharian Muslim",
            "summary": "Bismillah, Ramadhan 1440 H akan segera berakhir, petang tadi pun sudah diputuskan oleh pemerintah bahwa 1 syawal akan jatuh pada esok lusa. Malam-malam kemarin saya sempat merenungi satu hal, tentang bagaimana kita memanfaatkan waktu sebagai modal berharga yang kita miliki untuk ditukar dengan hal-hal lain. Bisa&hellip;",
            "content_html": "<p>Bismillah,</p>\n<p>Ramadhan 1440 H akan segera berakhir, petang tadi pun sudah diputuskan oleh pemerintah bahwa 1 syawal akan jatuh pada esok lusa. Malam-malam kemarin saya sempat merenungi satu hal, tentang bagaimana kita memanfaatkan waktu sebagai modal berharga yang kita miliki untuk ditukar dengan hal-hal lain. Bisa saja kita habiskan waktu untuk hal sia-sia, karena kita merasa waktu kita melimpah, toh esok kan masih ada, tapi benarkah seperti itu? tentu saja tidak, siapa yang bisa menjamin esok kita masih memiliki umur. Maka dari itu kiranya kita perlu memikirkan strategi bagaimana memanfaatkan sumber daya waktu yang sangat terbatas ini, karena waktu adalah modal awal, dia belum menjadi uang sampai dengan kita menukarkannya untuk hal berharga.</p>\n<p>Diperjalanan pulang kantor, Jakarta-Bekasi saya terfikir dengan pemanfaatan Scrum tidak hanya dalam project life cycle tapi bisa pula sebagai kerangka kerja kehidupan sehari-hari sehingga bisa menghabiskan waktu dengan lebih efisien, khususnya bagi seorang muslim. Oia sebagai sangkalan (disclaimer), saya bukanlah seorang scrum master, atau seorang yang paham betul soal agama islam, saya hanya praktisi keduanya dan saya melihat beberapa kemiripan diantara keduanya.</p>\n<hr>\n<h2 id=\"mcetoc_1dceu3con0\">Durasi Sprint</h2>\n<p>Sprint dalam scrum adalah batasan (durasi) waktu pengerjaan suatu fitur (proyek) sampai hasil pekerjaan itu dirasakan value sesungguhnya bagi pengguna, durasi waktu sprint ini umumnya pendek sekali untuk ukuran pengerjaan proyek, sekitar 2 minggu sampai dengan maksimal 30 hari kalender dan tidak ada batasan minimum tergantung dari seberapa besar komitmen yang diambil oleh tim pengembang, dan ini dilakukan secara berulang dengan berkesinambungan (iterasi).</p>\n<p>Dalam kehidupan muslim, iterasi ini bisa jadi lebih pendek lagi, yaitu satu hari saja (24 jam), mengingat salah satu ucapan baginda Nabi Muhammad SAW bahwa kita harus meningkatkan diri dari hari ke hari, yang sesuai dengan output sprint untuk meningkatkan value setiap iterasi:</p>\n<blockquote>\n<p>Barangsiapa yang dua harinya (hari ini dan kemarin) sama maka ia telah merugi, barangsiapa yang harinya lebih jelek dari hari sebelumnya, maka ia tergolong orang-orang yang terlaknat.</p>\n</blockquote>\n<p>Maka dari itu sangat relevan ketika fase sprint ini kita harus berlari kencang dengan jarak pendek dengan tujuan hari ini kita yang harus menjadi lebih baik lagi (dari sisi ibadah, ilmu, dsb) dari hari kemarin</p>\n<hr>\n<h2 id=\"mcetoc_1dcets3cc0\">Sprint Planining</h2>\n<p>Ini adalah ceremony dua pekan yang biasanya saya lakukan bersama rekan kerja ketika akan memulai sebuah sprint , tujuan utama dilakukan sprint planning adalah menjawab pertanyaan: Apa yang harus diselesaikan selama sprint nanti? lalu Bagaimana cara kita menyelesaikan hal tersebut?</p>\n<p>Karena dalam kalender islam, pergantian hari bukan terjadi pada pukul 00.00 tetapi waktu setelah matahari terbenam (magrib) lah yang menjadi acuan batasan hari karena kalender hijriyah menggunakan peredaran bulan sebagai acuan (sumber: <a href=\"https://id.wikipedia.org/wiki/Kalender_Hijriyah\">wikipedia</a>), maka dari itu kita akan mulai merencanakan sprint pada waktu malam, sebelum tidur kita harus membuat target harian apa yang bisa kita kerjakan dalam rangka mengerjakan ibadah kepada Alloh Subhanahu wa Ta'ala (product vision = beriman dan taqwa pada Alloh SWT).</p>\n<p>Contoh backlog ibadah yang saya buat adalah seperti:</p>\n<ul>\n<li>Sebagai seorang laki-laki, saya harus bisa sholat tepat waktu secara berjamaah di masjid</li>\n<li>Hari ini saya melakukan dzikir pagi dan petang</li>\n<li>Saya tidak langsung mencari/mengunakan handphone ketika bangun tidur setiap pagi </li>\n<li>Sebagai seorang ayah, saya menghabiskan waktu luang dengan bercengkrama bersama keluarga setidaknya selama tiga jam setiap hari</li>\n<li>Sebagai seorang anak, dan saudara, Saya sering menghubungi keluarga jauh dan menjaga silaturahmi dengan mereka, setidaknya dengan pecakapan selama 4 menit atau sampai 10 kali bilang alhamdulillah</li>\n</ul>\n<hr>\n<h2 id=\"mcetoc_1dcevf17g0\">Daily Scrum</h2>\n<p>Pada kegiatan daily scrum di kantor, rekan satu tim akan memberi informasi apa saja pekerjaan yang sedang mereka lakukan, biasanya ada formula baku untuk menjawab pertanyaan:</p>\n<ol>\n<li>Apa yang sudah saya lakukan kemarin?</li>\n<li>Apa yang akan saya kerjakan hari ini?</li>\n<li>Apa yang menjadi hambatan saya menyelesaikan tugas/pekerjaan itu?</li>\n</ol>\n<p>Karena panjang sprint satu hari, maka daily scrum itu saya ubah menjadi 5 kali sehari, yaitu ketika setelah waktu shalat, kita akan melakukan daily scrum dengan berbicara kepada diri sendiri dan tentu disaksikan oleh malaikan dan didengar oleh Alloh As Samii' yang maha mendengar setiap suara di muka bumi baik yang nampak maupun yang tersembunyi.</p>\n<p>Pertanyaan yang harus dijawab, kurang lebih mirip seperti daily scrum, namun saya memodifikasinya, seperti</p>\n<ol>\n<li>Amal ibadah seperti apa yang berhasil saya lakukan dari waktu solat sebelumnya hingga saat ini?</li>\n<li>Adakah dosa yang telah diperbuat dan saya ketahui? mohonlah ampun kepadaNya dengan beristigfar</li>\n<li>Apakah alasan saya ketika tidak mampu mengerjakan ibadah/amal baik?</li>\n</ol>\n<h2 id=\"mcetoc_1dcevu1361\">Sprint review dan Retrospective</h2>\n<p>Biasanya ini terjadi diakhir sprint, untuk melihat apa yang sudah dikerjakan ke belakang dan apakah kita mempelajari sesuatu darinya sehingga bisa menjadi ide perbaikan di kemudian hari (next sprint).</p>\n<p>Hal diatas mirip betul dengan kegiatan \"muhasabah\", secara etimologis berasal dari kata hisab, yaitu melakukan perhitungan (evaluasi diri), kita lakukan evaluasi apa yang terjadi hari itu, meliputi hubungan seorang hamba (manusia) dengan Alloh SWT, maupun hubungan sesama makhluk ciptaanNya (sesama manusia, dan secara umum seperti dengan tumbuhan, hewan, air, udara, benda lainya).</p>\n<p>sehingga kita bisa mengenal diri lebih baik, mengetahui kelemahan serta aib diri sendiri dan segera bertaubat memohon ampunan, dan apakah kita sudah bijak dalam mengalokasikan waktu dengan seimbang untuk peran kita sebagai suami, ayah, anak, kakak, tetangga, karyawan, dan lain sebagainya.</p>\n<p>Proses ini dilakukan di malam hari, sebelum mulai merencanakan target esok hari (sprint planning), ataupun bisa dilakukan selama perjalanan pulang kantor, daripada melihat seliweran kendaraan toh :)</p>\n<hr>\n<h2 id=\"mcetoc_1dcf0d8u52\">Product Backlog</h2>\n<p>Oia satu lagi yang terlewat, product backlog adalah daftar pekerjaan yang diminta phiak bisnis untuk dikerjakan di masa depan, pekerjaan-pekerjaan ini bergerak untuk mencapai tujuan dari product vision.</p>\n<p>Sengaja saya taruh ini di bagian akhir, sebagai PR pula bagi kita semua untuk merenunginya, karena saya sendiri merasakan tidak mudah untuk menjawabnya, jadi dalam membuat product backlog kehidupan muslim harap dipertimbangkan untuk meliputi pertanyaan sebagai berikut (<a href=\"#INTERNAL_LINK#/post/9\" target=\"_blank\" rel=\"noopener noreferrer\">diambil dari artikel sebelumnya, oleh Ust. Dr. Imam Zamroji, MA</a>):</p>\n<ol>\n<li>Amalan Hablumminallah apa yang ingin anda dan keluarga lakukan untuk kesuksesan dunia, alam kubur dan akhirat?</li>\n<li>Apa Alasan yang membuat anda dan keluarga ingin melakukan amalan di atas?</li>\n<li>Bagaimana kondisi anda dan keluarga sekarang? yang bisa diukur sebagai indikasi</li>\n<li>Apa saja target-target yang ingin anda dan keluarga capai? terukur dan ambisisus)</li>\n<li>Bagaimana Langkah Kongkrit dan detail yang perlu anda dan keluarga lakukan untuk mencapaj target tersebut?</li>\n<li>Apa saja sumberdaya pendukung yang anda dan keluarga perlukan untuk mencapai target tersebut</li>\n<li>Evaluasi : Bagaimana dan seberapa sering anda akan memonitor perkembangan anda dan keluarga, agar tahu adanya perkembangan dan pencapaian pada diri anda dan keluarga.</li>\n</ol>\n<hr>\n<h2 id=\"mcetoc_1dcf0vaje0\">Penutup</h2>\n<p>Hal yang saya tulis diatas pun belum saya lakukan secara konsisten, pasang surut semangat kadang ada saja, mohon doa nya agar saya, anda dan seluruh muslim di dunia bisa memanfaatkan waktunya dengan baik, serta mendapatkan keberkahan waktu sehingga bisa menggunakannya untuk hal baik dan meningkatkan iman dan taqwa kita kepada Alloh yang maha pengasih lagi maha penyayang :)</p>",
            "image": "https://fachrul.id/media/posts/20/arches-architecture-building-460680.jpg",
            "author": {
                "name": "Fachrul Choliluddin"
            },
            "tags": [
            ],
            "date_published": "2019-06-03T22:06:51+07:00",
            "date_modified": "2019-06-03T23:20:31+07:00"
        },
        {
            "id": "https://fachrul.id/menjadi-penguji-program-komputer-software-tester/",
            "url": "https://fachrul.id/menjadi-penguji-program-komputer-software-tester/",
            "title": "Menjadi Penguji Program Komputer (software tester)",
            "summary": "Selamat datang teman-teman, Pada kesempatan kali ini kita akan belajar sama-sama tentang Software testing (pengujian program komputer) sedari tingkat pemula atau baru meniti karir di dunia per-testingan. Kita akan coba membahas mengenai konsep dan metode pengujian yang telah saya praktikan sehari-hari. Kita awali dari tema&hellip;",
            "content_html": "<p>Selamat datang teman-teman,</p>\n<p>Pada kesempatan kali ini kita akan belajar sama-sama tentang Software testing (pengujian program komputer) sedari tingkat pemula atau baru meniti karir di dunia per-testingan. Kita akan coba membahas mengenai konsep dan metode pengujian yang telah saya praktikan sehari-hari.</p>\n<p>Kita awali dari tema dasar pengujian program komputer hingga hal-hal yang lebih rumit lagi nantinya.</p>\n<blockquote>\n<p>Halaman ini berisi daftar isi dari artikel yang telah dituliskan, jadi akan selalu diperbaharui secara berkala ya, sering-sering berkunjung jadinya ya :) </p>\n</blockquote>\n<h2 id=\"mcetoc_1dc7bstvs1\">Pengujian Manual untuk pemula</h2>\n<p>Pada bagian ini kita akan bahas mengenai beberpaa teori pengujian, diantaranya</p>\n<ul>\n<li><a href=\"#INTERNAL_LINK#/post/19\" target=\"_blank\" rel=\"noopener noreferrer\">Apa itu Pengujian Program komputer (software testing)?</a></li>\n<li>Kenapa perlu adanya pengujian?</li>\n</ul>",
            "image": "https://fachrul.id/media/posts/18/artificial-intelligence-automation-bookcase-1329068.jpg",
            "author": {
                "name": "Fachrul Choliluddin"
            },
            "tags": [
            ],
            "date_published": "2019-05-31T23:39:58+07:00",
            "date_modified": "2019-06-03T21:51:34+07:00"
        },
        {
            "id": "https://fachrul.id/keberkahan-waktu/",
            "url": "https://fachrul.id/keberkahan-waktu/",
            "title": "Keberkahan Waktu",
            "summary": "Saya heran melihat orang yang sangat cemerlang dalam karir, dan sukses di akhir pekan sebagai pengusaha, ditambah bisa menjadi ayah yang baik dalam keluarga, dan rutin menjalankan amal ibadah mendalami ilmu agama. Kok bisa dia menjalani berbagai peran sekaligus? salah satu jawabannya adalah \"Keberkahan waktu\" Allah 'Azza wa Jalla berfirman: “Demi&hellip;",
            "content_html": "<p>Saya heran melihat orang yang sangat cemerlang dalam karir, dan sukses di akhir pekan sebagai pengusaha, ditambah bisa menjadi ayah yang baik dalam keluarga, dan rutin menjalankan amal ibadah mendalami ilmu agama. Kok bisa dia menjalani berbagai peran sekaligus? salah satu jawabannya adalah \"Keberkahan waktu\"</p>\n<p>Allah 'Azza wa Jalla berfirman:</p>\n<blockquote>\n<p>“Demi masa, Sesungguhnya manusia itu benar-benar dalam kerugian, Kecuali orang-orang yang beriman dan mengerjakan amal shalih dan nasihat menasihati supaya mentaati kebenaran dan nasehat menasehati dalam kesabaran.” (QS. Al-`Ashr: 1-3)</p>\n</blockquote>\n<p>Allah Ta’ala beberapa kali bersumpah dalam Al-Quran dengan menggunakan keterangan waktu. Misalnya “wal-ashri” (demi masa), “wad-dhuha” (demi waktu dhuha), “wal-lail” (demi waktu malam) dan lain-lainnya. Hal ini menunjukkan bahwa waktu ini sangatlah penting, bagaikan nafas yang tak mungkin kembali, dan kita harus menyadari betul hal ini, sedangkan manusia secara umum lalai akan hal ini.</p>\n<p>Akhir-akhir ini saya sangat tertarik mendalami ilmu tentang waktu, karena faktanya semua orang mendapatkan jatah waktu yang sama 24 jam sehari, dan 7 hari seminggu, tetapi kok bisa aja ada orang yang super produktif? karena waktu adalah modal yang sangat berharga, ia dimiliki oleh semua orang yang hidup, kita tidak bisa merebut waktu orang lain untuk ditambahkan ketika kita merasa waktu 24 jam sehari kurang, modal waktu ini seringkali kita hamburkan untuk hal-hal yang tidak (kurang) ada manfaatnya, baik manfaat untuk kehidupan dunia ataupun kehidupan kelak di akhirat.</p>\n<figure class=\"post__image post__image\" ><img src=\"https://fachrul.id/media/posts/16/antique-classic-countdown-1095601.jpg\" alt=\"\" width=\"1280\" height=\"853\">\n<figcaption >Photo by <strong><a href=\"https://www.pexels.com/@bentonphotocinema?utm_content=attributionCopyText&amp;utm_medium=referral&amp;utm_source=pexels\">Jordan Benton </a></strong>from <strong><a href=\"https://www.pexels.com/photo/shallow-focus-of-clear-hourglass-1095601/?utm_content=attributionCopyText&amp;utm_medium=referral&amp;utm_source=pexels\">Pexels</a></strong></figcaption>\n</figure>\n<p>Kita seringkali menggerutu karena kurang nya waktu untuk mengerjakan sesuatu, padahal sebelumnya tak terasa kita menghabiskan waktu untuk main game, menonton video di youtube, serial di netflix, bercanda dengan kawan lama di facebook, atau ngobrol ngalor-ngidul di group whatsapp yang berderet, waktu 24 jam sehari terkadang kurang, bahkan hanya untuk sekedar beristirahat dengan cukup barang sejenak.   </p>\n<p>Pada contoh yang saya paparkan di awal, adalah contoh orang yang berhasil memanfaatkan waktu yang dimilikinya seoptimal mungkin sehingga bisa memberikan dampak maksimal bagi kehidupannya. Kuncinya adalah <strong>prioritas:</strong> kebijaksanaan kita mengalokasikan waktu, hal-hal apa saja yang layak untuk kita mencurahkan waktu.</p>\n<p>Oleh karena itu, manfaatkanlah modal waktu kita untuk hal-hal yang bermanfaat, dan selalu kita memohon kepada Allah 'Azza wa Jalla untuk memberikan kita keberkahan dalam memanfaatkan karunia waktu yang diberikan, dan menjauhkan kita dari perbuatan yang sia-sia.</p>\n<p>Nabi shallallahu ‘alaihi wa sallam bersabda</p>\n<blockquote>\n<p><br>نِعْمَتَانِ مَغْبُونٌ فِيهِمَا كَثِيرٌ مِنَ النَّاسِ ، الصِّحَّةُ وَالْفَرَاغُ<br><br>“Ada dua kenikmatan yang banyak manusia tertipu, yaitu nikmat sehat dan waktu senggang” (HR. Bukhari no. 6412)<br><br></p>\n</blockquote>\n<p>Hendaknya kita mengisi waktu kita dengan hal-hal yang positif dan bermanfaat, tugas kita sangat banyak sedangkan waktu ini sangat sedikit, tidak layak bagi seorang muslim menghabiskan waktu yang sangat berharga dengan bermain hal sia-sia yang tidak bermanfaat.</p>",
            "image": "https://fachrul.id/media/posts/16/background-blurred-background-books-1178683.jpg",
            "author": {
                "name": "Fachrul Choliluddin"
            },
            "tags": [
            ],
            "date_published": "2019-05-26T22:44:07+07:00",
            "date_modified": "2019-05-26T22:44:07+07:00"
        },
        {
            "id": "https://fachrul.id/kiat-memilih-bahasa-pemrograman-untuk-automation-test/",
            "url": "https://fachrul.id/kiat-memilih-bahasa-pemrograman-untuk-automation-test/",
            "title": "Kiat memilih bahasa pemrograman untuk automation test",
            "summary": "Saya mau belajar automation testing, tapi saya sedikit bingung pilih bahasa pemrograman mana yang paling bagus untuk dipelajari?Satu hal yang harus dipahami, tidak ada yang namanya bahasa pemrograman paling bagus, lebih baik mencari yang \"cocok\" berdasarkan situasi dan lingkungan kita dan tim. Pilihan bahasa pemrograman itu tergantung&hellip;",
            "content_html": "<h2 id=\"mcetoc_1db37j3n90\">Saya mau belajar automation testing, tapi saya sedikit bingung pilih bahasa pemrograman mana yang paling bagus untuk dipelajari?</h2>\n<p>Satu hal yang harus dipahami, tidak ada yang namanya bahasa pemrograman paling bagus, lebih baik mencari yang \"cocok\" berdasarkan situasi dan lingkungan kita dan tim. Pilihan bahasa pemrograman itu tergantung pada <strong>kebutuhan</strong> dan <strong>selera</strong> aja sih kalo kata saya mah.</p>\n<figure class=\"post__image post__image\" ><img src=\"https://fachrul.id/media/posts/15/advice-colleagues-communication-1161465.jpg\" alt=\"\" width=\"1280\" height=\"853\">\n<figcaption >Photo by <strong><a href=\"https://www.pexels.com/@rawpixel?utm_content=attributionCopyText&amp;utm_medium=referral&amp;utm_source=pexels\">rawpixel.com </a></strong>from <strong><a href=\"https://www.pexels.com/photo/advice-business-colleagues-communication-1161465/?utm_content=attributionCopyText&amp;utm_medium=referral&amp;utm_source=pexels\">Pexels</a></strong></figcaption>\n</figure>\n<h3 id=\"mcetoc_1db37lt7r4\">Lingkungan</h3>\n<p>Misalkan dilingkungan tim yang mengerjakan program website dengan <a href=\"#INTERNAL_LINK#/post/null\" title=\"https://books.goalkicker.com//RubyOnRailsBook/\">rails</a>, tentu akan sangat cocok membuat automation dengan bahasa pemrograman <a href=\"#INTERNAL_LINK#/post/null\" title=\"https://books.goalkicker.com/RubyBook/\">ruby</a>, atau ternyata tim menggunakan <a href=\"#INTERNAL_LINK#/post/null\" title=\"https://books.goalkicker.com//SpringFrameworkBook/\">Spring</a> untuk membuat aplikasi, tentu pilihan coding <a href=\"#INTERNAL_LINK#/post/null\" title=\"https://books.goalkicker.com//JavaBook/\">java</a>/<a href=\"#INTERNAL_LINK#/post/null\" title=\"https://books.goalkicker.com//KotlinBook/\">kotlin</a>/atau jvm lain sangat cocok, kenapa begitu?</p>\n<p>Karena dengan mengikuti bahasa yang sama dengan program yang menjadi target automation. kita bisa memiliki beberapa kelebihan, diantaranya: automation script bisa hidup berdampingan, satu tempat dengan repository code target aplikasi (application under test) jadi bisa dengan mudah masuk kedalam pipeline build program tersebut, lalu juga dengan bahasa pemrograman yang sama kita akan mendapatkan dukungan teknikal dari developer yang tak sungkan membantu kita ketika menemukan kendala dalam membuat coding automation, misalkan kita bisa bertanya cara menyusun kode menjadi lebih DRY (jangan mengulangi kodemu), konsultasi OOP ataupun library yang bisa membantu</p>\n<h3 id=\"mcetoc_1db37o0nb6\">Selera</h3>\n<p>Saya adalah termasuk yang senang menggunakan bahasa pemrograman yang dinamis seperti <a href=\"#INTERNAL_LINK#/post/null\" title=\"https://books.goalkicker.com//PHPBook/\">PHP</a>, <a href=\"#INTERNAL_LINK#/post/null\" title=\"https://books.goalkicker.com/RubyBook/\">ruby</a>, <a href=\"#INTERNAL_LINK#/post/null\" title=\"https://books.goalkicker.com//PythonBook/\">python</a> ataupun <a href=\"#INTERNAL_LINK#/post/null\" title=\"https://books.goalkicker.com//JavaScriptBook/\">javascript</a> ketimbang menggunakan Java atau C#, karena menurut saya bahasa java/C# terlalu ribet cara koding nya, lebih banyak code ceremony style dalam penulisan sysntax nya, yang mengintimidasi saya bahwa kode yang dituliskan menjadi ribet dan panjang, ditambah lagi waktu compile kode yang bisa sekitar 5 detik cuma untuk menunggu kodenya menjadi executable, dan ini membuat saya merasa diperlambat sih :P</p>\n<hr>\n<p><br>Berdasarkan pengalaman saya mempelajari automation ini (dalam konteks selenium) adalah dengan mencoba beberapa bahasa pemrograman langsung, misalkan saya pernah mencoba ruby, java, PHP, dan javaScript untuk membuat kerangka automation suatu website yang sama, banyak loh framework mature dan banyak dukungan dari komunitasnya seperti <a href=\"#INTERNAL_LINK#/post/null\" title=\"https://github.com/teamcapybara/capybara\">capybara</a> di ruby, <a href=\"#INTERNAL_LINK#/post/null\" title=\"https://www.thucydides.info/\">serenity</a> di java, <a href=\"#INTERNAL_LINK#/post/null\" title=\"https://codeception.com/\">codeception</a> di PHP, <a href=\"#INTERNAL_LINK#/post/null\" title=\"https://robotframework.org/\">robotframework</a> di python dan makin banyak lagi pilihan di javascript, bahkan yang sering menjadi topik hangat di komunitas <a href=\"#INTERNAL_LINK#/post/null\" title=\"https://www.meetup.com/Indonesia-Software-Quality-Assurance/\">ISQA</a> adalah <a href=\"#INTERNAL_LINK#/post/null\" title=\"https://www.katalon.com/\">Katalon Studio</a> dengan bahasa groovy nya.</p>\n<p>Sehingga kita bisa mempelajari ekosistem darisemua bahasa pemrograman dan framework tadi, pada akhirnya akan membuat kita menjadi lebih paham kekurangan kelebihan masing-masing dan menjadikan generalist yang lebih baik lagi.</p>\n<p><img class=\"post__image\" src=\"https://fachrul.id/media/posts/15/athletes-black-and-white-black-and-white-34514.jpg\" alt=\"\" width=\"640\" height=\"427\"></p>\n<p>Jika ingin langsung terjun mempelajari automation, mungkin saran saya adalah:</p>\n<ul>\n<li>Pilih tools atau library yang mudah dipelajari, bisa dari dokumentasi resminya, komunitas, ataupun banyak bertebaran artikel ketika di gugling</li>\n<li>Lihat apakah tools tersebut ada rutin rilis feature, jangan gunakan tools yang sudah ditinggalkan dan tidak ada rilis lagi kedepannya, contohnya seperti calabash</li>\n<li>Hal-hal teknis yang perlu diperhatikan juga seperti:\n<ul>\n<li>Library sudah stabil dan aktif dikembangkan, bisa mengikuti rilis selenium misalkan</li>\n<li>Kemampuan unique test runner nya seperti junit, testNG, rspec</li>\n<li>Bagaimana scalable test nya nanti, bisa mudah di buat parallel</li>\n<li>Penulisan kode yang elegan</li>\n<li>Mudah dan fleksibel saat dijalankan lewat command line </li>\n</ul>\n</li>\n<li>Pelajari yang paling mudah dan pahami konsep automation nya, bisa mulai dari Katalon Studio (tapi untuk jangka panjang, saran saya jangan gunakan recordernya)</li>\n<li>Jika sudah paham katalon studio dengan kemudahan graphical user interface nya, dan paham bagaimana automation bekerja (selector, interaction, expectation/assertion) coba pelajari automation dengan code langsung</li>\n<li>Jika automation website saya akan memilih ruby dengan capybara nya (bisa pakai cucumber juga)</li>\n<li>Jika automation mobile apps saya akan memilih java-appium karena tutorialnya banyak dan bisa multiplatform (tapi lebih cepat espresso dan xcuitest sih)</li>\n<li>Jika autoamtion API saya akan memilih postman/newman dengan javascript nya</li>\n</ul>",
            "image": "https://fachrul.id/media/posts/15/artificial-intelligence-machine-machine-learning-185725.jpg",
            "author": {
                "name": "Fachrul Choliluddin"
            },
            "tags": [
            ],
            "date_published": "2019-05-17T17:00:00+07:00",
            "date_modified": "2019-05-17T23:37:32+07:00"
        },
        {
            "id": "https://fachrul.id/memecahkan-masalah-yang-sebenarnya/",
            "url": "https://fachrul.id/memecahkan-masalah-yang-sebenarnya/",
            "title": "Memecahkan masalah yang sebenarnya",
            "summary": "Mengapa kita mencoba menyelesaikan masalah yang salah?Pada umumnya, bekerja di dunia software development lebih sering berkecimpung dalam maintenance dari aplikasi tua yang sudah dibuat dari dulu oleh developer sebelumnya dan kita tinggal melanjutkannya saja. Jarang sekali (walaupun ada) kesempatan untuk memulai projek dari awal sekali,&hellip;",
            "content_html": "<h2 id=\"mcetoc_1db09cunf0\">Mengapa kita mencoba menyelesaikan masalah yang salah?</h2>\n<p>Pada umumnya, bekerja di dunia software development lebih sering berkecimpung dalam maintenance dari aplikasi tua yang sudah dibuat dari dulu oleh developer sebelumnya dan kita tinggal melanjutkannya saja. Jarang sekali (walaupun ada) kesempatan untuk memulai projek dari awal sekali, lebih sering malah menangani sistem lama yang akan diakhiri (sunset) atau sistem yang sedang terseok-seok, kebakaran dan perlu diselamatkan dengan memberikan peningkatan (scalable) agar bisa memenuhi kebutuhan bisnis pada saat ini. </p>\n<p>Tak heran programmer pemula yang kelimpahan kerjaan seperti ini seringkali ngomel-ngomel, memaki dalam hati karena penulis aslinya dulu yang tidak mampu membuat aplikasi dengan pengalaman terbaik (best practice) atau bisa fleksibel disesuaikan dengan kebutuhan bisnis dimasa depan.</p>\n<p>Padahal sesungguhnya, semakin lama saya bekerja dilingkungan teknologi, semakin saya menyadari, bahwa seringkali kebutuhan bisnis mengalahkan desain arsitektur paripurna, dengan dalih tenggat waktu yang mendesak, beban sumber daya, dan situasi pasar yang bergejolak.</p>\n<p>Kebutuhan bisnis ini hanya mentoleri selama aplikasi bisa menyelesaikan menjawab kebutuhan pasar dengan segera, tidak lebih.</p>\n<figure class=\"post__image post__image\" ><img src=\"https://fachrul.id/media/posts/14/accident-adult-battle-942560.jpg\" alt=\"Photo by Denniz Futalan from Pexels\" width=\"639\" height=\"426\">\n<figcaption >Photo by <strong><a href=\"https://www.pexels.com/@denniz-futalan-339724?utm_content=attributionCopyText&amp;utm_medium=referral&amp;utm_source=pexels\">Denniz Futalan </a></strong>from <strong><a href=\"https://www.pexels.com/photo/silhouette-of-fireman-holding-hose-942560/?utm_content=attributionCopyText&amp;utm_medium=referral&amp;utm_source=pexels\">Pexels</a></strong></figcaption>\n</figure>\n<p>Saat kita mengais puing-puing kode usang tapi masih bisa berfungsi, seringkali kita dibuat garuk-garung kepala, lalu tersenyum simpul melihat penampakan kode aneh bin ajaib muncul, seolah kita masuk ke lorong waktu dan mengenal betul penulis aslinya, kita bisa tahu kapan masanya si empunya ini sedang gandrung metode MVC, lalu berlanjut dengan gaya functional yang mulai populer, dan perubahan gaya kode kekinian lain sebagainya. Kita harus bisa sekreatif mungkin menjaga kode warisan (legacy codebase) ini agar tetap bekerja sebagaimana bisnis harapkan dengan minim perubahan, toh ini lebih baik daripada menggerutu dan memaksa untuk merubahnya menjadi kode yang lebih keren dengan object orientation yang benar, inheritance dan interface yang mumpuni, karena sangat beresiko jika tidak bisa menjinakannya.<br><br>Sebagian besar yang bikin frustasi adalah ketika perancang kode atau bisnis tidak bisa mengkomunikasikan masalahnya dengan tepat, sehingga lebih sering penyelesaian masalah dengan program perangkat lunak menjadi melenceng, entah bisa menjadi solusi tepat guna atau tidak, sehingga ujung-ujungnya perlu bongkar pasang, malah buang-buang waktu.</p>\n<h2 id=\"mcetoc_1db0a0a1q3\">Kenapa sisi bisnis memberikan solusi yang salah sih?</h2>\n<p>Sebuah hal yang sering terjadi dalam menyelesaikan masalah yang salah adalah ketika bisnis menjelaskan masalahnya dan solusi yang mereka pikirkan sendiri lalu kita menelannya mentah-mentah.</p>\n<p>Sebagai sebuah contoh, dengan analogi seseorang yang baru mahir mengendarai sepeda dan mulai memberanikan diri berkendara di jalan umum, lalu ia pergi ke bengkel sepeda dan menyampaikan maksud kedatangannya ke mekanik disana \"Mas, saya ingin sepeda ini dipasangi lampu sign seperti sepeda motor, berapa saya harus bayar ya?\" dan si mekanik ini dengan pengalaman yang dimiliki tentu perlu tahu kenapa dia inigin hal ini \"Hmm jadi yang kamu perlu adalah cara supaya lebih terlihat oleh pengendara lain ketika main sepeda di malam hari? Saya bisa bantu kamu menemukan material yang akan membuatmu terlihat di malam hari dan yang pasti lebih murah daripada sign motor\", lalu pemilik sepeda menjawab \"Iya bener banget\".</p>\n<figure class=\"post__image post__image\" ><img src=\"https://fachrul.id/media/posts/14/art-artsy-bulb-1938318.jpg\" alt=\"solution\" width=\"640\" height=\"640\">\n<figcaption >Photo by <strong><a href=\"https://www.pexels.com/@jhonismartins?utm_content=attributionCopyText&amp;utm_medium=referral&amp;utm_source=pexels\">Jhonis Martins </a></strong>from <strong><a href=\"https://www.pexels.com/photo/person-holding-white-light-bulb-beside-black-bulb-socket-1938318/?utm_content=attributionCopyText&amp;utm_medium=referral&amp;utm_source=pexels\">Pexels</a></strong></figcaption>\n</figure>\n<h2 id=\"mcetoc_1db0a2ung4\"><br>Bagaimana kita bisa mengelesaikan masalah yang sesungguhnya?</h2>\n<p>Sebagai pengrajin kode yang profesional, kita harus menyadari bahwa klien kita seringkali tidak mengetahui solusi yang terbaik untuk masalah yang mereka hadapi, bantu mereka dengan pengalaman kita mencari solusi yang paling jitu.</p>\n<p>Santai dan dengarkan. Bicaralah dengan orang dari sisi bisnis, dan tanyakan hasil seperti apa yang dibutuhkan? Brainstorming dengan ide perbaikan, diskusi debatlah hingga menemukan formula yang tepat guna untuk menjadi solusi dari masalah yang dihadapi</p>",
            "image": "https://fachrul.id/media/posts/14/accident-action-asphalt-6078-1.jpg",
            "author": {
                "name": "Fachrul Choliluddin"
            },
            "tags": [
            ],
            "date_published": "2019-05-16T19:41:03+07:00",
            "date_modified": "2019-05-16T19:41:03+07:00"
        },
        {
            "id": "https://fachrul.id/today-i-learn-april-2019/",
            "url": "https://fachrul.id/today-i-learn-april-2019/",
            "title": "Today I learn: April 2019",
            "summary": "22/04/2019: Bagaimana cara debug HTTP request?gimana cara kita tau ada yang salah di HTTP request kita sampe return error 400 Bad request. kalo bikin API request pake postman sih gampang, buat liat request yang dibuat udah bener apa ngak, tinggal buka developer console di postman&hellip;",
            "content_html": "<h2 id=\"mcetoc_1d9chu9gg0\">22/04/2019: Bagaimana cara debug HTTP request?</h2>\n<p>gimana cara kita tau ada yang salah di HTTP request kita sampe return error 400 Bad request. kalo bikin API request pake postman sih gampang, buat liat request yang dibuat udah bener apa ngak, tinggal buka developer console di postman nya, kita bisa inspect request-response nya, tapi akan sangat sulit kalo kita bikin request ini programatically pake bahasa pemrograman, karena request nya sekejap aja langsung?</p>\n<p>Solusinya:</p>\n<p><code>ruby -rsocket -e \"trap('SIGINT') { exit }; Socket.tcp_server_loop(8080) { |s,_| puts s.readpartial(1024); puts; s.puts 'HTTP/1.1 200'; s.close }</code></p>\n<p>kode diatas akan buat program kecil via ruby yang akan listen port 8080, kita bisa hit http://localhost:8080 buat lihat apakah request kita sudah benar</p>\n<p><img class=\"post__image\" src=\"https://fachrul.id/media/posts/12/Screen-Shot-2019-04-26-at-17.14.00.png\" alt=\"\" width=\"2010\" height=\"580\"></p>\n<p>sumber: <a href=\"https://www.rubyguides.com/2018/08/ruby-http-request/\">https://www.rubyguides.com/2018/08/ruby-http-request/</a></p>\n<hr>\n<h2 id=\"mcetoc_1d9ciakd00\"> 26/05/2018: Cara biar Cucumber Ruby ga langsung fail ketika assert / expect</h2>\n<p> klo pake expect biasanya tiap ga terpenuhi langsung error, nah padahal kan bisa jadi di halaman itu kita perlu banyak cek sekaligus, biar sekalian dibenerin gitu. gimana caranya?</p>\n<p><code>aggregate_failures \"testing response\" do<br>  expect(response.status).to eq(200)<br>  expect(response.headers[\"Content-Type\"]).to eq(\"application/json\")<br>  expect(response.body).to eq('{\"message\":\"Success\"}')<br> end</code></p>\n<p>sumber: <a href=\"https://www.rubydoc.info/github/rspec/rspec-expectations/RSpec%2FMatchers:aggregate_failures\">https://www.rubydoc.info/github/rspec/rspec-expectations/RSpec%2FMatchers:aggregate_failures</a> </p>",
            "author": {
                "name": "Fachrul Choliluddin"
            },
            "tags": [
            ],
            "date_published": "2019-04-26T17:15:39+07:00",
            "date_modified": "2019-04-26T17:20:04+07:00"
        },
        {
            "id": "https://fachrul.id/sebuah-refleksi-diri-apakah-saya-sudah-berusaha-dengan-sungguh-menjadi-muslim-yang-baik/",
            "url": "https://fachrul.id/sebuah-refleksi-diri-apakah-saya-sudah-berusaha-dengan-sungguh-menjadi-muslim-yang-baik/",
            "title": "Sebuah Refleksi Diri, Apakah Saya Sudah Berusaha dengan Sungguh Menjadi Muslim yang Baik?",
            "summary": "Bismillah, Alhamdulillah kemarin ada kejadian yang membuat saya berfikir dan merenung sampai hari ini, hal sederhana sebenarnya, saya mengisi sebuah form assesment dari https://productivemuslim.com/ untuk mengukur (self-reflection, silahkan kunjungi tautan ini dan pilih \"take the Assessment\") apakah saya sudah menjadi \"best version of yourself\" dari sisi&hellip;",
            "content_html": "<p class=\"dropcap\">Bismillah, Alhamdulillah kemarin ada kejadian yang membuat saya berfikir dan merenung sampai hari ini, hal sederhana sebenarnya, saya mengisi sebuah form assesment dari <a href=\"https://productivemuslim.com/\">https://productivemuslim.com/</a>   untuk mengukur (<em>self-reflection</em>, silahkan kunjungi tautan ini dan pilih <em>\"take the Assessment\"</em>) apakah saya sudah menjadi \"<em>best version of yourself</em>\" dari sisi spritual, fisik, dan sosial. Pertanyaannya sederhana, tetapi berat rasanya menjawab jujur, setiap pertanyaan memiliki renungan pribadi yang mendalam.</p>\n<p>Ada sekitar 30 pernyataan, kita diminta memilih pilihan yang paling sesuai dengan diri kita pribadi, ini yang harus dijawab sejujur mungkin sesuai dengan kondisi kita saat ini, seperti:</p>\n<ul>\n<li>A. <em>Always</em> (Selalu)</li>\n<li>B. <em>Often</em> (Sering)</li>\n<li>C. <em>Occassionally/Sometimes</em> (Kadang kala)</li>\n<li>D. <em>Rarely</em> (Jarang)</li>\n<li>E. <em>Never</em> (Tidak pernah)</li>\n</ul>\n<br>\n<figure class=\"post__image post__image--center\" ><img src=\"https://fachrul.id/media/posts/9/pexels-photo-1310102.jpeg\" alt=\"Istiqlal\" width=\"640\" height=\"426\">\n<figcaption >Photo by <a href=\"https://www.pexels.com/@vijarindo?utm_content=attributionCopyText&amp;utm_medium=referral&amp;utm_source=pexels\">vjapratama</a> from <a href=\"https://www.pexels.com/photo/people-sitting-inside-building-1310102/?utm_content=attributionCopyText&amp;utm_medium=referral&amp;utm_source=pexels\">Pexels</a></figcaption>\n</figure>\nPernyataannya adalah sebagai berikut (dan saya lengkapi tambahan informasi):<br>\n<ol>\n<li>Saya 5 kali sehari sholat teapat waktu\n<ul>\n<li>(laki-laki secara berjamaah)</li>\n</ul>\n</li>\n<li>Saya melantuntkan alquran kurang lebih selama 30 menit setiap hari\n<ul>\n<li>entah membaca alquran atau membaca artinya, pernyataan disini lebih ke seberapa konsisten kamu mempelajari alquran setiap hari</li>\n</ul>\n</li>\n<li>Saya sholat dhuha sebanyak 2 rakaat setiap pagi\n<ul>\n<li>dhuha adalah amalan sunnah, dimulai dari terbit fajar hingga mendekati waktu dzuhur</li>\n</ul>\n</li>\n<li>Saya sholat tahajud setidaknya sebanyak 2 rakaat setiap malam dan ditambah sholat witir\n<ul>\n<li>tahajud adalah sholat malam selepas isya dan sebelum masuk waktu subuh</li>\n</ul>\n</li>\n<li>Saya puasa setidaknya 3 hari dalam satu bulan\n<ul>\n<li>di luar bulan ramadhan, ayamul bid, puasa pertengahan bulan islam pada tanggal 13, 14, 15</li>\n</ul>\n</li>\n<li>Saya melakukan dzikir pagi dan petang setiap hari\n<ul>\n<li>amalan harian yang dilakukan oleh Nabi Muhammad SAW sebelum matahari terbit dan tenggelam</li>\n</ul>\n</li>\n<li>Saya tidur cukup antara 6 sampai 9 jam setiap malam\n<ul>\n<li>setiap orang bisa memiliki kebutuhan tidur yang berbeda, tapi pada umumnya orang dewasa sehat itu membutuhkan 6-9 jam tidur setiap malamnya</li>\n</ul>\n</li>\n<li>Saya tidur siang sekitar 20 menit setiap hari\n<ul>\n<li>tidur siang singkat antara 20-30 menit bisa meningkatkan semangat, daya tahan, dan performa terbaik</li>\n</ul>\n</li>\n<li>Saya makan sehat dan seimbang setiap hari\n<ul>\n<li>diet seimbang, nutrisi cukup yang dibutuhkan tubuh agar tetap sehat. Bisa dengan mengkonsumsi buah segar, sayuran, biji-bijian, atau kacang-kacangan dan memenuhi kebutuhan kalori harian</li>\n</ul>\n</li>\n<li>Saya mengindari makanan tinggi gula ataupun tinggi lemak\n<ul>\n<li>makanan yang mengandung kadar gula dan lemak yang tinggi bisa menyebabkan sistem pencernaan bekerja lebih keras, dan membuat kadar oksigen di otak berkurang sehingga membuat kita pusing dan lunglai</li>\n</ul>\n</li>\n<li>Saya berolahraga sekitar 3 kali dalam sepekan selama 30 menit setiap sesi\n<ul>\n<li>untuk kesehatan sangat direkomendasikan untuk berolah raga selama 75-150 menit setiap minggu</li>\n</ul>\n</li>\n<li>Saya tidak langsung mencari/mengunakan handphone ketika bangun tidur setiap pagi (harap jujur)</li>\n<li>Saya membuat jurnal pribadi dan menghabiskan sekitar 15 menit di malam hari sebagai waktu refleksi diri\n<ul>\n<li>dengan menuliskan pikiran dan perasaan kita, bisa memabantu kita memahami dengan lebih jelas apa yang kita alami, membuat jurnal dapat membantu kita mengendalikan emosi dan kesehatan mental</li>\n</ul>\n</li>\n<li>Setiap pagi saya membuat sekitar 3 hal yang menjadi goal saya selama hari itu\n<ul>\n<li>produktifitas itu bukan soal seberapa banyak, tetapi seberapa tepat kamu melakukan hal itu, tetap pantau terus kemajuan kita</li>\n</ul>\n</li>\n<li>Saya bisa fokus selama 25 menit untuk fokus mengerjakan satu kegiatan tanpa ada gangguan\n<ul>\n<li>menurut neouroscience kita adalah monotasker, dokus mengerjakan satu hal dalam satu waktu akan meningkatkan kemampuan terbaik kita</li>\n</ul>\n</li>\n<li>Saya menghabiskan waktu luang dengan bercengkrama bersama keluarga selama setidaknya satu jam setiap hari\n<ul>\n<li>bisa kepada pasangan, orang tua, anak; harga yang paling berharga adalah keluarga</li>\n</ul>\n</li>\n<li>Saya sering menghubungi keluarga jauh dan menjaga silaturahmi dengan mereka\n<ul>\n<li>setidaknya pecakapan selama 4 menit dimana kamu bisa sampai 10 kali bilang alhamdulillah</li>\n</ul>\n</li>\n<li>Saya memafkan siapa saja yang berbuat salah dengan saya, saya menghilangkan prasangka buruk dari hati saya saat sebelum tidur setiap malam\n<ul>\n<li>seseorang dijamin masuk surga oleh Nabi SAW karena hal ini</li>\n</ul>\n</li>\n<li>Saya menunaikan 6 hak sesama muslim\n<ul>\n<li>Dari Abu Hurairah radhiyallahu ‘anhu, ia berkata bahwa Rasulullah shallallahu ‘alaihi wa sallam bersabda, “Hak muslim kepada muslim yang lain ada enam.” Beliau shallallahu ’alaihi wa sallam bersabda, ”(1) Apabila engkau bertemu, ucapkanlah salam kepadanya; (2) Apabila engkau diundang, penuhilah undangannya; (3) Apabila engkau dimintai nasihat, berilah nasihat kepadanya; (4) Apabila dia bersin lalu dia memuji Allah (mengucapkan ’alhamdulillah’), doakanlah dia (dengan mengucapkan ’yarhamukallah’); (5) Apabila dia sakit, jenguklah dia; dan (6) Apabila dia meninggal dunia, iringilah jenazahnya (sampai ke pemakaman).” (HR. Muslim)</li>\n</ul>\n</li>\n<li>Saya berpartisipasi pada kegiatan sosial secara rutin setidaknya sebulan sekali\n<ul>\n<li>ini melebihi berdonasi uang, ini adalah kegiatan bersama melibatkan fisik, mental dan empati</li>\n</ul>\n</li>\n</ol>\n<figure class=\"post__image post__image--center\" ><img src=\"https://fachrul.id/media/posts/9/pexels-photo-87500.jpeg\" width=\"640\" height=\"427\">\n<figcaption >Photo by <a href=\"https://www.pexels.com/@davidmceachan?utm_content=attributionCopyText&amp;utm_medium=referral&amp;utm_source=pexels\">David McEachan</a> from <a href=\"https://www.pexels.com/photo/sky-sunset-clouds-silhouette-87500/?utm_content=attributionCopyText&amp;utm_medium=referral&amp;utm_source=pexels\">Pexels</a> </figcaption>\n</figure>\n<h2 id=\"mcetoc_1d4dj5uja9\">Sebuah perenungan</h2>\n<p>Selesai mengisi semua pernyataan di atas, saya tertegun, kok bisa hampir sebagian besar saya jawab D. Jarang, cenderung ke E. Tidak pernah!!! Saya jadi merasa minder, seberapa pantaskah saya untuk meminta safaat Rosululloh Muhammad SAW di telaga alkautsar, sedangkan saya sampai saat ini tidak mengikuti tuntunan beliau dengan sungguh-sungguh, saya selalu percaya Alloh SWT maha pemberi rahmat pasti bisa menyelamatkan kita dan memberikan izin untuk masuk surga, tetapi dengan amalan yang pas-pas an saat ini apakah pantas mendapatkan surga tanpa hisab? Seberapa kuat kita menahan siksa neraka yang teramat pedih? Nauzubillah, ya Alloh selamatkanlah kami dari panasnya neraka.</p>\n<p>Tinggal di surga adalah cita-cita kita semua, tetapi amalan penghuni surga seperti tidak ditekuni, terlalu disibukan dengan dunia, terlena oleh waktu luang, padahal maut bisa saja datang tanpa pertanda, apakah amalan baik sudah melebihi amalan buruk? Jika surga adalah tujuan kita, sudah seharusnya kita mulai merencanakan tujuan kesana, ketika umat muslim ingin pergi haji, apakah kita sudah mulai menabung untuk itu? Bagaimana bisa kita merasa cukup sedangkan dalam mengerjakan amalan wajib saja sering ditunda-tunda, apalagi mengerjakan amalan sunnah!</p>\n<hr>\n<h2 id=\"mcetoc_1d4dif6ih4\">Sebuah rencana</h2>\n<p>Saya malu ketika awal tahun kemarin membuat resolusi 2019, kebanyakan yang dijalankan adalah rencana duniawi, perihal karir, keluarga seolah pencapaian itu bisa dibanggakan. Apa arti kepiawaian menata banyak hal dalam kehidupan ini, tetapi awam soal kehidupan kekal sejadi yang menanti kita kelak? Mari kita jemput hidayah, memahami kehadiran Dzat Sang Maha Pencipta, Sang Maha Penguasa, dan Sang Maha Pengasih. Saya pun berkomitmen untuk bisa meningkatkan hasil test tadi menjadi lebih sering bahkan selalu.</p>\n<p>Saya jadi teringat pernah mengikuti seminar dari <strong>Ust. Dr. Imam Zamroji, MA</strong> di awal bulan tentang perjalanan menuju surga haruslah direncanakan dan dijalankan dengan disiplin, ada kerangka rencana yang sangat baik dan akan saya salin di bawah ini nanti, harap isi bersama keluarga, lalu print dan tempel dimana kita bisa sering membacanya.</p>\n<hr>\n<blockquote>\n<h2 id=\"mcetoc_1d4diqdfb8\">Bersama Keluarga pulang ke Surga</h2>\n</blockquote>\n<h2 id=\"mcetoc_1d4dihu4l7\">Life Master Plan Dunia, Alam Kubur, Akhirat</h2>\n<ol>\n<li>Amalan Hablumminallah apa yang ingin anda dan keluarga lakukan untuk kesuksesan dunia, alam kubur dan akhirat?\n<ol>\n<li>...</li>\n<li>...</li>\n<li>...</li>\n</ol>\n</li>\n<li>Apa Alasan yang membuat anda dan keluarga ingin melakukan amalan di atas\n<ol>\n<li>...</li>\n<li>...</li>\n<li>...</li>\n</ol>\n</li>\n<li>Bagaimana kondisi anda dan keluarga sekarang? yang bisa diukur sebagai indikasi\n<ol>\n<li>...</li>\n<li>...</li>\n<li>...</li>\n</ol>\n</li>\n<li>Apa saja target-target yang ingin anda dan keluarga capai? terukur dan ambisisus).\n<ol>\n<li>...</li>\n<li>...</li>\n<li>...</li>\n</ol>\n</li>\n<li>Bagaimana Langkah Kongkrit dan detail yang perlu anda dan keluarga lakukan untuk mencapaj target tersebut?\n<ol>\n<li>...</li>\n<li>...</li>\n<li>...</li>\n</ol>\n</li>\n<li>Apa saja sumberdaya pendukung yang anda dan keluarga perlukan untuk mencapai target tersebut\n<ol>\n<li>...</li>\n<li>...</li>\n<li>...</li>\n</ol>\n</li>\n<li>Evaluasi : Bagaimana dan seberapa sering anda akan memonitor perkembangan anda dan keluarga, agar tahu adanya perkembangan dan pencapaian pada diri anda dan keluarga.\n<ol>\n<li>...</li>\n<li>...</li>\n<li>...</li>\n</ol>\n</li>\n</ol>\n<hr>\n<p> </p>\n<p>Untuk membantu mencatat konsistensi hingga menjadi kebiasaan, saya ada rekomendasi aplikasi android ini:<br><a href=\"https://play.google.com/store/apps/details?id=org.isoron.uhabits&amp;hl=in\">https://play.google.com/store/apps/details?id=org.isoron.uhabits&amp;hl=in</a></p>\n<p>Aplikasi ringan dan sederhana juga gratis ini akan membantu kita untuk mencatat tren disiplin, disertai dengan pengingat yang bisa di setel juga sangat berguna menurut saya</p>\n<hr>\n<p><br>Semoga tulisan ini bisa bermanfaat bagi yang membaca dan saya berlindung pada Alloh SWT dari kesombongan, insyaalloh menjaga keikhlasan saya. Mohon dibukakan pintu maaf sebesar-besarnya, semoga kita semua senantiasa hidup dalam kesabaran dan kebersyukuran. Semoga Alloh pertemukan dan kita bisa saling bersapa di Jannah-Nya. Amiin<br> <br><br></p>",
            "image": "https://fachrul.id/media/posts/9/pexels-photo-1310102.jpeg",
            "author": {
                "name": "Fachrul Choliluddin"
            },
            "tags": [
            ],
            "date_published": "2019-02-23T23:37:41+07:00",
            "date_modified": "2019-02-23T23:37:41+07:00"
        },
        {
            "id": "https://fachrul.id/kiat-sukses-dalam-membuat-automation-test-solution/",
            "url": "https://fachrul.id/kiat-sukses-dalam-membuat-automation-test-solution/",
            "title": "Kiat Sukses dalam Membuat Automation Test Solution",
            "summary": "Tidak sulit membayangkan manfaat dari memiliki test yang sudah di-otomatisasi (automated) yang dapat membantu proses pengujian aplikasi karena dengan adanya ia akan membuat feedback proses development menjadi jauh lebih cepat, meningkatkan efektifitas, efisiensi dan coverage pengujian, dari eksekusi test yang sering dan berulang, itu adalah sedikit-banyak manfaat dari&hellip;",
            "content_html": "<p class=\"dropcap\">Tidak sulit membayangkan manfaat dari memiliki test yang sudah di-otomatisasi (<em>automated</em>) yang dapat membantu proses pengujian aplikasi karena dengan adanya ia akan membuat <em>feedback</em> proses development menjadi jauh lebih cepat, meningkatkan efektifitas, efisiensi dan coverage pengujian, dari eksekusi test yang sering dan berulang, itu adalah sedikit-banyak manfaat dari <em>automated testing</em>. Seiring waktu, fitur yang ada pada sistem akan terus bertambah, QA akan melakukan pengujian mulai dari sistem/fitur yang sudah ada ditambah dengan sistem baru yang sedang dikembangkan.</p>\n<p>Suatu otomatisasi test (<em>test automation</em>) mampu melakukan membuat komputer menjalankan rangkaian aktifitas yang telah dirancang untuk membandingkan hasil dari sistem apakah sesuai dengan standar yang diinginkan <em>(expected behaviour)</em> sehingga menghasilkan laporan pengujian sistem telah berhasil atau gagal</p>\n<p>Dengan adanya otomatisasi test ini diharapkan baban QA menjadi ringan dalam menjalankan <em>regression test</em> yang sama berulang kali, tentu ini akan menghemat waktu QA sehingga bisa fokus ke lain hal yang memiliki <em>impact</em> yang besar dalam menjaga kualitas <em>software</em> yang baik, karena itulah perannya dalam pengembangan perangkat lunak sangat penting dan bisa membantu mencapai kesuksesan dari project</p>\n<hr>\n<p>Jika pengujian otomatis sudah dibuat dengan benar, seharusnya ia akan sangat menguntungkan bagi tim <em>development</em> secara keseluruhan, saya akan coba membagikan kiat dalam membuat otomasi test yang baik dan berguna, kemudian hal-hal apa saja yang harus dihindari saat membuat rangkaian pengujian otomatis ini, karena kita harus realistis, tidak semua bisa di otomatisasi komputer, ada batasan-batasan yang harus tetap di perhatikan</p>\n<figure class=\"post__image post__image--center\" ><img src=\"https://fachrul.id/media/posts/8/pexels-photo-1020325.jpeg\" width=\"401\" height=\"305\">\n<figcaption >Membuat Robot</figcaption>\n</figure>\n<h2 id=\"mcetoc_1d4995dar0\">Manual vs Automated atau Testing vs Checking</h2>\n<p>Harap dihindari membanding-bandingkan dua hal ini, antara manual dengan <em>automated testing</em>, karena keduanya memiliki fungsi yang berbeda dan saling membutuhkan. Ada yang bilang <span style=\"text-decoration: underline;\"><em>Testing = Checking + Thinking,</em></span> sehingga selayaknya disebut <strong><em>automated checking</em></strong> bukan disebut<em><strong> automated test / test automation</strong></em>, karena ia adalah pengujian berdasarkan fakta, tapi buat saya sih lebih lumrah orang lain bilang \"<strong>testing</strong>\" sih ya ahaha.</p>\n<p>Selama <em>manual testing</em>, sisi perasaan dan nalar dari seorang <em>tester</em> akan sangat diperlukan dalam mencari titik lemah dan potensi masalah yang akan ditimbulkan dari sistem, dan seringkali proses ini tidak tidak tertulis di rencana pengujian (e<em>xploratory testing</em>) karena <em>tester</em> beradaptasi dengan hasil dari proses <em>testing</em> sehingga perlu improvisasi dalam \"mengusili\" aplikasi.</p>\n<p>Di sisi lain <em>automated test</em> adalah hasil karya manusia juga yang berisi instruksi agar komputer bisa melalukan suatu task (dalam hal ini melakukan pengujian dari suatu hasil), nah setiap kali automated test ini dijalankan, maka ia akan melalukan kegiatan yang sama persis seperti instruksi yang dituliskan dalam kode, dan ia hanya menge-cek hal-hal yang diminta untuk di cek. </p>\n<hr>\n<h2 id=\"mcetoc_1d499b1cs1\">Mulailah dari <em>automated regression test</em></h2>\n<p>Tujuan utama kenapa otomasi test itu ada, adalah karena kita bosan menjalankan test yang sama berulang-ulang setiap rilis baru, <em>Regression test</em> perlu dijalankan seiringan dengan sistem yang terus berkembang, kita perlu memastikan bahwa setelah menambahkan fitur baru pada sistem tidak akan merusak fitur lainnya yang sudah ada.</p>\n<p>Rangkaian test ini sangat memakan waktu dan pekerjaan yang membosankan untuk QA jalankan secara manual setiap kali, ini lah tanda-tanda <em>automation</em> diperlukan untuk menjaga konsistensi hasil pengujian, jadi regression test sangan cocok untuk mulai di otomasi</p>\n<hr>\n<h2 id=\"mcetoc_1d499crt32\">Desainlah testnya dulu sebelum mulai koding</h2>\n<p>Proses yang baik adalah membuat <em>user scenario,</em> <em>test cases, </em>apa yang perlu di <em>expect</em> sebelum mulai di otomasi, karena ini bisa sangat membantu dalam mencari risiko masalah pada sistem yang ditimbulkan, lalu diskusikan dengan tim juga</p>\n<p>Sangat tidak disarankan ketika langsung membuat otomasi kode untuk menguji skenario positif dan <em>happy flow</em> saja, dibandingkan dengan memilikirkan dan mengidentifikasi skenario mana saja yang mungkin terjadi dan bisa ditest. </p>\n<p>Jangan juga mengotomatisasi hal yang sebenarnya tidak terlalu penting untuk di kerjakan komputer, seperti misalnya kita akan menguji halaman login, definisi orang tersebut terlah berhasil login tidak perlu memastikan URL != \"/login\" tetapi lebih penting untuk memastikan, misalnya <em>username</em> di pojokan sudah sesuai dengan <em>login credential</em> tadi , maka dari itu perlu bantuan dari tim member lain untuk mereview desain test kita apakah sudah mencukupi dan sudah baik dalam <em>test scenario</em> dan verifikasinya (ekspektasinya)</p>\n<hr>\n<h2 id=\"mcetoc_1d499mre63\">Hilangkan keraguan</h2>\n<p>Satu hal yang penjadi point utama dari otomasi adalah bisa menjaga hasil yang konsistens, sehingga kita bisa tahu ketika test fail artinya ada sesuatu yang salah dan muncul anomali sistem</p>\n<p>Bayangkan ketika test nya pass kemudian di jalankan lagi jadi fail, tanpa ada perubahan pada aplikasi yang di test (SUT), kita tidak pernah yakin ketika ada fail ini disebabkan oleh kesalahan kode <em>automation</em> atau <em>error</em> pada sistemnya.</p>\n<p>Ketika ada <em>error</em>, kita harus periksa penyebab yang mengakibatkan <em>error</em> ini, kalau sudah banyak ditemukan inkonsistensi atau false positif akan membuat proses pengecekan error ini lama dan sulit. Jangan takut untuk menghapus test yang ga stabil seperti itu di rangkaian test kita, karena yang kita perlukan adalah hasil yang konsisten dan bisa dipercaya.</p>\n<p>Perlu diperhatikan, kualitas otomatisasi test sangat tergantung dari kualitas orang yang menulisnya, bisa jadi test nya berjalan baik, semua check pass, tetapi ada kemungkinan kesalahan bisa saja muncul, tetapi komputer tidak peduli (karena diluar set ekspektasi) sehingga bisa memberikan false quality impression.</p>\n<p><img class=\"post__image--center\" src=\"https://fachrul.id/media/posts/8/pexels-photo-955450.jpeg\" alt=\"\" width=\"406\" height=\"303\"></p>\n<hr>\n<h2 id=\"mcetoc_1d499or0u4\">Jangan otomasi fitur yang belum stabil</h2>\n<p>Sebagaimana sebuah fitur baru yang sedang dikembangkan, banyak sekali hal yang tidak mulus, bahkan seringkali saking agile nya ternyata fitur tersebut tidak lagi relevan dan di batalkan karena bisnis telah berubah dari rencana awal, sehingga otomasi menjadi sia-sia</p>\n<p>Ketika proses otomasi test sudah dimulai berbarengan dengan fitur tersetbut dimulai, maka test akan sering sekali di ubah untuk bisa menyesuaikan implementasi fitur yang bergerak juga, dan ini sangat menghamburkan waktu, walaupun ada juga kok teman-teman ISQA dari <em>startup</em> lain yang sudah berhasil membuat otomasi test berbarengan dengan fitur dibuat.</p>\n<p>Bagaimanapun, saya lebih condong berpendapat implementasi <em>automation </em>(khususnya UI) itu akan lebih baik dibuat ketika fitur sudah stabil dan tidak banyak berubah </p>\n<hr>\n<h2 id=\"mcetoc_1d499qr775\"><strong>Jangan harap keajaiban dari otomasi</strong></h2>\n<p>Jangan pernah berharap otomasi akan bisa menangkap banyak bugs, faktanya dengan manual testing jumlah bug yang ditemukan lebih banyak loh.</p>\n<p>Tujuan dibuatnya <em>test automation</em> adalah untuk membantu QA dalam proses testing sehingga waktu luang QA lebih banyak dan bisa digunakan untuk memikirkan improvement proses dan menjalankan test yang sulit dan edge cases segingga bisa memberikan kepercayaan diri bagi bahwa aplikasi masih berjalan mulus dengan adanya <em>deployement</em> fitur baru</p>\n<p>Rangkaian <em>regression test scenario</em> yang dijalankan secara otomatis tentu akan memberikan <em>feedback</em> lebih cepat dan bisa memberikan rasa aman bagi tim untuk <em>deploy</em> ke <em>production</em></p>\n<hr>\n<h2 id=\"mcetoc_1d499s95m6\">Mengerti konteks nya</h2>\n<p>Test itu bisa ada di berbagai layer, dari <em>unit test, API, service,</em> dan UI, setiap layer memiliki perbedaan tersendiri.</p>\n<p>Unit test akan memastikan kode pada level class berjalan sebagaimana mestinya, sesuai dengan logic yang diharapkan, lebih mengutamakan verification ketimbang validation.</p>\n<p>API test atau i<em>ntegration test</em> akan memastikan satuan function dan class bisa berjalan sesuai harapan ketika digabungkan antar class</p>\n<p>UI atau<em> end to end test</em> adalah rangkaian dari interaksi perjalanan user, disini bisa dibilang UI level lebih ke validasi daripada verifikasi dalam menguji scenario user, test yang berjalan di layer ini cenderung lambat dan rawan <em>error</em>, bisa saja ada perbaikan secara  tampilan, tetapi secara usability masih sama dan tidak berubah sehingga bisa memberikan UI test dibilang error karena ternyata ada element yang berubah (css class ganti bikin element not found).</p>\n<p>Dengan mengerti konteks dari setiap layer test kita akan bisa mengatur strategi otomatisasi nya, bisa jadi untuk scenario A, B, C kita akan test melalui API test, lalu hanya scenario B yang dijalankan juga pada UI test agar lebih cepat dan stabil </p>\n<hr>\n<h2 id=\"mcetoc_1d499ucbo7\">Jangan repot-repot cover 100% semuanya</h2>\n<p><em>Test coverage</em> 100% sangatlah sulit dicapai karena kombinasi kemungkinan yang timbul sangat beragam (<em>possible permutation</em>), ketika berbicara soal otomatisasi test semakin menambah test tidak selalu berarti manambah keyakinan akan test semakin baik. Semua itu tergantung dari sebagus apa otomatisasi pengujian di rancang.</p>\n<p>Untuk membuat <em>automated scrip</em>t memerlukan sumber daya dan waktu, ketika kita ingin mengotomasi semuanya, sudah pasti perlu sumber daya dan waktu yang sangat banyak, yang mana pada kasus umumnya tidak bisa dipenuhi, pun semakin banyak test otomasi akan semakin memerlukan pemeliharaan kode yang lebih intens</p>\n<p>Maka dari itu lebih baik kita buat berdasaran analisa risiko, agar bisa memilih test mana yang layak untuk di otomasi sehingga bisa sangat memberikan manfaat dalam proses testing dan dari segi skenario proses bisnis.</p>\n<p>Oh ya, harap diperhatikan ga semua test bisa di otomasi, sering ada kasus test tersebut aslinya sangat kompleks sering kali hasilnya tidak konsisten, sehingga kasus ini lebih baik kita uji secara manual oleh QA, karena lebih baik kita fokus ke fitur/funcionality yang paling penting dan krusial bagi bisnis untuk di otomatisasi ketimbang mengejar full coverage. </p>\n<hr>\n<h2 id=\"mcetoc_1d49a00378\">Jangan berniat menggantikan manual tester</h2>\n<p>Ada saja orang yang berfikir memiliki automated test sudah cukup dan tidak perlu QA manual lagi, padahal sudah jelas untuk membuat otomatisasi, kita harus pahami dlu hasil seperti apa yang diinginkan, apa yang perlu dicek sehingga dikatakan v<em>alid outcome</em>. Proses testing itu perlu kemampuan multi disiplin seperti investigasi, detektif, psikologis sehingga kita bisa merencanakan ujicoba sekaligus meneksekusi langsung, seorang manual tester yang baik akan selalu memiliki kemampuan untuk berfikir kritis mencegah error terjadi lagi bagi pengguna </p>\n<hr>\n<h2 id=\"mcetoc_1d49a0gac9\">Jangan sampai hilang kepercayaan</h2>\n<p>Ini yang paling penting, kita harus mengantisipasi efek samping dari <em>test automation</em>, ketika kita sudah mencurahkan waktu dan tenaga untuk membuat rangkaian pengujian otomatis yang sempurna dan keren, tetapi ternyata menjadi sia-sia karena tidak berguna dan membantu bagi tim.</p>\n<p>Bisa jadi tim tidak merasakan manfaatnya, atau bahkan tidak tahu, jadi perlu juga visibility dari rangkaian test automation solution yang kita buat, bagaimana cara mereka memakainya, lalu test apa saja yang ada di dalamnya agar tidak melakukan regression yang duplikat.</p>\n<p>Jika automated test ini sering kali flaky (intermittent error), lambat dan tidak transparan, bagaimana bisa  memberikan indikasi kualitas sistem sedangkan automated test nya saja tidak berkualitas baik dan stabil.</p>\n<p> </p>\n<hr>\n<figure class=\"post__image post__image--center\" ><img src=\"https://fachrul.id/media/posts/8/pexels-photo-1068523-1.jpeg\" width=\"498\" height=\"326\">\n<figcaption >we are a team</figcaption>\n</figure>\n<p>Rangkaian pengujian otomatis ini perlu dirawat layaknya mahluk hidup, ia terus berkembang dari waktu ke waktu, ada kalanya test tertentu sudah tidak relevan, jangan takut untuk mencopot test yang seringkali fail atau tidak memberikan hasil yang konsisten demi menjaga kredibilitas dari test automation solution kita sebagai indikator dari kualitas aplikasi/sistem.</p>\n<p>Dengan mengerti batasan diatas, menurut saya peran manusia tetap berperan penting dalam proses pengujian belum bisa digantikan sepenuhnya oleh otomasi komputer, lalu kenapa kita perlu membuat otomatisasi pengujian aplikasi? alasan singkatnya adalah \"<span style=\"text-decoration: underline;\"><strong>repeatability</strong></span>\",  lebih ke kolaborasi dengan adanya bantuan komputer untuk menjalankan pengujian otomatis akan membantu QA untuk bisa lebih luang dan bisa lebih fokus untuk melakukan exploratory testing untuk lebih banyak mengali risiko, dan defects.</p>\n<p>Jadi, lain kali ketika kamu berencana membuat otomatisasi test, coba berfikir sejenak dan berfikir, seberapa sering test ini akan di jalankan? apakah cukup layak untuk dikerjakan manual? bagaimana sampai dikatakan test nya sukses?</p>\n<p> </p>\n<p class=\"msg msg--info\"><strong>Hmm sepertinya itu saja, ada tambahan kah dari teman-teman?</strong></p>",
            "image": "https://fachrul.id/media/posts/8/pexels-photo-1020325.jpeg",
            "author": {
                "name": "Fachrul Choliluddin"
            },
            "tags": [
            ],
            "date_published": "2019-02-22T07:35:34+07:00",
            "date_modified": "2019-02-22T09:57:56+07:00"
        },
        {
            "id": "https://fachrul.id/jangan-minder-kalau-kamu-adalah-manual-tester-yang-tidak-bisa-koding/",
            "url": "https://fachrul.id/jangan-minder-kalau-kamu-adalah-manual-tester-yang-tidak-bisa-koding/",
            "title": "Jangan Minder Kalau Kamu adalah Manual Tester yang Tidak Bisa Koding",
            "summary": "Saya pernah dengar istilah \"Asahlah pisau pada sisinya yang tajam\", artinya kita seharusnya fokus pada apa yang menjadi kelebihan yang dimiliki untuk menjadi lebih mahir lagi dalam hal tersebut. Untuk kamu yang pernah menonton Jiro: Dream of Sushi mungkin ada sedikit gambaran mengenai apa yang dinamakan spesialis,&hellip;",
            "content_html": "<p>Saya pernah dengar istilah <strong>\"Asahlah pisau pada sisinya yang tajam\"</strong>, artinya kita seharusnya fokus pada apa yang menjadi kelebihan yang dimiliki untuk menjadi <strong>lebih mahir</strong> lagi dalam hal tersebut. Untuk kamu yang pernah menonton <em>Jiro: Dream of Sushi</em> mungkin ada sedikit gambaran mengenai apa yang dinamakan spesialis, dunia sebenarnya membutuhkan lebih banyak orang yang sangat mahir pada suatu bidang daripada orang yang bisa banyak hal.</p>\n<figure class=\"post__video\"><iframe width=\"560\" height=\"314\" src=\"https://www.youtube.com/embed/I1UDS2kgqY8\" allowfullscreen=\"allowfullscreen\" ></iframe></figure>\n<p>Spesialis disini bukan berarti menyalahi konsep T shape loh ya, justru selaras dengan itu. kita bahas lebih jauh mengenai analogi film Jiro tadi, untuk menjadi pengusaha restoran Jepang yang sukses, Jiro tidak perlu menjual sushi enak dan ramen nikmat (keahlian horizontal), tetapi cukup menyajikan sushi paling spesial saja, nah konsep T shape disini adalah dalam konteks spesialis sushi, bukan makanan Jepang secara umum, selain Jiro piwai dalam meracik sushi dia menguasai proses pemilihan bahan baku sushi yang paling prima, dari beras, tuna, ataupun sayurannya dia memiliki standard yang tinggi, dia pun menguasai cara penyajian sushi yang baik dan indah, bahkan saya dengar dia menciptakan teknik khusus untuk bisa menjaga kesegaran telur ikan yang musiman, sepanjang tahun!</p>\n<p>Pun begitu dengan dunia per-testing-an sedang gandrung dengan <em>automation engineer</em> yang mampu meracik kode untuk yang bisa menggerakkan komputer yang bisa melakukan pengecekan aplikasi menjadi otomatis, tanpa perlu dilakukan oleh manusia. Banyak sekali kolega saya yang dulunya manual tester kini berlomba-lomba mempelajari bahasa pemrograman agar bisa  mengendalikan komputer untuk menjadi mesin penguji otomatis, mulai dari lini automation test website, automation mobile app hingga ke pembuatan server CI/CD yang menjadikannya terintegrasi satu sama lain. </p>\n<p>Lalu timbul lah stigma kalau manual tester sudah ketinggalan jaman, hari gini ga bisa koding tuh serasa terbelakang sekali saat disandingkan dengan automation engineers (test engineer / TE). padahal faktanya gak gitu juga keles :D . Quality Assurance (manual, yang tidak bisa koding) lalu menjadi Test engineer bukanlah bentuk dari \"Evolusi\" seorang tester, dua pekerjaan itu memiliki <strong>disiplin ilmu yang berbeda</strong>, ga semua orang suka ngoding, menatap text editor berwarna hitam bisa saja membuat orang mual-mual, seorang QA manual yang tidak bisa koding pun bisa saja memberikan dampak yang luarbiasa bernilai dalam menjaga kualitas aplikasi kita tetap prima.</p>\n<p>Jadi jika kamu merasa kurang tertarik belajar koding, jangan dulu gusar, karena ada beberapa hal yang bisa menjadi senjata pamungkas manual tester, percayalah manusia lebih piawai dalam menguji, karena kita telah dianugerahi logika berfikir, perasaan akan estetika dan memiliki ide kreatif yang unlimited dalam menguji aplikasi yang di test, ada beberapa hal berikut ini yang menurut saya bisa menjadi point-point andalan yang bisa kamu latih sebagai software quality assurance / analyst untuk tetap berperan aktif dalam meningkatkan kualitas produk kita, diantaranya:</p>\n<hr>\n<h2 id=\"mcetoc_1d39du73n3\"><img class=\"post__image\" src=\"https://fachrul.id/media/posts/5/action-plan-brainstorming-complex-212286.jpg\" alt=\"Photo by Startup Stock Photos from Pexels\" width=\"5472\" height=\"3648\"></h2>\n<h2 id=\"mcetoc_1d381jfno0\">Bug Buster</h2>\n<h4 id=\"mcetoc_1d349p3kb1\">Menemukan lebih banyak bugs</h4>\n<p>ini adalah tugas pokok dari seorang tester, biasanya manual tester lebih agresif dan usil dalam ngotak-ngatik aplikasinya, tidak seperti automation script yang sudah di buat alur pengujian nya sehingga komputer bisa meniru skenario yang mungkin dilakukan pengguna. Ketika komputer hanya bisa menguji hal sama yang sudah diprogram jangan terlalu berharap banyak kita menamukan bug baru yang berbeda, sesungguhnya manusia jauh lebih baik dalam menemukan bugs daripada mesin yang menguji hal yang sama berulang-ulang.</p>\n<h4 id=\"mcetoc_1d34a1erc2\">Lebih cepat memberikan timbal balik</h4>\n<p>Semua orang maunya dapat jawaban lebih cepat, saat ada build baru, programmer mau tau gimana fiturnya udah OK belum. Saat ngetest aplikasi/fitur baru tentu lebih baik diserahkan oleh manusia yang punya daya nalar dan karsa yang luar biasa, sehingga bisa mencari hal-hal apa saja yang diluar batas kewajaran. Sebenarnya komputer akan lebih baik jika melakukan test fitur yang dulu-dulu (regression test). Karena dalam kasus ini, aplikasi/fitur baru biasanya belum begitu stabil dan banyak perubahan tentu manual tester akan lebih cocok, sembari TE sedang menulis code baru untuk implementasi automationnya.</p>\n<h4 id=\"mcetoc_1d34ailtq3\"> </h4>\n<hr>\n<h2 id=\"mcetoc_1d382441f2\">Domain Knowledge</h2>\n<p>Memahami bisnis proses adalah hal yang sangat berharga, mengetahui jawaban kenapa fitur ini ada? apakah memang ini yang user inginkan? relasi antar fitur, sangat membantu tim menemukan celah masalah yang mungkin timbul di kemudian hari, sehingga bisa menjaga tim untuk tetap men-deliver value berkualitas bagi user </p>\n<h4 id=\"mcetoc_1d34atiu64\">Pahami kebutuhan user</h4>\n<p>Lihatlah cara user menggunakan aplikasi kamu, pelajari apa saja yang menjadi perhatian mereka, berempati terhadap pengguna aplikasi kita, bisa jadi pengguna kita adalah kakek-kakek yang gagap teknologi loh.</p>\n<h4 id=\"mcetoc_1d34b8hge6\">Gimana kalau...</h4>\n<p>Sebelum menghadiri design meeting ataupun sprint planing, kita bisa melakukan analisa lebih lanjut tentang requirement yang akan dikerjakan tim dair PO, apakah memang fitur ini dibutuhkan user? bagaimana dengan fitur A yang kemungkinan nyenggol nantinya? gimana kalo HP nya tiba-tiba mati/hilang sinyal/server down? gimana kalau gini,, gitu? jangan takut bertanya terkait fitur tersebut, bombardir tim dengan pertanyaan \"gimana kalo\", karena semakin banyak kita mendapatkan skenario perilaku user di kondisi tertentu maka akan sangat mengurangi ambuitas fitur tersebut</p>\n<hr>\n<h2 id=\"mcetoc_1d3824ojs3\">Technical Knowledge</h2>\n<p>Pemahaman teknis itu penting sekali dalam konteks menginvestigasi masalah yang timbul, ngusilin aplikasi, troubleshooting, pelajari bagaimana sistem bekerja dalam rangka mencari kelemahan sistem secara lebih efektif, tidak perlu terlalu dalam.</p>\n<p>Tetapi jangan sampai terjerat dengan sudut pandang teknis dari developer, karena terkadang seringkali ketika kita memahami kendala teknis yang timbul menjadikan tester malah kompromi dengan masalah yang timbul.</p>\n<h4 id=\"mcetoc_1d39bkn0d0\">Pelajari lebih jauh</h4>\n<p>Baca buku/blog terkait testing, datangi meetup atau confrence, tonton rekaman webminar di youtube, temukanlah inspirasi untuk meningkatkan proses testing kamu, lakukan perubahan, jangan mau terjebak di rutinitas</p>\n<hr>\n<h2 id=\"mcetoc_1d3825cbk4\">Communication</h2>\n<p>Kemampuan berkomunikasi adalah hal kritikal bagi tester, kita harus cakap dalam menyampaikan gagasan, dan mengajukan pertanyaan. Pahami apa yang bisnis mau dengan bertanya pada Product Owner, stakeholder, developer ataupun user sebenarnya, komunikasi disini tidak melulu soal bagaimana cara kita berbicara kepada orang lain, tetapi ahli juga dalam mendengarkan untuk mendapatkan pemahaman, sudut pandang lain secara menyeluruh.</p>\n<p>Sampaikanlah hal-hal yang menjadi perhatian kamu untuk dibuatkan test automatis kepada automation engineer, atau bahkan tanyakan hal apa saja yang sulit di otomatisasi komputer sehingga kita bisa tutupi di pengujian manual, lalu Developers sebenarnya sangat senang ketika bertanya, seperti pertanyaan soal bagaimana implementasi fitur itu dibuat, dan titik lemah dari implementasi itu sehingga perlu di test secara detail dan teliti. dan tanyakan bagaimana mereka mengujinya.</p>\n<h4 id=\"mcetoc_1d34ailtq3\">Lebih informatif</h4>\n<p>Pahami bagaimana cara melaporkan permasalahan, jangan sampai ketika orang lain baca tiket issue/bug kita mereka mengernyitkan dahi dan bertanya langsung ke kamu, ketika developer bertanya berkali-kali ke kamu soal laporan bug, artinya ada waktu yang terbuang, waktu kamu untuk mejelaskan langsung, dan waktu dev untuk memahami maksud kamu. maka dari itu, sangat penting sekali untuk menuliskan detail permasalah saat menemukan bug. cantumkanlah hal-hal informatif seperti: software version, environment, deskripsi permasalahan dari sisi user, cara reproduce masalah itu, dan tester yang baik akan memberikan informasi dengan jelas bagaimana seharusnya itu tidak terjadi dan harapannya.</p>\n<p>idealnya kamu bisa melakukan investigasi ala Sherlock Holmes dari hulu-hilir untuk menemukan tersangka penyebabnya</p>\n<hr>\n<h2 id=\"mcetoc_1d3825vqe5\">Organization</h2>\n<p>Mengatur prioritas, membuat rencana dan keahlian multitasking sangat erat dengan pekerjaan sehari-hari tester, sehingga seringkali dianggap remeh oleh orang lain sampai mengira testing selalu memerlukan waktu lama sampai selesai.</p>\n<h4 id=\"mcetoc_1d39btm1a1\">Bantu test engineer</h4>\n<p>Kamu bukanlah orang yang mahir koding, jadi jangan terlalu memaksakan mempelajari automation framework, lebih baik kolaborasi dengan test engineer untuk bisa merancang pola otomatisasi pengecekan yang baik dan efisien, sampaikan skenario mana yang sering dijalankan, dan membosankan untuk di test manual, oh ya, jangan lupa juga berikan pula pemahaman sudut pandang dari segi bisnis ke tim engineer (developer juga termasuk)</p>\n<hr>\n<h2 id=\"mcetoc_1d382r1rs7\">Emotions</h2>\n<p>Sebagai tester sudah tentu kita akan terlibat dengan banyak orang, dari mulai PO, Dev, Stakeholder, bahkan user. kita harus pintar membaca karakter orang lain, sedasng dalam keadaan mood seperti apa, sehingga bisa menggunakan gaya komunikasi yang cocok</p>\n<hr>\n<h2 id=\"mcetoc_1d3826db66\">Critical Thinking</h2>\n<p>Berfikir kritis diperlukan untuk mencari celah masalah aplikasi. Memperhatikan detail yang timbul, mungkin tidak tampak dari luar, sehingga perlu dibongkar lebih dalam, menyambungkan titik-titik sambungan antar fitur sehingga melahirkan kombinasi baru yang belum dijaga by sistem.</p>\n<h4 id=\"mcetoc_1d39c9v8q2\">Latihan berfikir kritis</h4>\n<p>Kita banyak insatal aplikasi di device kita, pernahkan kita berfikir \"kok gini sih fiturnya\" atau bahkan kita sering menemukan bugs saat penggunaan nya? latih terus daya kreatif kita dalam menggunakan aplikasi orang lain, dan bagaimana seharusnya fitur itu menjadi lebih baik, tester yang bagus biasanya tidak cepat puas</p>\n<hr>\n<p>Jadi pada intinya tidak ada yang saling menggantikan, robot belum bisa menggantikan manusia dalam test, kuncinya adalah saling bersinergi antara manual dan automation tester, karena saling memiliki sisi tajam nya masing-masing, dan tujuan akhirnya adalah \"Don't find bugs, prevent bugs!\"</p>\n<h4 id=\"mcetoc_1d34atiu64\"> </h4>\n<h4 id=\"mcetoc_1d34b514r5\"> </h4>\n<h4 id=\"mcetoc_1d34b8hge6\"> </h4>",
            "image": "https://fachrul.id/media/posts/5/board-broccoli-carrots-952478.jpg",
            "author": {
                "name": "Fachrul Choliluddin"
            },
            "tags": [
            ],
            "date_published": "2019-02-09T22:30:38+07:00",
            "date_modified": "2019-02-09T22:30:38+07:00"
        },
        {
            "id": "https://fachrul.id/saya-software-quality-tester-baru-bagaimana-cara-saya-memulai/",
            "url": "https://fachrul.id/saya-software-quality-tester-baru-bagaimana-cara-saya-memulai/",
            "title": "Saya Software Quality Tester baru, bagaimana cara saya memulai?",
            "summary": "<h2 id=\"mcetoc_1d30ltv460\">Salam kenal</h2>\n<p>Hai.. Senang sekali mendengarnya, selamat datang di dunia yang penuh tantangan, saya bisa merasakan aroma penasaran dari kamu :) memang betul mempelajari software testing akan sangat menarik dan penuh lika-liku, tapi tenang saja kamu berada di sumber yang (semoga saja) tepat. 😅</p>\n",
            "content_html": "<h2 id=\"mcetoc_1d30ltv460\">Salam kenal</h2>\n<p>Hai.. Senang sekali mendengarnya, selamat datang di dunia yang penuh tantangan, saya bisa merasakan aroma penasaran dari kamu :) memang betul mempelajari software testing akan sangat menarik dan penuh lika-liku, tapi tenang saja kamu berada di sumber yang (semoga saja) tepat. 😅</p>\n<hr>\n<h2 id=\"mcetoc_1d30lufqm1\">Overdosis informasi</h2>\n<p>Dengan adanya internet seharusnya semua akan lebih mudah belajar dan cepat menguasainya, tapi nyatanya banyak juga loh artikel sampah yang malah bikin kamu bingung, apalagi dalam tahap pemula, kamu akan dihadapi dengan banjirnya informasi yang akan bikin kamu merasa terlalu banyak yang harus dipelajari sekaligus. Tanamkan pemikiran \"Ga semua yang di internet itu benar\" kadang apa yang kita gugling belum tentu baik untuk diimplementasi ke kita juga. Jangan puas dari apa yang dituliskan disitu, tetaplah kritis bertanya.</p>\n<p>Hmmm.. Maka dari itu saya akan coba runut kan apa saja sebenernya yang bisa kamu pelajari di awal karir sebagai tester, kebanyakan materi yang saya bagikan nanti adalah buku ataupun online course (video), karena menurut saya ini adalah materi terbaik, dimana kamu belajar secara runut dan bertahap, tidak seperti dari posting blog ataupun stackoverflow result yang memiliki informasi tercecer dan langsung ke intinya.</p>\n<figure class=\"post__image post__image\" ><img src=\"https://fachrul.id/media/posts/4/adult-business-businessman-374820.jpg\" alt=\"belajar yuk\" width=\"5760\" height=\"3840\">\n<figcaption >source: <a href=\"https://www.pexels.com/photo/man-using-ballpoint-pen-374820/\">https://www.pexels.com/photo/man-using-ballpoint-pen-374820/</a></figcaption>\n</figure>\n<h3 id=\"mcetoc_1d30lvdhv2\">Rekomendasi materi belajar Software Quality</h3>\n<p>Disclaimer: ini subjektif pengalaman saya (@fahcrulCH) saja ya, mungkin tidak lengkap karena memang pengetahuan dan bacaan saya terbatas :) mohon informasinya apabila teman-teman punya referensi bagus, oh iya list ini pun akan sering saya update ketika menemukan sumber baru yang relevan</p>\n<h4 id=\"mcetoc_1d31n0dcn0\">Oke, kita mulai belajar dari mana nih?</h4>\n<p>Hmm sepengalaman saya, belajar bareng itu lebih asyik daripada belajar sendiri, maka dari itu kita harus join ke komunitas agar bisa interaksi tanya jawab juga dengan orang lain yang sudah pengalaman</p>\n<ul>\n<li>Indonesia Software Quality Assurance\n<ul>\n<li>Official page: <a href=\"http://www.isqa.club/\">http://www.isqa.club/</a> </li>\n<li>Meetup: <a href=\"https://www.meetup.com/Indonesia-Software-Quality-Assurance/\">https://www.meetup.com/Indonesia-Software-Quality-Assurance/</a></li>\n<li>Telegram: <a href=\"https://t.me/sqa_id\">https://t.me/sqa_id</a></li>\n<li><a href=\"https://www.youtube.com/channel/UC0ovCwgq4FKXfoF0kEV6XMQ\">YouTube</a></li>\n</ul>\n</li>\n<li>QA Malang\n<ul>\n<li>Blog dan Artikel: <a href=\"https://medium.com/qa-malang\">https://medium.com/qa-malang</a> </li>\n<li>Sosmed: <a href=\"https://www.instagram.com/qamalang/\">https://www.instagram.com/qamalang/</a> </li>\n</ul>\n</li>\n<li>Ministry of Testing \n<ul>\n<li>forum: <a href=\"https://club.ministryoftesting.com/\">https://club.ministryoftesting.com/</a></li>\n<li>pelatihan: <a href=\"https://www.ministryoftesting.com/dojo\">https://www.ministryoftesting.com/dojo</a></li>\n</ul>\n</li>\n</ul>\n<h4 id=\"mcetoc_1d31n8dtj1\">Saya sudah join di komunitas diatas, dan beberapa kesempatan juga sudah tanya ini-itu, lalu apa lagi?</h4>\n<p>Nah kali ini kita masuk ke pembelajaran bagaimana menjadi seorang tester yang mumpuni, tentu ada berbagai latihan untuk mengasah jurus-jurus jitu dalam menjaga dunia aplikasi tetap kondusif dan prima di user.</p>\n<ul>\n<li>Kursus online (yang gratis :)\n<ul>\n<li><a href=\"https://www.guru99.com/software-testing.html\">guru99 - software testing</a> </li>\n<li><a href=\"https://www.guru99.com/agile-testing-course.html\">guru99 - agile testing</a></li>\n<li><a href=\"https://www.guru99.com/mobile-testing.html\">guru99 - mobile testing</a></li>\n<li><a href=\"https://www.udacity.com/course/software-analysis-testing--ud333\">Software Analysis &amp; testing by Google</a> (📹)</li>\n<li><a href=\"https://www.oreilly.com/library/view/agile-testing-essentials/9780134683287/\">Agile testing essensial</a> (📹, 💵)</li>\n</ul>\n</li>\n<li>Rekomendasi buku testing:<br>\n<ul>\n<li><a href=\"https://www.bukalapak.com/p/hobi-koleksi/buku/teknik/lqmmjr-jual-e-book-otomatisasi-pengujian-perangkat-lunak-atau-software-testing-automation?from=product_owner&amp;product_owner=normal_seller\">Otomatisasi Pengujian Perangkat Lunak Atau Software Testing Automation </a> (📖, rekomendasi, penyusunan buku yang bagus dari konsep testing sampai membuat automation framework, berbahasa indonesia pula)</li>\n<li><a href=\"https://leanpub.com/howtobeatester\">How To Be A Tester</a>  (📖, membahas cara penulis menjadi seorang tester secara kebetulan)</li>\n<li><a href=\"https://www.oreilly.com/library/view/more-agile-testing/9780133749571/\">More agile testing</a> (💵, prinsip dari agile testing)</li>\n</ul>\n</li>\n</ul>\n<p>Satu hal lagi, akan lebih baik kalo kamu mempersiapkan untuk mengambil sertifikasi ISTQB (mahal sih, tapi minimal memahami konsep nya), untuk belajar ISTQB bisa melalui:</p>\n<ul>\n<li><a href=\"https://www.oreilly.com/library/view/software-testing-/9781780172996/\">Software Testing - An ISTQB-BCS Certified Tester Foundation guide</a> (📖, 💵 panduan mempelajari ISTQB yang bagus)</li>\n<li><a href=\"https://www.oreilly.com/library/view/advanced-software-testing/9781457189517/\">Advanced Software Testing - Vol. 1</a> (📖, 💵 belajar lebih mendalam)</li>\n<li><a href=\"https://www.oreilly.com/library/view/software-testing-foundations/9781492001454/\">Software Testing Foundations</a> (📖, 💵 konsep testing)</li>\n</ul>\n<h4 id=\"mcetoc_1d32dulk41\">Sebenarnya saya males baca sih, ada cara lain buat belajar?</h4>\n<p>oke saya paham, memang cara belajar setiap orang bisa beda-beda, ada yang visual, audio, bahkan kinetik, ada sih beberapa hal rekomendasi untuk belajar selain membaca seperti:</p>\n<ul>\n<li>kursus testing\n<ul>\n<li><a href=\"https://www.idstb.org/training.html\">Indonesia Software Testing Board (IDSTB)</a> ada bayak kursus dan ujian sertifikasi disini loh</li>\n</ul>\n</li>\n<li>podcast software testing\n<ul>\n<li><a href=\"https://testingpodcast.com/\" rel=\"nofollow\">Ragam testing podcast</a></li>\n<li><a href=\"https://joecolantonio.com/testtalks/\" rel=\"nofollow\">test talks</a> (favorit saya)</li>\n<li><a href=\"https://www.angryweasel.com/ABTesting/\">AB testing</a> (ini juga bagus)</li>\n<li><a href=\"http://testinginthepub.co.uk/testinginthepub/\" rel=\"nofollow\">testinginthepub</a></li>\n<li><a href=\"https://soundcloud.com/ministryoftesting\" rel=\"nofollow\">ministry of testing</a></li>\n<li><a href=\"http://pythontesting.net/test-podcast\" rel=\"nofollow\">Python testing</a></li>\n</ul>\n</li>\n<li>video\n<ul>\n<li>T<a href=\"https://testautomationu.applitools.com/\">est Automation University</a> (📹, kuliah gratis loh)</li>\n<li>Rekomendasi Youtube channel 📹:\n<ul>\n<li><a href=\"https://www.youtube.com/channel/UCO1aucBAJgFR8odzfXOZ5uw/featured\">Sekolah Koding</a></li>\n<li><a href=\"https://www.youtube.com/channel/UCO1aucBAJgFR8odzfXOZ5uw/featured\">Execute Automation</a></li>\n<li><a href=\"https://www.youtube.com/channel/UCzUaF3G8L5rfoh9xR6a51kg\">SauceLabs</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>Tapi saran saya sih tetap mempelajari lewat buku, ga mesti harus full satu buku dibaca semua kok, kita bisa lihat daftar isi terus lompat ke topik yang paling menarik buat dipelajari, atau metode membaca secara scanning biar cepat, karena faktanya \"too many books, so little time\" </p>\n<h3 id=\"mcetoc_1d30m0aul3\">Rekomendasi materi belajar Software Quality Engineer (QA Automation)</h3>\n<p>Materi berikut adalah pengembangan dari materi diatas (manual QA) dimana kamu sudah mulai familiar dengan exploratory testing dan mengerti apa yang harus di uji secara manual, lalu ingin mengembangkan karir menjadi seorang Software Quality Engineer / Software Development Engineer in Test (SDET)</p>\n<h4 id=\"mcetoc_1d31nihh32\">Bagaimana menjadi Software Quality Engineer (SDET) ?</h4>\n<p>Emang udah lancar testing manual? kalo begitu mari kita belajar automation agar kita bisa mendelegasikan komputer untuk melakukan checking</p>\n<p>Oh iya, untuk menguasai automation, tentu kita harus bisa ngoding, minimal ngerti algoritma, percabangan, pengulangan, ya kurang lebih basic bahasa pemrograman dahulu, baru lanjut ke implementasi tools automation (yang umumnya ngoding script selenium)</p>\n<p>Konsep:</p>\n<ul>\n<li><a href=\"https://leanpub.com/testingindevops\">A Practical Guide to Testing in DevOps </a> (📖, tantangan testing di era devops)</li>\n<li><a href=\"https://testautomationu.applitools.com/setting-a-foundation-for-successful-test-automation/index.html\">Setting a foundation for successful test automation</a> (📹, kuliah gratis)</li>\n<li><a href=\"https://www.oreilly.com/library/view/the-way-of/9781680502251/\">The Way of the Web Tester</a> (📖, 💵 buku yang menyenangkan untuk di baca, banyak ilustrasi lucu juga)</li>\n</ul>\n<p>Kursus pemrograman (jurus dasar koding):</p>\n<ul>\n<li><a href=\"http://codingdojo.org/\">CodingDojo</a></li>\n<li><a href=\"https://www.sekolahkoding.com/\" rel=\"nofollow\">Sekolah koding</a></li>\n<li><a href=\"https://www.codepolitan.com/interactive-coding\" rel=\"nofollow\">Codepolitan</a></li>\n<li><a href=\"https://www.dicoding.com/\" rel=\"nofollow\">Dicoding</a></li>\n<li><a href=\"https://kelaskita.com/index/kategori/pemrograman/\" rel=\"nofollow\">KelasKita</a></li>\n<li><a href=\"https://books.goalkicker.com\">Buku menguasai berbagai bahasa pemrograman </a> </li>\n<li><a href=\"https://github.com/EbookFoundation/free-programming-books\">Repo sumber bahasa pemrograman</a></li>\n</ul>\n<p>Automation tools:</p>\n<ul>\n<li><a href=\"https://www.oreilly.com/library/view/selenium-fundamentals/9781789804638/\">Selenium Fundamentals</a></li>\n<li>TDD/Unit test:<br>\n<ul>\n<li><a href=\"https://learntdd.in/\">Learn TDD</a> (tdd backend, frontend. gratis)</li>\n</ul>\n</li>\n<li>Automation website: \n<ul>\n<li><a href=\"https://www.guru99.com/selenium-tutorial.html\">guru99 - selenium tutorial</a> (kursus online, gratis)</li>\n</ul>\n</li>\n<li>Automation REST API/Web service:\n<ul>\n<li><a href=\"https://leanpub.com/testrestapi\">Automation REST API</a> (📖, berbayar)</li>\n<li><a href=\"https://www.youtube.com/watch?v=TeAU1n9UspI&amp;list=PL6tu16kXT9PpgqfMbMdzUzDenYgb0gbk0\">API testing with RestAssured</a> (📹, gratis)</li>\n<li><a href=\"https://testautomationu.applitools.com/exploring-service-apis-through-test-automation/index.html\">Exploring service apis through test automation</a> (📹, gratis)</li>\n</ul>\n</li>\n<li>Mobile app automation</li>\n<li>Terkait server/devops:\n<ul>\n<li><a href=\"https://testautomationu.applitools.com/scaling-tests-with-docker/index.html\">Scaling Tests with Docker</a> (📹, gratis)</li>\n</ul>\n</li>\n<li>Advance Testing:\n<ul>\n<li>Performance testing</li>\n<li>Security testing</li>\n<li>Testing documentation</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"mcetoc_1d31o7bn67\"> Mantap, saya sudah menguasai kebanyakan tools diatas, bahkan sekarang saya sudah memimpin tim QA loh, adakah yang bisa saya pelajari lagi?</h4>\n<p>Wuiih hebat, tentu ada, jangan berhenti belajar ya, karena tidak tahu belajar apa artinya stagnan, maka dari itu yuk kita pelajari lebih jauh bagaimana mengatur tim kita.</p>\n<ul>\n<li><a href=\"https://www.oreilly.com/library/view/the-expert-test/9781492018742/\">The Expert Test Manager </a> (📖, 💵)</li>\n<li><a href=\"https://www.safaribooksonline.com/library/view/optimizing-selenium-test/9781788476522/\">Optimizing Selenium Test Performance</a> (📹,💵)</li>\n<li><a href=\"https://www.safaribooksonline.com/library/view/design-a-selenium/9781789131048/\">Design a Selenium Test Framework from Scratch-Architect level</a> (💵)</li>\n</ul>",
            "image": "https://fachrul.id/media/posts/4/angry-annoyed-cafe-52608.jpg",
            "author": {
                "name": "Fachrul Choliluddin"
            },
            "tags": [
            ],
            "date_published": "2019-02-06T13:27:42+07:00",
            "date_modified": "2019-02-18T23:09:06+07:00"
        }
    ]
}
